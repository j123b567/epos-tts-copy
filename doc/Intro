

	This is a very flexible speech synthesis meant mostly as
	a research tool. It may be distributed under the terms
	of GPL version 2 (see doc/COPYING). For doing anything
	beyond the scope of that license, you need a written
	permission from the authors.


	suggested reading
	-----------------

doc/Files		what files are there and what they are for
doc/Changes		read this if you what to know what is new in this version
doc/*/*.doc   		how to modify the various components of ss (rules etc.)
/usr/lib/ss/cfg/ss.ini	edit to tune ss to your tastes and current needs
/usr/lib/ss/cfg/czech/czech.rul	  a sound example of the rules file

	compiling and running
	---------------------

UNIX:	invoke "configure" in the src directory, then "make" in the same
	directory to compile, "make install" to install, then "ss" to run.
DOS:	(in UNIX) invoke "make dos" in the src directory (see below), then 
	copy dos/ss?-?-?.zip to DOS, unzip it and continue with README.DOS.

	make targets
	------------
	Invoke the following in the "src" directory:

"make"		to compile "ss" (the executable file)
"make clean"    to remove any unnecessary or autogenerated files
"make install"  to install config files to the appropriate places
"make dist"     to make a distribution package src/../../ss?-?-?.tgz
		(the version number is taken from common.h); if a floppy
		happens to be inserted in /dev/fd0 and it has a mount
		point in /etc/fstab, a copy is made to the floppy.
"make gdb"	turn on debugging for the next recompilation
"make static"	link "ss" statically (for debugging purposes)
"make date"	just print the last modification date
"make dospc2"   to make a DOS package (dos/ss?-?-?.zip), PC Latin2
"make doskam"   ditto, Kamenicky Czech encoding
"make dos1250"  ditto, Code Page 1250
"make dos1252"  ditto, Code Page 1252
"make dos"	to list the other possible encodings


------------------------------------------------------------------------------ 

	OS requirements	
	---------------

	The following systems have been able to compile and run ss in the past:

	Linux, QNX, Digital UNIX, Ultrix, SVR4
	DOS (including version 95, NT)

	Only the Linux 2.x, 95 and NT ports are reasonably maintained, the rest
	may require some tweaking. Please contact us if you plan to use some
	other architecture and/or are willing to take care of some other port.
	We'll try to help you start.

	Please use GNU C++. If you can't, use Borland C++ (memory model LARGE
	in DOS), Borland C++ Builder or Watcom C. Nothing else's been checked yet.
	Your compiler's implicit integer and pointer size should be at least 
	32 bits. Otherwise just hack a bit.

	To use the scripts in ../aux, you'll need at least bash, awk, todos, 
	cstocs, tar, zip, gzip. "todos" is a filter which converts LF to CRLF,
	"cstocs" is an encoding convertor to be found in cstools, the others
	are presumably well-known.

