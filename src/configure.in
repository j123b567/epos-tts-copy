
dnl Process this file with autoconf to produce a configure script

AC_INIT(unit.cc)
AC_PREFIX_DEFAULT(/usr)

dnl AC_DEFINE_UNQUOTED(BASE_DIR, $libdir) didn't unquote enough

AC_ARG_ENABLE(DMALLOC, dmalloc debugging library (developers only))
AC_ARG_ENABLE(REGEX, regular expression substitution)

CCC="g++ c++ cc++ gcc cc"
AC_PROG_CXX
if test $GXX = yes; then 
	if $CXX -v 2>&1 | grep -q egcs
		then CFLAGS="-Wall -Wunused -pipe -gstabs+ -fdefer-pop"
		else CFLAGS="-Wall -Wunused -gstabs+"
	fi
	else CFLAGS=-O
fi

AC_LANG_CPLUSPLUS

AC_CHECK_PROGS(LNK, ld wlink, linker)
AC_CHECK_LIB(stdc++, main)
dnl AC_CHECK_LIB(c, regcomp)
dnl AC_CHECK_LIB(rx, regcomp)
dnl AC_CHECK_LIB(regex, regcomp)
AC_SEARCH_LIBS(regcomp, c rx regex)
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(lnsl, main)
AC_LANG_CPLUSPLUS
AC_PROG_INSTALL
AC_STDC_HEADERS
AC_HAVE_HEADERS(strings.h)
AC_HAVE_HEADERS(string.h)
AC_HAVE_HEADERS(io.h)
AC_HAVE_HEADERS(rx.h)
AC_HAVE_HEADERS(regex.h)
AC_HAVE_HEADERS(errno.h)
AC_HAVE_HEADERS(wait.h)
AC_HAVE_HEADERS(unistd.h)
AC_HAVE_HEADERS(unix.h)
AC_HAVE_HEADERS(signal.h)
AC_HAVE_HEADERS(syslog.h)
AC_HAVE_HEADERS(sys/soundcard.h)
AC_HAVE_HEADERS(sys/audio.h)
AC_HAVE_HEADERS(sys/stat.h)
AC_HAVE_HEADERS(sys/ioctl.h)
AC_HAVE_HEADERS(sys/socket.h)
AC_HAVE_HEADERS(sys/select.h)
AC_HAVE_HEADERS(sys/time.h)
AC_HAVE_HEADERS(sys/types.h)
AC_HAVE_HEADERS(sys/termios.h)
AC_HAVE_HEADERS(netdb.h)
AC_HAVE_HEADERS(netinet/in.h)
AC_HAVE_HEADERS(linux/kd.h)
AC_HAVE_HEADERS(sys/kernel.h)
AC_HAVE_HEADERS(sys/name.h)
AC_HAVE_FUNCS(strerror strdup fork getegid strcasecmp stricmp gethostname qnx_name_attach)

dnl   AC_CONST is unusable, rejects correct C++ implms (error if uninit'd const
dnl   and breaks __attribute__((const)) in g++
dnl   AC_INLINE is hopefully unnecessary for C++

AC_CACHE_CHECK("for glibc regex error codes",
   epos_cv_symb_regeend,
   AC_TRY_COMPILE(
	#include <sys/types.h>
	#ifdef HAVE_RX_H
	#include <rx.h>
	#else
	#ifdef HAVE_REGEX_H
	#include <regex.h>
	#else
	#include "rx.h"
	#endif
	#endif
	,
	int result = REG_EEND;
	return 0;,
	epos_cv_symb_regeend=yes,
	epos_cv_symb_regeend=no)
)
if test "$epos_cv_symb_regeend" = yes; then
   AC_DEFINE(HAVE_REG_EEND)
fi

AC_CACHE_CHECK("for regmatch_t.rm_so",
   epos_cv_struct_rm_so,
   AC_TRY_COMPILE(
	#include <sys/types.h>
	#ifdef HAVE_RX_H
	#include <rx.h>
	#else
	#ifdef HAVE_REGEX_H
	#include <regex.h>
	#else
	#include "rx.h"
	#endif
	#endif
	,
	regmatch_t rt;
	rt.rm_so;
	return 0;,
	epos_cv_struct_rm_so=yes,
	epos_cv_struct_rm_so=no)
)
if test "$epos_cv_struct_rm_so" = yes; then
   AC_DEFINE(HAVE_RM_SO)
fi


AC_CACHE_CHECK("for terminate",
   epos_cv_fn_terminate,
   AC_TRY_COMPILE(,
	throw new int; exit(1); terminate(),
	epos_cv_fn_terminate=yes,
	epos_cv_fn_terminate=no,
	epos_cv_fn_terminate=yes)
)
if test "$epos_cv_fn_terminate" = yes; then
   AC_DEFINE(HAVE_TERMINATE)
fi

AC_CACHE_CHECK("for built-in bool",
   epos_cv_type_bool,
   AC_TRY_COMPILE(,
	bool b,
	epos_cv_type_bool=yes,
	epos_cv_type_bool=no)
)
if test "$epos_cv_type_bool" = yes; then
   AC_DEFINE(HAVE_BOOL)
fi

AC_CACHE_CHECK("for explicit template instatiations",
   epos_cv_c_templ_inst,
   AC_TRY_COMPILE(
	template <class any_type> class some_type{}; template class some_type<int>;,
	,
	epos_cv_c_templ_inst=yes,
	epos_cv_c_templ_inst=no)
)
if test "$epos_cv_c_templ_inst" = yes; then
   AC_DEFINE(HAVE_TEMPL_INST)
fi

AC_CACHE_CHECK("for socklen_t",
   epos_cv_type_socklen,
   AC_TRY_COMPILE(
	#ifdef HAVE_SYS_SOCKET_H
	#include <sys/socket.h>
	#endif
	#include <sys/types.h>
	socklen_t x;,
	,
	epos_cv_type_socklen=yes,
	epos_cv_type_socklen=no)
)
if test "$epos_cv_type_socklen" = yes; then
   AC_DEFINE(HAVE_SOCKLEN_T)
fi

broken_enum_bitfields_test='\
	enum t { a, b, c };	\
	struct s		\
	{			\
		t m : 2;	\
		t n : 2;	\
		t o : 2;	\
	};			\
	s arr[[2]] = {{a, b, c},{c, c, c}};\
	void main()		\
	{			\
		exit (arr[[1]].n != 2);	\
	}\
	'

AC_CACHE_CHECK("for broken enum bitfields",
   epos_cv_c_broken_enum_bitfields,
   AC_TRY_RUN(
	$broken_enum_bitfields_test,
	epos_cv_c_broken_enum_bitfields=no,
	epos_cv_c_broken_enum_bitfields=yes,
	epos_cv_c_broken_enum_bitfields=yes)
)
if test "$epos_cv_c_broken_enum_bitfields" = yes; then
   AC_DEFINE(BROKEN_ENUM_BITFIELDS)
fi


AC_CONFIG_HEADER(config.h)
AC_OUTPUT(Makefile)

