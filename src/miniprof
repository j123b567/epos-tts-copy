Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 61.67      0.37     0.37    23232    15.93    16.36  lpcsyn::synmod(model, wavefm *)
 10.00      0.43     0.06      503   119.28   119.28  booltab<char>::booltab(char *)
 10.00      0.49     0.06      219   273.97   273.97  function<char>::function(char const *, char const *, bool)
  5.00      0.52     0.03   396668     0.08     0.08  hash_table<char, char>::fn(char const *)
  1.67      0.53     0.01  1697360     0.01     0.01  wavefm::sample(unsigned int)
  1.67      0.54     0.01   208139     0.05     0.05  strdup
  1.67      0.55     0.01   161285     0.06     0.06  slab<20>::release(void *)
  1.67      0.56     0.01   135107     0.07     0.09  slab<20>::alloc(void)
  1.67      0.57     0.01    24170     0.41     0.41  lpcfloat::frobmod(int, segment, model *, int &, int &)
  1.67      0.58     0.01     4355     2.30    91.85  lpcsyn::synseg(voice *, segment, wavefm *)
  1.67      0.59     0.01     2832     3.53     3.53  strip(char *)
  1.67      0.60     0.01       40   250.00   369.98  hash_table<char, char>::rehash(int)
  0.00      0.60     0.00  5319039     0.00     0.00  unit::sanity(void)
  0.00      0.60     0.00  2479522     0.00     0.00  debug_wanted(int, int)
  0.00      0.60     0.00  1114546     0.00     0.00  booltab<char>::ismember(char)
  0.00      0.60     0.00   924760     0.00     0.00  unit::Next(char)
  0.00      0.60     0.00   860192     0.00     0.00  unit::inside(void)
  0.00      0.60     0.00   793432     0.00     0.00  unit::LeftMost(char)
  0.00      0.60     0.00   329814     0.00     0.00  unit::Prev(char)
  0.00      0.60     0.00   308656     0.00     0.00  function<char>::xlat(char)
  0.00      0.60     0.00   293933     0.00     0.08  hash_table<char, char>::translate(char const *)
  0.00      0.60     0.00   252699     0.00     0.03  hash_table<char, char>::dissolvetree(hsearchtree<char, char> *)
  0.00      0.60     0.00   237306     0.00     0.00  unit::RightMost(char)
  0.00      0.60     0.00   214986     0.00     0.08  unit::subst(hash *, int, char *, char *, char *, char *, char *)
  0.00      0.60     0.00   195557     0.00     0.00  hash_table<char, char>::rehash_tree(hsearchtree<char, char> *)
  0.00      0.60     0.00   115498     0.00     0.00  r_regress::apply(unit *)
  0.00      0.60     0.00   115498     0.00     0.00  unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *)
  0.00      0.60     0.00   103621     0.00     0.00  balance(void)
  0.00      0.60     0.00   103621     0.00     0.09  tree_alloc(void)
  0.00      0.60     0.00   103621     0.00     0.06  tree_delete(void *)
  0.00      0.60     0.00   102735     0.00     0.26  hash_table<char, char>::add(char const *, char const *)
  0.00      0.60     0.00   100724     0.00     0.22  block_rule::apply_current(unit *)
  0.00      0.60     0.00    44471     0.00     0.00  unit::gather(char *, char *, bool)
  0.00      0.60     0.00    44468     0.00     0.00  unit::gather(int *, bool, bool)
  0.00      0.60     0.00    31486     0.00     0.09  marker::operator new(unsigned int)
  0.00      0.60     0.00    31010     0.00     0.00  unit::effective(FIT_IDX)
  0.00      0.60     0.00    29824     0.00     0.00  r_inside::apply(unit *)
  0.00      0.60     0.00    29309     0.00     0.00  slab<40>::release(void *)
  0.00      0.60     0.00    27262     0.00     0.00  unit::operator delete(void *)
  0.00      0.60     0.00    27262     0.00     0.00  unit::operator new(unsigned int)
  0.00      0.60     0.00    27262     0.00     0.00  slab<40>::alloc(void)
  0.00      0.60     0.00    27018     0.00     0.00  r_regex::apply(unit *)
  0.00      0.60     0.00    27018     0.00     0.00  unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *)
  0.00      0.60     0.00    24660     0.00     0.00  marker::marker(void)
  0.00      0.60     0.00    22114     0.00     0.00  unit::set_father(unit *)
  0.00      0.60     0.00    21920     0.00     0.11  marker::derived(void)
  0.00      0.60     0.00    21920     0.00     0.02  marker::merge(marker *, marker **)
  0.00      0.60     0.00    21424     0.00     0.08  unit::seg(hash *)
  0.00      0.60     0.00    21424     0.00     0.08  hash::translate_int(char const *)
  0.00      0.60     0.00    20842     0.00     0.00  unit::insert_end(unit *, unit *)
  0.00      0.60     0.00    19152     0.00     0.85  unit::subst(hash *, SUBST_METHOD)
  0.00      0.60     0.00    17912     0.00     0.05  marker::~marker(void)
  0.00      0.60     0.00    17898     0.00     0.00  unit::insert(char, bool, char, booltab<char> *, booltab<char> *)
  0.00      0.60     0.00    15336     0.00     0.97  r_subst::apply(unit *)
  0.00      0.60     0.00    15336     0.00     0.97  unit::relabel(hash *, SUBST_METHOD, char)
  0.00      0.60     0.00    15091     0.00     0.00  agent_profile(char const *)
  0.00      0.60     0.00    14668     0.00     0.06  marker::operator delete(void *)
  0.00      0.60     0.00    13640     0.00     0.00  unit::unit(char, int)
  0.00      0.60     0.00    11669     0.00     0.00  ywrite(int, void const *, int)
  0.00      0.60     0.00    11110     0.00     0.29  unit::project_one_level(float)
  0.00      0.60     0.00    10974     0.00     0.00  sputs(char const *, int)
  0.00      0.60     0.00    10896     0.00     0.06  unit::prospoint(FIT_IDX, int, float)
  0.00      0.60     0.00    10218     0.00     0.00  parser::chrlev(unsigned char)
  0.00      0.60     0.00    10218     0.00     0.00  parser::gettoken(void)
  0.00      0.60     0.00     9842     0.00     0.00  r_block::apply(unit *)
  0.00      0.60     0.00     9820     0.00     0.33  unit::project_extents(void)
  0.00      0.60     0.00     9499     0.00     0.00  context::leave(void)
  0.00      0.60     0.00     9498     0.00     0.00  context::enter(void)
  0.00      0.60     0.00     9358     0.00     0.00  unit::syllabify(char *)
  0.00      0.60     0.00     8352     0.00     0.08  r_contour::apply(unit *)
  0.00      0.60     0.00     8352     0.00     0.08  unit::contour(char, int *, int, int, FIT_IDX, bool)
  0.00      0.60     0.00     7770     0.00     0.00  encode_string(unsigned char *, int, bool)
  0.00      0.60     0.00     7770     0.00     0.00  encode_string(char *, int, bool)
  0.00      0.60     0.00     7546     0.00     0.00  select_socket(bool)
  0.00      0.60     0.00     7546     0.00    56.74  agent::timeslice(void)
  0.00      0.60     0.00     6894     0.00     0.24  r_if::apply(unit *)
  0.00      0.60     0.00     6826     0.00     0.00  marker::marker(FIT_IDX, bool, int, marker *, float)
  0.00      0.60     0.00     6808     0.00     0.97  r_with::apply(unit *)
  0.00      0.60     0.00     6328     0.00     0.00  marker::write_ssif(char *)
  0.00      0.60     0.00     5548     0.00     0.05  marker::operator<(marker)
  0.00      0.60     0.00     5542     0.00     0.00  r_switch::apply(unit *)
  0.00      0.60     0.00     5542     0.00     0.00  unit::count(char)
  0.00      0.60     0.00     5536     0.00     0.00  r_raise::apply(unit *)
  0.00      0.60     0.00     5536     0.00     0.00  unit::raise(booltab<char> *, booltab<char> *, char, char)
  0.00      0.60     0.00     5491     0.00     0.00  str2enum(char const *, char const *, int)
  0.00      0.60     0.00     5180     0.00     0.00  stretch_sleep_table(int)
  0.00      0.60     0.00     4880     0.00     0.00  encode_to_sampa(unsigned char, int)
  0.00      0.60     0.00     4880     0.00     0.00  unit::write_ssif_head(char *)
  0.00      0.60     0.00     4531     0.00     0.26  a_protocol::run(void)
  0.00      0.60     0.00     4531     0.00     0.00  sgets(char *, int, int, char *)
  0.00      0.60     0.00     4530     0.00     0.00  a_ttscp::name(void)
  0.00      0.60     0.00     4320     0.00     0.00  agent::block(int)
  0.00      0.60     0.00     4319     0.00     0.00  server_reinit_check(void)
  0.00      0.60     0.00     4315     0.00     0.00  yread(int, void *, int)
  0.00      0.60     0.00     4297     0.00     0.00  wavefm::get_ophase_len(w_ophase const *)
  0.00      0.60     0.00     4117     0.00     0.00  hash_table<char, a_ttscp>::fn(char const *)
  0.00      0.60     0.00     3889     0.00     0.00  idle(void)
  0.00      0.60     0.00     3711     0.00     0.00  reply(char const *)
  0.00      0.60     0.00     3711     0.00     0.00  sendstring(char const *)
  0.00      0.60     0.00     3404     0.00     0.00  r_near::apply(unit *)
  0.00      0.60     0.00     3404     0.00     0.00  unit::contains(char, booltab<char> *)
  0.00      0.60     0.00     3231     0.00     0.00  agent::~agent(void)
  0.00      0.60     0.00     3231     0.00     0.00  agent::agent(DATA_TYPE, DATA_TYPE)
  0.00      0.60     0.00     3227     0.00     0.00  sched_sel(void)
  0.00      0.60     0.00     3227     0.00     0.00  agent::schedule(void)
  0.00      0.60     0.00     2993     0.00     0.00  unit::~unit(void)
  0.00      0.60     0.00     2562     0.00     0.00  unit::unlink(REPARENT)
  0.00      0.60     0.00     2381     0.00     0.00  hash_table<char, a_ttscp>::translate(char const *)
  0.00      0.60     0.00     2365     0.00     0.00  make_agent(char *, agent *)
  0.00      0.60     0.00     2156     0.00     0.54  a_ttscp::run_command(char *)
  0.00      0.60     0.00     2150     0.00     0.00  parser::regist(char, char const *)
  0.00      0.60     0.00     2132     0.00     0.00  r_syll::apply(unit *)
  0.00      0.60     0.00     2132     0.00     0.00  unit::syllabify(char, char *)
  0.00      0.60     0.00     1985     0.00     0.00  hash_table<char, option>::fn(char const *)
  0.00      0.60     0.00     1935     0.00     0.00  agent::pass(void *)
  0.00      0.60     0.00     1933     0.00     5.17  text::getline(char *)
  0.00      0.60     0.00     1796     0.00     0.00  hash_table<char, a_ttscp>::dissolvetree(hsearchtree<char, a_ttscp> *)
  0.00      0.60     0.00     1729     0.00     0.00  cow(cowabilium **, int, int, int)
  0.00      0.60     0.00     1708     0.00     0.00  r_nothing::apply(unit *)
  0.00      0.60     0.00     1555     0.00     0.00  ioctlable(int)
  0.00      0.60     0.00     1304     0.00     0.00  memdup(void *, int)
  0.00      0.60     0.00     1275     0.00     0.00  hash_table<char, option>::translate(char const *)
  0.00      0.60     0.00     1272     0.00     0.00  unit::split(unit *)
  0.00      0.60     0.00     1272     0.00     0.00  unit::syll_break(char *, unit *)
  0.00      0.60     0.00     1188     0.00     0.00  get_words(char *, char **, int)
  0.00      0.60     0.00     1153     0.00     0.00  next_rule(text *, hash *, int *)
  0.00      0.60     0.00     1153     0.00   133.93  parse_rule(text *, hash *, int *)
  0.00      0.60     0.00     1151     0.00     0.00  rule_weight(char const *, text *)
  0.00      0.60     0.00     1134     0.00     0.00  option_struct(char const *, hash_table<char, option> *)
  0.00      0.60     0.00     1133     0.00     0.00  wavefm::flush(void)
  0.00      0.60     0.00     1125     0.00     0.00  stream::foreground(void)
  0.00      0.60     0.00     1125     0.00     0.00  a_output::foreground(void)
  0.00      0.60     0.00     1125     0.00     0.00  a_output::report(bool, int)
  0.00      0.60     0.00     1091     0.00     1.05  set_option(option *, char const *, void *)
  0.00      0.60     0.00     1082     0.00     0.00  cow_configuration(configuration **)
  0.00      0.60     0.00     1061     0.00     0.00  split_string(char *)
  0.00      0.60     0.00     1060     0.00     0.00  r_choice::apply(unit *)
  0.00      0.60     0.00     1022     0.00     0.00  wavefm::update_ophase(void)
  0.00      0.60     0.00      987     0.00     0.00  rule::check_child(rule *)
  0.00      0.60     0.00      970     0.00     0.00  rule::~rule(void)
  0.00      0.60     0.00      970     0.00     0.04  rule::rule(char *)
  0.00      0.60     0.00      968     0.00     0.05  rule::set_dbg_tag(text *)
  0.00      0.60     0.00      968     0.00     0.00  rule::set_level(char, char)
  0.00      0.60     0.00      913     0.00     0.00  rule::verify(void)
  0.00      0.60     0.00      868     0.00     0.09  hash_table<char, a_ttscp>::add(char const *, a_ttscp const *)
  0.00      0.60     0.00      868     0.00     0.06  hash_table<char, a_ttscp>::remove(char const *)
  0.00      0.60     0.00      860     0.00     0.00  a_io::~a_io(void)
  0.00      0.60     0.00      860     0.00     0.00  a_io::a_io(char const *, DATA_TYPE, DATA_TYPE)
  0.00      0.60     0.00      708     0.00     0.00  unit::absol(char)
  0.00      0.60     0.00      708     0.00     0.00  r_absol::apply(unit *)
  0.00      0.60     0.00      700     0.00     0.00  rule::check_children(void)
  0.00      0.60     0.00      695     0.00     0.00  wavefm::translate(void)
  0.00      0.60     0.00      673     0.00     0.00  cow_unstring(cowabilium *, option *)
  0.00      0.60     0.00      652     0.00     0.00  cow_free(cowabilium *, option *, void *)
  0.00      0.60     0.00      648     0.00     0.00  reply(char const *, context *)
  0.00      0.60     0.00      647     0.00     0.00  access_level(int)
  0.00      0.60     0.00      647     0.00     1.05  cmd_setl(char *, a_ttscp *)
  0.00      0.60     0.00      647     0.00     1.05  do_set(char *, context *)
  0.00      0.60     0.00      647     0.00     1.05  set_option(option *, char const *)
  0.00      0.60     0.00      561     0.00     0.00  function<char>::ismember(char)
  0.00      0.60     0.00      556     0.00     0.08  hash_table<char, option>::add(char const *, option const *)
  0.00      0.60     0.00      503     0.00     0.00  void unexcl<char>(char *)
  0.00      0.60     0.00      480     0.00     0.00  wavefm::get_ophase_buff(w_ophase const *)
  0.00      0.60     0.00      436     0.00     0.00  context::~context(void)
  0.00      0.60     0.00      436     0.00     0.00  hash_table<char, a_ttscp>::~hash_table(void)
  0.00      0.60     0.00      436     0.00     0.00  context::context(int, int)
  0.00      0.60     0.00      436     0.00     0.00  hash_table<char, a_ttscp>::hash_table(int)
  0.00      0.60     0.00      436     0.00     0.00  hash_table<char, a_ttscp>::cfg_rehash(int, int, int)
  0.00      0.60     0.00      436     0.00     0.00  cow_claim(void)
  0.00      0.60     0.00      436     0.00     0.00  cow_unclaim(configuration *)
  0.00      0.60     0.00      435     0.00     0.00  make_nonblocking(int)
  0.00      0.60     0.00      435     0.00     0.00  make_rnd_passwd(char *, int)
  0.00      0.60     0.00      434     0.00     0.00  a_protocol::~a_protocol(void)
  0.00      0.60     0.00      434     0.00     0.00  a_protocol::a_protocol(void)
  0.00      0.60     0.00      434     0.00     0.09  a_ttscp::a_ttscp(int, int)
  0.00      0.60     0.00      434     0.00     0.00  async_close(int)
  0.00      0.60     0.00      434     0.00     0.00  a_accept::name(void)
  0.00      0.60     0.00      434     0.00     0.09  a_accept::run(void)
  0.00      0.60     0.00      432     0.00     0.00  a_ttscp::~a_ttscp(void)
  0.00      0.60     0.00      430     0.00     0.00  parser::~parser(void)
  0.00      0.60     0.00      430     0.00     0.00  stream::~stream(void)
  0.00      0.60     0.00      430     0.00     0.00  a_ascii::~a_ascii(void)
  0.00      0.60     0.00      430     0.00     0.00  a_input::~a_input(void)
  0.00      0.60     0.00      430     0.00     0.00  a_rules::~a_rules(void)
  0.00      0.60     0.00      430     0.00     0.00  a_output::~a_output(void)
  0.00      0.60     0.00      430     0.00     0.00  unit::unit(char, parser *)
  0.00      0.60     0.00      430     0.00     0.05  parser::parser(char const *, int)
  0.00      0.60     0.00      430     0.00     0.00  stream::stream(char *, context *)
  0.00      0.60     0.00      430     0.00     0.00  a_ascii::a_ascii(void)
  0.00      0.60     0.00      430     0.00     0.00  a_input::a_input(char const *)
  0.00      0.60     0.00      430     0.00     0.00  a_rules::a_rules(void)
  0.00      0.60     0.00      430     0.00     0.00  a_output::a_output(char const *, DATA_TYPE)
  0.00      0.60     0.00      430     0.00     0.00  parser::alias(char const *, char const *)
  0.00      0.60     0.00      430     0.00    55.14  rules::apply(unit *)
  0.00      0.60     0.00      430     0.00     0.00  stream::apply(agent *, int)
  0.00      0.60     0.00      430     0.00     0.00  cmd_apply(char *, a_ttscp *)
  0.00      0.60     0.00      430     0.00     0.00  cmd_stream(char *, a_ttscp *)
  0.00      0.60     0.00      430     0.00     0.00  agent::finis(bool)
  0.00      0.60     0.00      430     0.00     0.00  stream::finis(bool)
  0.00      0.60     0.00      430     0.00     0.00  parser::init(SYMTABLE)
  0.00      0.60     0.00      430     0.00     0.00  parser::initables(SYMTABLE)
  0.00      0.60     0.00      430     0.00     0.00  a_input::mktask(int)
  0.00      0.60     0.00      430     0.00     0.00  a_ascii::name(void)
  0.00      0.60     0.00      430     0.00     0.00  a_input::name(void)
  0.00      0.60     0.00      430     0.00     0.00  a_rules::name(void)
  0.00      0.60     0.00      430     0.00     0.00  a_output::name(void)
  0.00      0.60     0.00      430     0.00     7.49  unit::project(char)
  0.00      0.60     0.00      430     0.00     0.00  stream::release_agents(void)
  0.00      0.60     0.00      430     0.00     0.05  a_ascii::run(void)
  0.00      0.60     0.00      430     0.00     0.00  a_input::run(void)
  0.00      0.60     0.00      430     0.00    55.14  a_rules::run(void)
  0.00      0.60     0.00      430     0.00     0.05  str2units(char const *)
  0.00      0.60     0.00      417     0.00     1.05  set_option(char *, char *, void *, hash_table<char, option> *)
  0.00      0.60     0.00      402     0.00     0.00  parse_cfg_str(char *)
  0.00      0.60     0.00      370     0.00     0.00  hash_table<char, char>::cfg_rehash(int, int, int)
  0.00      0.60     0.00      360     0.00     0.06  hash_table<char, option>::dissolvetree(hsearchtree<char, option> *)
  0.00      0.60     0.00      346     0.00     0.00  internal_code(wchar_t, unsigned char)
  0.00      0.60     0.00      246     0.00     6.26  hash::~hash(void)
  0.00      0.60     0.00      246     0.00     6.26  hash_table<char, char>::~hash_table(void)
  0.00      0.60     0.00      246     0.00     0.00  fit(char)
  0.00      0.60     0.00      242     0.00     0.00  r_contour::~r_contour(void)
  0.00      0.60     0.00      242     0.00     0.04  r_contour::r_contour(char *)
  0.00      0.60     0.00      223     0.00     0.00  load_charset(char const *)
  0.00      0.60     0.00      222     0.00     0.00  a_segs::~a_segs(void)
  0.00      0.60     0.00      222     0.00     0.00  a_segs::a_segs(void)
  0.00      0.60     0.00      222     0.00     7.30  r_seg::apply(unit *)
  0.00      0.60     0.00      222     0.00     0.00  a_segs::name(void)
  0.00      0.60     0.00      222     0.00     7.49  a_segs::run(void)
  0.00      0.60     0.00      222     0.00     7.30  unit::segs(char, hash *)
  0.00      0.60     0.00      222     0.00     0.00  unit::write_segs(segment *, int, int)
  0.00      0.60     0.00      218     0.00     0.00  r_regress::~r_regress(void)
  0.00      0.60     0.00      218     0.00   512.62  r_regress::r_regress(char *)
  0.00      0.60     0.00      217     0.00     0.25  cmd_data(char *, a_ttscp *)
  0.00      0.60     0.00      216     0.00     0.00  a_disconnector::disconnect(a_protocol *)
  0.00      0.60     0.00      216     0.00     0.06  a_ttscp::disconnect(void)
  0.00      0.60     0.00      216     0.00     0.00  a_disconnector::name(void)
  0.00      0.60     0.00      216     0.00     0.16  put_into_option_set(option *)
  0.00      0.60     0.00      216     0.00     0.00  a_disconnector::run(void)
  0.00      0.60     0.00      216     0.00     0.00  severity(int)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::~wavefm(void)
  0.00      0.60     0.00      215     0.00     0.00  a_synth::~a_synth(void)
  0.00      0.60     0.00      215     0.00     0.00  oa_wavefm::~oa_wavefm(void)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::wavefm(voice *)
  0.00      0.60     0.00      215     0.00     0.00  oa_wavefm::oa_wavefm(char const *)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::attach(int)
  0.00      0.60     0.00      215     0.00     0.12  cmd_delhandle(char *, a_ttscp *)
  0.00      0.60     0.00      215     0.00     0.00  cmd_done(char *, a_ttscp *)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::detach(int)
  0.00      0.60     0.00      215     0.00     0.00  do_relax(void *, DATA_TYPE)
  0.00      0.60     0.00      215     0.00     0.00  downsample_factor(int, int)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::get_total_len(void)
  0.00      0.60     0.00      215     0.00     0.00  a_synth::name(void)
  0.00      0.60     0.00      215     0.00     0.00  agent::relax(void)
  0.00      0.60     0.00      215     0.00     0.00  a_output::run(void)
  0.00      0.60     0.00      215     0.00     0.00  oa_wavefm::run(void)
  0.00      0.60     0.00      215     0.00     0.00  sync_soundcard(int)
  0.00      0.60     0.00      215     0.00     0.00  voice_switch(char const *)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::write_header(void)
  0.00      0.60     0.00      215     0.00     0.00  wavefm::written_bytes(void)
  0.00      0.60     0.00      208     0.00     0.00  a_ssif::~a_ssif(void)
  0.00      0.60     0.00      208     0.00     0.00  a_ssif::a_ssif(void)
  0.00      0.60     0.00      208     0.00     0.00  a_ssif::name(void)
  0.00      0.60     0.00      208     0.00     7.49  a_ssif::run(void)
  0.00      0.60     0.00      208     0.00     0.00  unit::write_ssif(char *, int, int)
  0.00      0.60     0.00      185     0.00     1.62  block_rule::~block_rule(void)
  0.00      0.60     0.00      185     0.00     0.04  block_rule::block_rule(void)
  0.00      0.60     0.00      185     0.00    34.10  hash::hash(hash *)
  0.00      0.60     0.00      185     0.00    34.10  hash_table<char, char>::hash_table(hash_table<char, char> *)
  0.00      0.60     0.00      185     0.00    40.41  block_rule::load_rules(rule *, text *, hash *)
  0.00      0.60     0.00      183     0.00     0.00  block_rule::set_level(char, char)
  0.00      0.60     0.00      157     0.00     0.00  esc(char)
  0.00      0.60     0.00      155     0.00     0.00  alloc_code(wchar_t, unsigned char, int)
  0.00      0.60     0.00      155     0.00     0.00  do_alloc_code(wchar_t, unsigned char)
  0.00      0.60     0.00      154     0.00     0.06  hash_table<char, option>::remove(char const *)
  0.00      0.60     0.00      141     0.00     0.08  invoke_set_action(option *, char const *)
  0.00      0.60     0.00      140     0.00     0.00  r_regex::~r_regex(void)
  0.00      0.60     0.00      140     0.00     0.13  r_regex::r_regex(char *)
  0.00      0.60     0.00      123     0.00     0.11  resolve_vars(char *, hash *, text *)
  0.00      0.60     0.00      112     0.00     0.00  wavefm::flush_deferred(void)
  0.00      0.60     0.00      111     0.00     0.00  oa_seg::~oa_seg(void)
  0.00      0.60     0.00      111     0.00     0.00  oa_seg::oa_seg(char const *)
  0.00      0.60     0.00      111     0.00     0.00  a_synth::a_synth(void)
  0.00      0.60     0.00      111     0.00     0.00  voice::claim_all(void)
  0.00      0.60     0.00      111     0.00     0.00  a_output::decode(void)
  0.00      0.60     0.00      111     0.00     0.00  oa_seg::insize(void)
  0.00      0.60     0.00      111     0.00  3603.61  a_synth::run(void)
  0.00      0.60     0.00      111     0.00  3603.60  synth::synsegs(voice *, segment *, int, wavefm *)
  0.00      0.60     0.00      105     0.00     0.00  r_block::~r_block(void)
  0.00      0.60     0.00      105     0.00     0.04  r_block::r_block(text *, hash *)
  0.00      0.60     0.00      105     0.00     0.00  mbrsyn::restart_mbrola(voice *)
  0.00      0.60     0.00      104     0.00     0.00  a_syn::~a_syn(void)
  0.00      0.60     0.00      104     0.00     0.42  cond_rule::~cond_rule(void)
  0.00      0.60     0.00      104     0.00     0.00  oa_ascii<6>::~oa_ascii(void)
  0.00      0.60     0.00      104     0.00     0.00  a_syn::a_syn(void)
  0.00      0.60     0.00      104     0.00     0.00  a_synth::a_synth(DATA_TYPE, DATA_TYPE)
  0.00      0.60     0.00      104     0.00     0.04  cond_rule::cond_rule(char *, text *, hash *)
  0.00      0.60     0.00      104     0.00     0.00  oa_ascii<6>::oa_ascii(char const *)
  0.00      0.60     0.00      104     0.00     0.00  wavefm::become(void *, int)
  0.00      0.60     0.00      104     0.00     0.00  cond_rule::check_children(void)
  0.00      0.60     0.00      104     0.00     0.00  wavefm::chunk_become(char *, int)
  0.00      0.60     0.00      104     0.00     0.00  oa_ascii<6>::decode(void)
  0.00      0.60     0.00      104     0.00     0.00  decode_string(unsigned char *, int)
  0.00      0.60     0.00      104     0.00     0.00  decode_string(char *, int)
  0.00      0.60     0.00      104     0.00     0.00  oa_ascii<6>::insize(void)
  0.00      0.60     0.00      104     0.00     0.00  a_syn::run(void)
  0.00      0.60     0.00      104     0.00     0.00  mbrsyn::synssif(voice *, char *, wavefm *)
  0.00      0.60     0.00       93     0.00     0.00  block_rule::check_children(void)
  0.00      0.60     0.00       93     0.00     0.00  compose_pathname(char const *, char const *, char const *)
  0.00      0.60     0.00       72     0.00     0.00  enum2str(int, char const *)
  0.00      0.60     0.00       61     0.00     0.00  hash_table<char, char>::hash_table(int)
  0.00      0.60     0.00       58     0.00     0.00  r_choice::~r_choice(void)
  0.00      0.60     0.00       58     0.00     0.04  r_choice::r_choice(text *, hash *)
  0.00      0.60     0.00       57     0.00     0.00  r_progress::~r_progress(void)
  0.00      0.60     0.00       57     0.00   512.62  r_progress::r_progress(char *)
  0.00      0.60     0.00       55     0.00     6.26  hashing_rule::~hashing_rule(void)
  0.00      0.60     0.00       55     0.00     0.05  hashing_rule::hashing_rule(char *)
  0.00      0.60     0.00       55     0.00   632.48  hashing_rule::load_hash(void)
  0.00      0.60     0.00       55     0.00   632.48  hashing_rule::verify(void)
  0.00      0.60     0.00       49     0.00     0.00  alloc_option(option *, OPT_STRUCT)
  0.00      0.60     0.00       48     0.00     0.00  fopen(char const *, char const *, char const *)
  0.00      0.60     0.00       44     0.00   804.46  hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char))
  0.00      0.60     0.00       43     0.00     0.00  r_if::~r_if(void)
  0.00      0.60     0.00       43     0.00     0.00  r_if::r_if(char *, text *, hash *)
  0.00      0.60     0.00       43     0.00     0.00  r_if::set_level(char, char)
  0.00      0.60     0.00       43     0.00     0.05  text::subfile(char const *)
  0.00      0.60     0.00       43     0.00     0.00  text::superfile(void)
  0.00      0.60     0.00       41     0.00     0.00  r_inside::~r_inside(void)
  0.00      0.60     0.00       41     0.00   119.28  r_inside::r_inside(char *, text *, hash *)
  0.00      0.60     0.00       40     0.00     0.00  hash_table<char, char>::rehash(void)
  0.00      0.60     0.00       34     0.00     6.26  r_subst::~r_subst(void)
  0.00      0.60     0.00       34     0.00     0.05  r_subst::r_subst(char *)
  0.00      0.60     0.00       34     0.00     0.00  r_subst::set_level(char, char)
  0.00      0.60     0.00       30     0.00     0.00  hash_table<char, file>::dissolvetree(hsearchtree<char, file> *)
  0.00      0.60     0.00       30     0.00     0.01  hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *)
  0.00      0.60     0.00       28     0.00     0.00  text::~text(void)
  0.00      0.60     0.00       28     0.00     0.10  text::text(char const *, char const *, char const *, char const *, bool)
  0.00      0.60     0.00       28     0.00     0.00  text::done(void)
  0.00      0.60     0.00       27     0.00     1.21  lang::add_soft_option(char const *)
  0.00      0.60     0.00       27     0.00     0.00  hash_table<char, option>::get_random(void)
  0.00      0.60     0.00       23     0.00   103.30  load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *)
  0.00      0.60     0.00       22     0.00     0.00  r_switch::~r_switch(void)
  0.00      0.60     0.00       22     0.00     0.04  r_switch::r_switch(text *, hash *)
  0.00      0.60     0.00       21     0.00     0.00  cowabilium::cowabilium(void)
  0.00      0.60     0.00       21     0.00     0.51  alloc_level_options(option *, OPT_STRUCT, void *, int, char const *)
  0.00      0.60     0.00       21     0.00     0.00  begins(char const *, char const *)
  0.00      0.60     0.00       20     0.00     0.00  pre_init_f(char const *)
  0.00      0.60     0.00       18     0.00     0.00  get_quoted(char *)
  0.00      0.60     0.00       17     0.00     0.00  voice::~voice(void)
  0.00      0.60     0.00       17     0.00     0.00  hash::hash(int)
  0.00      0.60     0.00       17     0.00   103.39  voice::voice(char const *, char const *, lang *)
  0.00      0.60     0.00       17     0.00     0.00  voice::operator delete(void *)
  0.00      0.60     0.00       17     0.00     0.00  voice::operator new(unsigned int, lang *)
  0.00      0.60     0.00       17     0.00   103.39  lang::add_voice(char const *)
  0.00      0.60     0.00       17     0.00     0.00  void set_enum_option<SYNTH_TYPE>(option *, char const *, char *, char *)
  0.00      0.60     0.00       15     0.00    16.21  literal_hash(char *)
  0.00      0.60     0.00       13     0.00     6.26  r_prosody::~r_prosody(void)
  0.00      0.60     0.00       13     0.00     0.05  r_prosody::r_prosody(char *)
  0.00      0.60     0.00       12     0.00     0.00  r_near::~r_near(void)
  0.00      0.60     0.00       12     0.00   119.28  r_near::r_near(char *, text *, hash *)
  0.00      0.60     0.00       12     0.00     0.00  hash_table<char, file>::fn(char const *)
  0.00      0.60     0.00       12     0.00     0.00  non_unicode_alloc_code(unsigned char)
  0.00      0.60     0.00       10     0.00     0.00  r_nothing::~r_nothing(void)
  0.00      0.60     0.00       10     0.00     0.04  r_nothing::r_nothing(void)
  0.00      0.60     0.00        8     0.00     6.26  r_seg::~r_seg(void)
  0.00      0.60     0.00        8     0.00     3.13  r_with::~r_with(void)
  0.00      0.60     0.00        8     0.00     0.05  r_seg::r_seg(char *)
  0.00      0.60     0.00        8     0.00     0.04  r_with::r_with(char *, text *, hash *)
  0.00      0.60     0.00        7     0.00     0.00  r_raise::~r_raise(void)
  0.00      0.60     0.00        7     0.00   238.60  r_raise::r_raise(char *)
  0.00      0.60     0.00        5     0.00     6.26  r_prep::~r_prep(void)
  0.00      0.60     0.00        5     0.00     0.05  r_prep::r_prep(char *)
  0.00      0.60     0.00        5     0.00   420.27  add_language(char const *)
  0.00      0.60     0.00        4     0.00     0.00  file::~file(void)
  0.00      0.60     0.00        4     0.00     0.00  r_syll::~r_syll(void)
  0.00      0.60     0.00        4     0.00     0.00  r_smooth::~r_smooth(void)
  0.00      0.60     0.00        4     0.00     0.04  r_syll::r_syll(char *)
  0.00      0.60     0.00        4     0.00     0.04  r_smooth::r_smooth(char *)
  0.00      0.60     0.00        4     0.00     0.09  hash_table<char, file>::add(char const *, file const *)
  0.00      0.60     0.00        4     0.00     0.09  claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int))
  0.00      0.60     0.00        4     0.00     0.00  text::exists(void)
  0.00      0.60     0.00        4     0.00     1.45  free_all_options(option *, cowabilium *)
  0.00      0.60     0.00        4     0.00     0.00  get_timestamp(char *)
  0.00      0.60     0.00        4     0.00     0.00  parse_cmd_line(void)
  0.00      0.60     0.00        4     0.00     0.06  hash_table<char, file>::remove(char const *)
  0.00      0.60     0.00        4     0.00     0.00  stat
  0.00      0.60     0.00        4     0.00     0.00  hash_table<char, file>::translate(char const *)
  0.00      0.60     0.00        4     0.00     0.06  uncache_file(char *, file *, void *)
  0.00      0.60     0.00        4     0.00     0.00  unclaim(file *)
  0.00      0.60     0.00        3     0.00   129.10  lang::~lang(void)
  0.00      0.60     0.00        3     0.00     7.34  hash_table<char, option>::~hash_table(void)
  0.00      0.60     0.00        3     0.00   700.36  lang::lang(char const *, char const *)
  0.00      0.60     0.00        3     0.00     0.00  hash_table<char, option>::hash_table(int)
  0.00      0.60     0.00        3     0.00     0.00  hash_table<char, option>::cfg_rehash(int, int, int)
  0.00      0.60     0.00        3     0.00   103.30  load_config(char const *)
  0.00      0.60     0.00        3     0.00     0.00  slab<20>::shutdown(void)
  0.00      0.60     0.00        2     0.00   184.71  rules::~rules(void)
  0.00      0.60     0.00        2     0.00     0.00  synth::~synth(void)
  0.00      0.60     0.00        2     0.00     6.26  r_postp::~r_postp(void)
  0.00      0.60     0.00        2     0.00     0.00  slab<20>::~slab(void)
  0.00      0.60     0.00        2     0.00 84121.83  rules::rules(char const *, char const *)
  0.00      0.60     0.00        2     0.00     0.00  synth::synth(void)
  0.00      0.60     0.00        2     0.00     0.05  r_postp::r_postp(char *)
  0.00      0.60     0.00        2     0.00     0.00  __static_initialization_and_destruction_0
  0.00      0.60     0.00        2     0.00     0.00  __static_initialization_and_destruction_0
  0.00      0.60     0.00        2     0.00     0.14  __static_initialization_and_destruction_0
  0.00      0.60     0.00        2     0.00     0.00  slab<20>::slab(int)
  0.00      0.60     0.00        2     0.00    16.40  lang::add_soft_opts(char const *)
  0.00      0.60     0.00        2     0.00   878.82  lang::add_voices(char const *)
  0.00      0.60     0.00        2     0.00     0.00  alloc_charset(char const *)
  0.00      0.60     0.00        2     0.00 84121.83  lang::compile_rules(void)
  0.00      0.60     0.00        2     0.00     0.00  hash_table<char, a_ttscp>::get_random(void)
  0.00      0.60     0.00        2     0.00     0.09  a_synth::init_syn(void)
  0.00      0.60     0.00        2     0.00     0.00  lang_switch(char const *)
  0.00      0.60     0.00        2     0.00     0.00  release(char **)
  0.00      0.60     0.00        2     0.00     0.09  setup_synth(voice *)
  0.00      0.60     0.00        2     0.00     0.00  slab<328>::shutdown(void)
  0.00      0.60     0.00        2     0.00     0.00  slab<40>::shutdown(void)
  0.00      0.60     0.00        2     0.00   290.79  update_sampa(int, char const *)
  0.00      0.60     0.00        1     0.00     0.00  configuration::~configuration(void)
  0.00      0.60     0.00        1     0.00     0.00  a_disconnector::~a_disconnector(void)
  0.00      0.60     0.00        1     0.00     0.00  lpcsyn::~lpcsyn(void)
  0.00      0.60     0.00        1     0.00     0.00  mbrsyn::~mbrsyn(void)
  0.00      0.60     0.00        1     0.00     0.00  r_absol::~r_absol(void)
  0.00      0.60     0.00        1     0.00     0.00  a_accept::~a_accept(void)
  0.00      0.60     0.00        1     0.00     0.00  lpcfloat::~lpcfloat(void)
  0.00      0.60     0.00        1     0.00     0.00  hash_table<char, file>::~hash_table(void)
  0.00      0.60     0.00        1     0.00     0.00  slab<328>::~slab(void)
  0.00      0.60     0.00        1     0.00     0.00  slab<40>::~slab(void)
  0.00      0.60     0.00        1     0.00     0.00  function<char>::~function(void)
  0.00      0.60     0.00        1     0.00     0.00  configuration::configuration(void)
  0.00      0.60     0.00        1     0.00     0.00  a_disconnector::a_disconnector(void)
  0.00      0.60     0.00        1     0.00     0.29  static_configuration::static_configuration(void)
  0.00      0.60     0.00        1     0.00     0.00  unit::unit(void)
  0.00      0.60     0.00        1     0.00     0.09  lpcsyn::lpcsyn(voice *)
  0.00      0.60     0.00        1     0.00     0.00  mbrsyn::mbrsyn(voice *)
  0.00      0.60     0.00        1     0.00     0.04  r_absol::r_absol(char *)
  0.00      0.60     0.00        1     0.00     0.00  a_accept::a_accept(void)
  0.00      0.60     0.00        1     0.00     0.19  lpcfloat::lpcfloat(voice *)
  0.00      0.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0
  0.00      0.60     0.00        1     0.00     0.00  __static_initialization_and_destruction_0
  0.00      0.60     0.00        1     0.00     0.00  hash_table<char, file>::hash_table(int)
  0.00      0.60     0.00        1     0.00     0.00  slab<328>::slab(int)
  0.00      0.60     0.00        1     0.00     0.00  slab<40>::slab(int)
  0.00      0.60     0.00        1     0.00     0.00  hash_table<char, file>::cfg_rehash(int, int, int)
  0.00      0.60     0.00        1     0.00     0.09  check_cfg_version(char const *)
  0.00      0.60     0.00        1     0.00     0.00  cmd_pass(char *, a_ttscp *)
  0.00      0.60     0.00        1     0.00   400.73  cmd_shutdown(char *, a_ttscp *)
  0.00      0.60     0.00        1     0.00 168243.66  compile_rules(void)
  0.00      0.60     0.00        1     0.00     0.00  compose_pathname(char const *, char const *)
  0.00      0.60     0.00        1     0.00  1895.92  config_init(void)
  0.00      0.60     0.00        1     0.00     7.34  config_release(void)
  0.00      0.60     0.00        1     0.00     0.00  cow_catharsis(void)
  0.00      0.60     0.00        1     0.00     0.00  daemonize(void)
  0.00      0.60     0.00        1     0.00     0.00  unit::done(void)
  0.00      0.60     0.00        1     0.00   393.33  epos_catharsis(void)
  0.00      0.60     0.00        1     0.00   400.67  epos_done(void)
  0.00      0.60     0.00        1     0.00 170995.14  epos_init(void)
  0.00      0.60     0.00        1     0.00     0.00  floatoven(char *, int)
  0.00      0.60     0.00        1     0.00     0.25  hash_table<char, file>::forall(void (*)(char *, file *, void *), void *)
  0.00      0.60     0.00        1     0.00     5.80  free_all_options(void)
  0.00      0.60     0.00        1     0.00     0.00  getaddrbyname(char const *)
  0.00      0.60     0.00        1     0.00     0.00  init_enc(void)
  0.00      0.60     0.00        1     0.00     0.00  just_connect_socket(unsigned int, int)
  0.00      0.60     0.00        1     0.00     0.00  lest_already_running(void)
  0.00      0.60     0.00        1     0.00     0.00  load_default_charset(void)
  0.00      0.60     0.00        1     0.00  1260.82  load_languages(char const *)
  0.00      0.60     0.00        1     0.00    34.31  make_option_set(void)
  0.00      0.60     0.00        1     0.00     0.00  make_server_passwd(void)
  0.00      0.60     0.00        1     0.00     0.00  my_fork(void)
  0.00      0.60     0.00        1     0.00    10.65  post_set_unit_levels(char const *)
  0.00      0.60     0.00        1     0.00     0.00  pre_set_unit_levels(char const *)
  0.00      0.60     0.00        1     0.00     0.00  qipc_proxy_init(void)
  0.00      0.60     0.00        1     0.00     0.00  reset_soundcard(int)
  0.00      0.60     0.00        1     0.00   290.79  restrict_options(void)
  0.00      0.60     0.00        1     0.00     0.00  running_at_localhost(void)
  0.00      0.60     0.00        1     0.00 428164.32  server(void)
  0.00      0.60     0.00        1     0.00   400.67  server_shutdown(void)
  0.00      0.60     0.00        1     0.00     0.00  void set_enum_option<OUT_ML>(option *, char const *, char *, char *)
  0.00      0.60     0.00        1     0.00   387.29  configuration::shutdown(void)
  0.00      0.60     0.00        1     0.00     0.00  shutdown_cfgs(void)
  0.00      0.60     0.00        1     0.00     0.00  shutdown_enc(void)
  0.00      0.60     0.00        1     0.00     0.25  shutdown_file_cache(void)
  0.00      0.60     0.00        1     0.00     0.00  shutdown_hashing(void)
  0.00      0.60     0.00        1     0.00     0.00  shutdown_unit_markers(void)
  0.00      0.60     0.00        1     0.00     0.00  shutdown_units(void)
  0.00      0.60     0.00        1     0.00 599159.46  start_unix_daemon(void)
  0.00      0.60     0.00        1     0.00   581.58  update_sampa(void)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 1.67% of 0.60 seconds

index % time    self  children    called     name
                0.00    0.60       1/1           main [2]
[1]     99.9    0.00    0.60       1         start_unix_daemon(void) [1]
                0.00    0.43       1/1           server(void) [4]
                0.00    0.17       1/1           epos_init(void) [9]
                0.00    0.00       1/1           lest_already_running(void) [386]
                0.00    0.00       1/1           my_fork(void) [389]
-----------------------------------------------
                                                 <spontaneous>
[2]     99.9    0.00    0.60                 main [2]
                0.00    0.60       1/1           start_unix_daemon(void) [1]
-----------------------------------------------
                0.00    0.43    7546/7546        server(void) [4]
[3]     71.4    0.00    0.43    7546         agent::timeslice(void) [3]
                0.00    0.40     111/111         a_synth::run(void) [5]
                0.00    0.02     430/430         a_rules::run(void) [27]
                0.00    0.00     222/222         a_segs::run(void) [64]
                0.00    0.00     208/208         a_ssif::run(void) [70]
                0.00    0.00    4531/4531        a_protocol::run(void) [75]
                0.00    0.00     434/434         a_accept::run(void) [115]
                0.00    0.00     430/430         a_ascii::run(void) [127]
                0.00    0.00     216/216         a_disconnector::run(void) [171]
                0.00    0.00     104/104         a_syn::run(void) [174]
                0.00    0.00   15092/2479522     debug_wanted(int, int) [181]
                0.00    0.00   15091/15091       agent_profile(char const *) [204]
                0.00    0.00    7546/9498        context::enter(void) [211]
                0.00    0.00    7545/9499        context::leave(void) [210]
                0.00    0.00    4530/4530        a_ttscp::name(void) [226]
                0.00    0.00     434/434         a_accept::name(void) [287]
                0.00    0.00     430/430         a_input::run(void) [302]
                0.00    0.00     430/430         a_output::name(void) [300]
                0.00    0.00     430/430         a_rules::name(void) [299]
                0.00    0.00     430/430         a_ascii::name(void) [297]
                0.00    0.00     430/430         a_input::name(void) [298]
                0.00    0.00     222/222         a_segs::name(void) [307]
                0.00    0.00     216/216         a_disconnector::name(void) [310]
                0.00    0.00     215/215         a_output::run(void) [320]
                0.00    0.00     215/215         oa_wavefm::run(void) [321]
                0.00    0.00     215/215         a_synth::name(void) [318]
                0.00    0.00     208/208         a_ssif::name(void) [326]
-----------------------------------------------
                0.00    0.43       1/1           start_unix_daemon(void) [1]
[4]     71.4    0.00    0.43       1         server(void) [4]
                0.00    0.43    7546/7546        agent::timeslice(void) [3]
                0.00    0.00    7546/7546        select_socket(bool) [215]
                0.00    0.00    7546/2479522     debug_wanted(int, int) [181]
                0.00    0.00    4319/4319        server_reinit_check(void) [228]
                0.00    0.00    3227/3227        sched_sel(void) [237]
                0.00    0.00       1/1           daemonize(void) [380]
-----------------------------------------------
                0.00    0.40     111/111         agent::timeslice(void) [3]
[5]     66.7    0.00    0.40     111         a_synth::run(void) [5]
                0.00    0.40     111/111         synth::synsegs(voice *, segment *, int, wavefm *) [6]
                0.00    0.00       1/2           a_synth::init_syn(void) [166]
                0.00    0.00     111/215         wavefm::wavefm(voice *) [652]
                0.00    0.00     111/2479522     debug_wanted(int, int) [181]
                0.00    0.00     111/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.40     111/111         a_synth::run(void) [5]
[6]     66.7    0.00    0.40     111         synth::synsegs(voice *, segment *, int, wavefm *) [6]
                0.01    0.39    4355/4355        lpcsyn::synseg(voice *, segment, wavefm *) [7]
                0.00    0.00     111/111         voice::claim_all(void) [173]
-----------------------------------------------
                0.01    0.39    4355/4355        synth::synsegs(voice *, segment *, int, wavefm *) [6]
[7]     66.7    0.01    0.39    4355         lpcsyn::synseg(voice *, segment, wavefm *) [7]
                0.37    0.01   23232/23232       lpcsyn::synmod(model, wavefm *) [8]
                0.01    0.00   24170/24170       lpcfloat::frobmod(int, segment, model *, int &, int &) [41]
                0.00    0.00   28525/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.37    0.01   23232/23232       lpcsyn::synseg(voice *, segment, wavefm *) [7]
[8]     63.3    0.37    0.01   23232         lpcsyn::synmod(model, wavefm *) [8]
                0.01    0.00 1697360/1697360     wavefm::sample(unsigned int) [38]
                0.00    0.00   23232/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.17       1/1           start_unix_daemon(void) [1]
[9]     28.5    0.00    0.17       1         epos_init(void) [9]
                0.00    0.17       1/1           compile_rules(void) [11]
                0.00    0.00       1/1           config_init(void) [59]
                0.00    0.00       1/1           update_sampa(void) [87]
                0.00    0.00       1/219         function<char>::function(char const *, char const *, bool) [17]
                0.00    0.00       7/2479522     debug_wanted(int, int) [181]
                0.00    0.00       1/1           load_default_charset(void) [387]
-----------------------------------------------
                0.00    0.17       2/2           compile_rules(void) [11]
[10]    28.0    0.00    0.17       2         lang::compile_rules(void) [10]
                0.00    0.17       2/2           rules::rules(char const *, char const *) [12]
                0.00    0.00       2/2           lang_switch(char const *) [372]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.17       1/1           epos_init(void) [9]
[11]    28.0    0.00    0.17       1         compile_rules(void) [11]
                0.00    0.17       2/2           lang::compile_rules(void) [10]
-----------------------------------------------
                0.00    0.17       2/2           lang::compile_rules(void) [10]
[12]    28.0    0.00    0.17       2         rules::rules(char const *, char const *) [12]
                0.00    0.17       2/2           r_block::r_block(text *, hash *) <cycle 3> [143]
                0.00    0.00       2/246         hash::~hash(void) [71]
                0.00    0.00       2/28          text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00       2/208139      strdup [39]
                0.00    0.00       8/2479522     debug_wanted(int, int) [181]
                0.00    0.00       2/17          hash::hash(int) [676]
                0.00    0.00       2/2           block_rule::check_children(void) <cycle 2> [344]
                0.00    0.00       2/28          text::~text(void) [672]
-----------------------------------------------
[13]    28.0    0.00    0.17       2+2882    <cycle 3 as a whole> [13]
                0.00    0.15    1153             parse_rule(text *, hash *, int *) <cycle 3> [14]
                0.00    0.01     185             block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
                0.00    0.00      41             r_inside::r_inside(char *, text *, hash *) <cycle 3> [50]
                0.00    0.00      12             r_near::r_near(char *, text *, hash *) <cycle 3> [73]
                0.00    0.00     105             r_block::r_block(text *, hash *) <cycle 3> [143]
                0.00    0.00     104             cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
                0.00    0.00      58             r_choice::r_choice(text *, hash *) <cycle 3> [147]
                0.00    0.00      22             r_switch::r_switch(text *, hash *) <cycle 3> [150]
                0.00    0.00       8             r_with::r_with(char *, text *, hash *) <cycle 3> [156]
                0.00    0.00    1153             next_rule(text *, hash *, int *) <cycle 3> [256]
-----------------------------------------------
                                1153             next_rule(text *, hash *, int *) <cycle 3> [256]
[14]    25.7    0.00    0.15    1153         parse_rule(text *, hash *, int *) <cycle 3> [14]
                0.00    0.08     161/218         r_regress::r_regress(char *) [15]
                0.00    0.03      55/55          hashing_rule::verify(void) [21]
                0.00    0.03      57/57          r_progress::r_progress(char *) [23]
                0.00    0.01    1190/1961        text::getline(char *) <cycle 6> [37]
                0.00    0.00       7/7           r_raise::r_raise(char *) [63]
                0.00    0.00      37/28331       hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                0.00    0.00     968/968         rule::set_dbg_tag(text *) [113]
                0.00    0.00     140/140         r_regex::r_regex(char *) [130]
                0.00    0.00     123/123         resolve_vars(char *, hash *, text *) [132]
                0.00    0.00     242/242         r_contour::r_contour(char *) [138]
                0.00    0.00      27/34          r_subst::r_subst(char *) [149]
                0.00    0.00      13/13          r_prosody::r_prosody(char *) [151]
                0.00    0.00       8/8           r_seg::r_seg(char *) [154]
                0.00    0.00      10/10          r_nothing::r_nothing(void) [155]
                0.00    0.00       5/5           r_prep::r_prep(char *) [165]
                0.00    0.00       4/4           r_smooth::r_smooth(char *) [170]
                0.00    0.00       4/4           r_syll::r_syll(char *) [169]
                0.00    0.00       2/2           r_postp::r_postp(char *) [177]
                0.00    0.00       1/1           r_absol::r_absol(char *) [178]
                0.00    0.00    3453/5491        str2enum(char const *, char const *, int) [221]
                0.00    0.00    3307/2479522     debug_wanted(int, int) [181]
                0.00    0.00    1188/1188        get_words(char *, char **, int) [255]
                0.00    0.00    1151/1151        rule_weight(char const *, text *) [257]
                0.00    0.00     913/913         rule::verify(void) [269]
                0.00    0.00     708/968         rule::set_level(char, char) [268]
                0.00    0.00     183/183         block_rule::set_level(char, char) [328]
                0.00    0.00      43/43          r_if::set_level(char, char) [349]
                0.00    0.00      34/34          r_subst::set_level(char, char) [352]
                                 103             r_block::r_block(text *, hash *) <cycle 3> [143]
                                  58             r_choice::r_choice(text *, hash *) <cycle 3> [147]
                                  43             r_if::r_if(char *, text *, hash *) <cycle 3> [670]
                                  41             r_inside::r_inside(char *, text *, hash *) <cycle 3> [50]
                                  22             r_switch::r_switch(text *, hash *) <cycle 3> [150]
                                  12             r_near::r_near(char *, text *, hash *) <cycle 3> [73]
                                   8             r_with::r_with(char *, text *, hash *) <cycle 3> [156]
-----------------------------------------------
                0.00    0.03      57/218         r_progress::r_progress(char *) [23]
                0.00    0.08     161/218         parse_rule(text *, hash *, int *) <cycle 3> [14]
[15]    18.6    0.00    0.11     218         r_regress::r_regress(char *) [15]
                0.06    0.00     218/219         function<char>::function(char const *, char const *, bool) [17]
                0.05    0.00     436/503         booltab<char>::booltab(char *) [16]
                0.00    0.00     218/208139      strdup [39]
                0.00    0.00     218/970         rule::rule(char *) [117]
                0.00    0.00     218/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00      12/503         r_near::r_near(char *, text *, hash *) <cycle 3> [73]
                0.00    0.00      14/503         r_raise::r_raise(char *) [63]
                0.00    0.00      41/503         r_inside::r_inside(char *, text *, hash *) <cycle 3> [50]
                0.05    0.00     436/503         r_regress::r_regress(char *) [15]
[16]    10.0    0.06    0.00     503         booltab<char>::booltab(char *) [16]
                0.00    0.00     503/503         void unexcl<char>(char *) [279]
                0.00    0.00     503/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/219         epos_init(void) [9]
                0.06    0.00     218/219         r_regress::r_regress(char *) [15]
[17]    10.0    0.06    0.00     219         function<char>::function(char const *, char const *, bool) [17]
                0.00    0.00     219/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
[18]     7.0    0.01    0.03   28331+270041  <cycle 1 as a whole> [18]
                0.00    0.03  102735             hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                0.01    0.00      40             hash_table<char, char>::rehash(int) <cycle 1> [34]
                0.00    0.00      40             hash_table<char, char>::rehash(void) <cycle 1> [351]
-----------------------------------------------
                0.00    0.00       1/44          r_with::apply(unit *) [45]
                0.00    0.03      43/44          hashing_rule::load_hash(void) [20]
[19]     5.9    0.00    0.04      44         hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
                0.01    0.03   23875/28331       hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                0.00    0.00     157/157         esc(char) [329]
                0.00    0.00      44/61          hash_table<char, char>::hash_table(int) [666]
                0.00    0.00      44/370         hash_table<char, char>::cfg_rehash(int, int, int) [304]
-----------------------------------------------
                0.00    0.03      55/55          hashing_rule::verify(void) [21]
[20]     5.8    0.00    0.03      55         hashing_rule::load_hash(void) [20]
                0.00    0.03      43/44          hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
                0.00    0.00      12/15          literal_hash(char *) [105]
-----------------------------------------------
                0.00    0.03      55/55          parse_rule(text *, hash *, int *) <cycle 3> [14]
[21]     5.8    0.00    0.03      55         hashing_rule::verify(void) [21]
                0.00    0.03      55/55          hashing_rule::load_hash(void) [20]
-----------------------------------------------
                0.01    0.00  102735/396668      hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                0.02    0.00  293933/396668      hash_table<char, char>::translate(char const *) [28]
[22]     5.0    0.03    0.00  396668         hash_table<char, char>::fn(char const *) [22]
-----------------------------------------------
                0.00    0.03      57/57          parse_rule(text *, hash *, int *) <cycle 3> [14]
[23]     4.9    0.00    0.03      57         r_progress::r_progress(char *) [23]
                0.00    0.03      57/218         r_regress::r_regress(char *) [15]
-----------------------------------------------
                               78659             hash_table<char, char>::rehash_tree(hsearchtree<char, char> *) <cycle 1> [189]
                0.00    0.00      37/28331       parse_rule(text *, hash *, int *) <cycle 3> [14]
                0.00    0.00     164/28331       literal_hash(char *) [105]
                0.01    0.03   23875/28331       hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
[24]     4.5    0.00    0.03  102735         hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                0.01    0.00  204982/208139      strdup [39]
                0.00    0.01  102247/103621      tree_alloc(void) [43]
                0.01    0.00  102735/396668      hash_table<char, char>::fn(char const *) [22]
                0.00    0.00  102247/103621      balance(void) [192]
                                  40             hash_table<char, char>::rehash(void) <cycle 1> [351]
-----------------------------------------------
[25]     4.0    0.00    0.02     430+153456  <cycle 5 as a whole> [25]
                0.00    0.02  100724             block_rule::apply_current(unit *) <cycle 5> [29]
                0.00    0.00   29824             r_inside::apply(unit *) <cycle 5> [196]
                0.00    0.00    9842             r_block::apply(unit *) <cycle 5> [209]
                0.00    0.00    5542             r_switch::apply(unit *) <cycle 5> [217]
                0.00    0.00    1060             r_choice::apply(unit *) <cycle 5> [265]
-----------------------------------------------
                0.00    0.02     430/430         a_rules::run(void) [27]
[26]     4.0    0.00    0.02     430         rules::apply(unit *) [26]
                0.00    0.02     430/430         r_block::apply(unit *) <cycle 5> [209]
-----------------------------------------------
                0.00    0.02     430/430         agent::timeslice(void) [3]
[27]     4.0    0.00    0.02     430         a_rules::run(void) [27]
                0.00    0.02     430/430         rules::apply(unit *) [26]
                0.00    0.00     430/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.00     175/293933      resolve_vars(char *, hash *, text *) [132]
                0.00    0.00   21424/293933      hash::translate_int(char const *) [66]
                0.00    0.00   57348/293933      unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.02  214986/293933      unit::subst(hash *, int, char *, char *, char *, char *, char *) [30]
[28]     3.7    0.00    0.02  293933         hash_table<char, char>::translate(char const *) [28]
                0.02    0.00  293933/396668      hash_table<char, char>::fn(char const *) [22]
-----------------------------------------------
                                1060             r_choice::apply(unit *) <cycle 5> [265]
                                5542             r_switch::apply(unit *) <cycle 5> [217]
                               94122             r_block::apply(unit *) <cycle 5> [209]
[29]     3.7    0.00    0.02  100724         block_rule::apply_current(unit *) <cycle 5> [29]
                0.00    0.01   15336/15336       r_subst::apply(unit *) [32]
                0.00    0.01    6808/6808        r_with::apply(unit *) [45]
                0.00    0.00    8352/8352        r_contour::apply(unit *) [84]
                0.00    0.00  330974/2479522     debug_wanted(int, int) [181]
                0.00    0.00  230250/924760      unit::Next(char) [183]
                0.00    0.00  115498/115498      r_regress::apply(unit *) [190]
                0.00    0.00  100724/793432      unit::LeftMost(char) [185]
                0.00    0.00   27018/27018       r_regex::apply(unit *) [199]
                0.00    0.00    5536/5536        r_raise::apply(unit *) [219]
                0.00    0.00    3404/3404        r_near::apply(unit *) [235]
                0.00    0.00    2132/2132        r_syll::apply(unit *) [243]
                0.00    0.00    1708/1708        r_nothing::apply(unit *) [249]
                0.00    0.00     708/708         r_absol::apply(unit *) [271]
                               29824             r_inside::apply(unit *) <cycle 5> [196]
                                6894             r_if::apply(unit *) <cycle 5> [67]
                                5542             r_switch::apply(unit *) <cycle 5> [217]
                                1060             r_choice::apply(unit *) <cycle 5> [265]
                                 430             r_block::apply(unit *) <cycle 5> [209]
-----------------------------------------------
                0.00    0.02  214986/214986      unit::subst(hash *, SUBST_METHOD) [31]
[30]     2.7    0.00    0.02  214986         unit::subst(hash *, int, char *, char *, char *, char *, char *) [30]
                0.00    0.02  214986/293933      hash_table<char, char>::translate(char const *) [28]
                0.00    0.00  214986/2479522     debug_wanted(int, int) [181]
                0.00    0.00  214986/5319039     unit::sanity(void) [180]
-----------------------------------------------
                0.00    0.01    6808/19152       r_with::apply(unit *) [45]
                0.00    0.01   12344/19152       unit::relabel(hash *, SUBST_METHOD, char) [33]
[31]     2.7    0.00    0.02   19152         unit::subst(hash *, SUBST_METHOD) [31]
                0.00    0.02  214986/214986      unit::subst(hash *, int, char *, char *, char *, char *, char *) [30]
                0.00    0.00   36602/5319039     unit::sanity(void) [180]
                0.00    0.00   17450/44468       unit::gather(int *, bool, bool) [194]
                0.00    0.00   17450/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.01   15336/15336       block_rule::apply_current(unit *) <cycle 5> [29]
[32]     2.5    0.00    0.01   15336         r_subst::apply(unit *) [32]
                0.00    0.01   15336/15336       unit::relabel(hash *, SUBST_METHOD, char) [33]
-----------------------------------------------
                0.00    0.01   15336/15336       r_subst::apply(unit *) [32]
[33]     2.5    0.00    0.01   15336         unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.01   12344/19152       unit::subst(hash *, SUBST_METHOD) [31]
                0.00    0.00   57348/293933      hash_table<char, char>::translate(char const *) [28]
                0.00    0.00    8080/924760      unit::Next(char) [183]
                0.00    0.00    7038/5319039     unit::sanity(void) [180]
                0.00    0.00    4046/2479522     debug_wanted(int, int) [181]
                0.00    0.00    2992/793432      unit::LeftMost(char) [185]
                0.00    0.00     212/2562        unit::unlink(REPARENT) [239]
-----------------------------------------------
                                  40             hash_table<char, char>::rehash(void) <cycle 1> [351]
[34]     2.5    0.01    0.00      40         hash_table<char, char>::rehash(int) <cycle 1> [34]
                0.00    0.00  191302/252699      hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [47]
                0.00    0.00      80/370         hash_table<char, char>::cfg_rehash(int, int, int) [304]
                              191302             hash_table<char, char>::rehash_tree(hsearchtree<char, char> *) <cycle 1> [189]
-----------------------------------------------
                0.00    0.00   31486/135107      marker::operator new(unsigned int) [54]
                0.01    0.00  103621/135107      tree_alloc(void) [43]
[35]     2.1    0.01    0.00  135107         slab<20>::alloc(void) [35]
                0.00    0.00   42996/161285      slab<20>::release(void *) [40]
-----------------------------------------------
[36]     1.7    0.00    0.01    1961+195     <cycle 6 as a whole> [36]
                0.00    0.00     223             load_charset(char const *) <cycle 6> [172]
-----------------------------------------------
                                 192             load_charset(char const *) <cycle 6> [172]
                0.00    0.00      57/1961        restrict_options(void) [103]
                0.00    0.00     114/1961        update_sampa(int, char const *) [86]
                0.00    0.00     380/1961        load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
                0.00    0.01    1190/1961        parse_rule(text *, hash *, int *) <cycle 3> [14]
[37]     1.7    0.00    0.01    1933         text::getline(char *) <cycle 6> [37]
                0.01    0.00    2832/2832        strip(char *) [42]
                0.00    0.00      15/43          text::subfile(char const *) [148]
                0.00    0.00    5620/2479522     debug_wanted(int, int) [181]
                0.00    0.00    2806/7770        encode_string(char *, int, bool) [214]
                0.00    0.00      43/43          text::superfile(void) [350]
                0.00    0.00      21/21          begins(char const *, char const *) [356]
                0.00    0.00      18/18          get_quoted(char *) [358]
                                   3             load_charset(char const *) <cycle 6> [172]
-----------------------------------------------
                0.01    0.00 1697360/1697360     lpcsyn::synmod(model, wavefm *) [8]
[38]     1.7    0.01    0.00 1697360         wavefm::sample(unsigned int) [38]
                0.00    0.00     223/1133        wavefm::flush(void) [259]
-----------------------------------------------
                0.00    0.00       2/208139      rules::rules(char const *, char const *) [12]
                0.00    0.00       6/208139      r_with::r_with(char *, text *, hash *) <cycle 3> [156]
                0.00    0.00       6/208139      static_configuration::static_configuration(void) [158]
                0.00    0.00      12/208139      hashing_rule::hashing_rule(char *) [146]
                0.00    0.00      15/208139      lang::lang(char const *, char const *) [58]
                0.00    0.00      28/208139      text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00      31/208139      voice::voice(char const *, char const *, lang *) [62]
                0.00    0.00      43/208139      text::subfile(char const *) [148]
                0.00    0.00      49/208139      alloc_level_options(option *, OPT_STRUCT, void *, int, char const *) [135]
                0.00    0.00     164/208139      set_option(option *, char const *, void *) [77]
                0.00    0.00     185/208139      block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
                0.00    0.00     218/208139      r_regress::r_regress(char *) [15]
                0.00    0.00     280/208139      r_regex::r_regex(char *) [130]
                0.00    0.00     430/208139      parser::parser(char const *, int) [129]
                0.00    0.00     720/208139      rule::rule(char *) [117]
                0.00    0.00     968/208139      rule::set_dbg_tag(text *) [113]
                0.01    0.00  204982/208139      hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
[39]     1.7    0.01    0.00  208139         strdup [39]
-----------------------------------------------
                0.00    0.00   14668/161285      marker::operator delete(void *) [79]
                0.00    0.00   42996/161285      slab<20>::alloc(void) [35]
                0.01    0.00  103621/161285      tree_delete(void *) [46]
[40]     1.7    0.01    0.00  161285         slab<20>::release(void *) [40]
-----------------------------------------------
                0.01    0.00   24170/24170       lpcsyn::synseg(voice *, segment, wavefm *) [7]
[41]     1.7    0.01    0.00   24170         lpcfloat::frobmod(int, segment, model *, int &, int &) [41]
-----------------------------------------------
                0.01    0.00    2832/2832        text::getline(char *) <cycle 6> [37]
[42]     1.7    0.01    0.00    2832         strip(char *) [42]
                0.00    0.00     561/561         function<char>::ismember(char) [278]
                0.00    0.00     195/308656      function<char>::xlat(char) [187]
-----------------------------------------------
                0.00    0.00       4/103621      hash_table<char, file>::add(char const *, file const *) [152]
                0.00    0.00     502/103621      hash_table<char, option>::add(char const *, option const *) [112]
                0.00    0.00     868/103621      hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [108]
                0.00    0.01  102247/103621      hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
[43]     1.6    0.00    0.01  103621         tree_alloc(void) [43]
                0.01    0.00  103621/135107      slab<20>::alloc(void) [35]
                0.00    0.00       1/2           slab<20>::slab(int) [691]
-----------------------------------------------
                                  22             r_switch::r_switch(text *, hash *) <cycle 3> [150]
                                  58             r_choice::r_choice(text *, hash *) <cycle 3> [147]
                                 105             r_block::r_block(text *, hash *) <cycle 3> [143]
[44]     1.2    0.00    0.01     185         block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
                0.00    0.01     185/185         hash::hash(hash *) [48]
                0.00    0.00     185/246         hash::~hash(void) [71]
                0.00    0.00     185/208139      strdup [39]
                                1049             next_rule(text *, hash *, int *) <cycle 3> [256]
-----------------------------------------------
                0.00    0.01    6808/6808        block_rule::apply_current(unit *) <cycle 5> [29]
[45]     1.1    0.00    0.01    6808         r_with::apply(unit *) [45]
                0.00    0.01    6808/19152       unit::subst(hash *, SUBST_METHOD) [31]
                0.00    0.00       1/44          hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
                0.00    0.00       3/15          literal_hash(char *) [105]
-----------------------------------------------
                0.00    0.00       4/103621      hash_table<char, file>::remove(char const *) [160]
                0.00    0.00     147/103621      hash_table<char, option>::remove(char const *) [137]
                0.00    0.00     355/103621      hash_table<char, option>::dissolvetree(hsearchtree<char, option> *) [125]
                0.00    0.00     868/103621      hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.01  102247/103621      hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [47]
[46]     1.1    0.00    0.01  103621         tree_delete(void *) [46]
                0.01    0.00  103621/161285      slab<20>::release(void *) [40]
-----------------------------------------------
                              204494             hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [47]
                0.00    0.00   61397/252699      hash_table<char, char>::~hash_table(void) [72]
                0.00    0.00  191302/252699      hash_table<char, char>::rehash(int) <cycle 1> [34]
[47]     1.1    0.00    0.01  252699+204494  hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [47]
                0.00    0.01  102247/103621      tree_delete(void *) [46]
                              204494             hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [47]
-----------------------------------------------
                0.00    0.01     185/185         block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
[48]     1.1    0.00    0.01     185         hash::hash(hash *) [48]
                0.00    0.01     185/185         hash_table<char, char>::hash_table(hash_table<char, char> *) [49]
-----------------------------------------------
                0.00    0.01     185/185         hash::hash(hash *) [48]
[49]     1.1    0.00    0.01     185         hash_table<char, char>::hash_table(hash_table<char, char> *) [49]
                0.00    0.00    4255/28331       hash_table<char, char>::rehash_tree(hsearchtree<char, char> *) <cycle 1> [189]
                0.00    0.00     185/370         hash_table<char, char>::cfg_rehash(int, int, int) [304]
-----------------------------------------------
                                  41             parse_rule(text *, hash *, int *) <cycle 3> [14]
[50]     0.8    0.00    0.00      41         r_inside::r_inside(char *, text *, hash *) <cycle 3> [50]
                0.00    0.00      41/503         booltab<char>::booltab(char *) [16]
                                  41             cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
-----------------------------------------------
                0.00    0.00   11110/11110       unit::project(char) [53]
[51]     0.5    0.00    0.00   11110         unit::project_one_level(float) [51]
                0.00    0.00    9820/9820        unit::project_extents(void) [52]
-----------------------------------------------
                0.00    0.00    9820/9820        unit::project_one_level(float) [51]
[52]     0.5    0.00    0.00    9820         unit::project_extents(void) [52]
                0.00    0.00   21920/21920       marker::derived(void) [56]
                0.00    0.00    9820/17912       marker::~marker(void) [78]
                0.00    0.00   21920/21920       marker::merge(marker *, marker **) [91]
                0.00    0.00   31740/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                               24270             unit::project(char) [53]
                0.00    0.00     208/430         a_ssif::run(void) [70]
                0.00    0.00     222/430         a_segs::run(void) [64]
[53]     0.5    0.00    0.00     430+24270   unit::project(char) [53]
                0.00    0.00   11110/11110       unit::project_one_level(float) [51]
                               24270             unit::project(char) [53]
-----------------------------------------------
                0.00    0.00    6826/31486       unit::prospoint(FIT_IDX, int, float) [83]
                0.00    0.00   24660/31486       marker::derived(void) [56]
[54]     0.5    0.00    0.00   31486         marker::operator new(unsigned int) [54]
                0.00    0.00   31486/135107      slab<20>::alloc(void) [35]
-----------------------------------------------
                0.00    0.00       3/23          load_config(char const *) [101]
                0.00    0.00       3/23          lang::lang(char const *, char const *) [58]
                0.00    0.00      17/23          voice::voice(char const *, char const *, lang *) [62]
[55]     0.4    0.00    0.00      23         load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
                0.00    0.00     380/1961        text::getline(char *) <cycle 6> [37]
                0.00    0.00     417/417         set_option(char *, char *, void *, hash_table<char, option> *) [88]
                0.00    0.00      22/28          text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00     358/1061        split_string(char *) [264]
                0.00    0.00      22/2479522     debug_wanted(int, int) [181]
                0.00    0.00      22/28          text::~text(void) [672]
-----------------------------------------------
                               24660             marker::derived(void) [56]
                0.00    0.00   21920/21920       unit::project_extents(void) [52]
[56]     0.4    0.00    0.00   21920+24660   marker::derived(void) [56]
                0.00    0.00   24660/31486       marker::operator new(unsigned int) [54]
                0.00    0.00   24660/24660       marker::marker(void) [618]
                               24660             marker::derived(void) [56]
-----------------------------------------------
                0.00    0.00       1/5           __do_global_dtors_aux [90]
                0.00    0.00       1/5           __do_global_ctors_aux [89]
                0.00    0.00       3/5           load_languages(char const *) [74]
[57]     0.4    0.00    0.00       5         add_language(char const *) [57]
                0.00    0.00       3/3           lang::lang(char const *, char const *) [58]
                0.00    0.00       2/2           __static_initialization_and_destruction_0 [157]
                0.00    0.00       3/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       3/3           add_language(char const *) [57]
[58]     0.4    0.00    0.00       3         lang::lang(char const *, char const *) [58]
                0.00    0.00       2/2           lang::add_voices(char const *) [61]
                0.00    0.00       3/23          load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
                0.00    0.00       2/2           lang::add_soft_opts(char const *) [121]
                0.00    0.00      15/208139      strdup [39]
                0.00    0.00       3/21          cowabilium::cowabilium(void) [674]
-----------------------------------------------
                0.00    0.00       1/1           epos_init(void) [9]
[59]     0.3    0.00    0.00       1         config_init(void) [59]
                0.00    0.00       1/1           load_languages(char const *) [74]
                0.00    0.00       3/3           load_config(char const *) [101]
                0.00    0.00       1/1           restrict_options(void) [103]
                0.00    0.00       1/1           make_option_set(void) [118]
                0.00    0.00       1/1           check_cfg_version(char const *) [175]
                0.00    0.00       4/4           parse_cmd_line(void) [364]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00      17/17          lang::add_voices(char const *) [61]
[60]     0.3    0.00    0.00      17         lang::add_voice(char const *) [60]
                0.00    0.00      17/17          voice::voice(char const *, char const *, lang *) [62]
                0.00    0.00      17/17          voice::operator new(unsigned int, lang *) [678]
-----------------------------------------------
                0.00    0.00       2/2           lang::lang(char const *, char const *) [58]
[61]     0.3    0.00    0.00       2         lang::add_voices(char const *) [61]
                0.00    0.00      17/17          lang::add_voice(char const *) [60]
-----------------------------------------------
                0.00    0.00      17/17          lang::add_voice(char const *) [60]
[62]     0.3    0.00    0.00      17         voice::voice(char const *, char const *, lang *) [62]
                0.00    0.00      17/23          load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
                0.00    0.00      31/208139      strdup [39]
                0.00    0.00      17/21          cowabilium::cowabilium(void) [674]
-----------------------------------------------
                0.00    0.00       7/7           parse_rule(text *, hash *, int *) <cycle 3> [14]
[63]     0.3    0.00    0.00       7         r_raise::r_raise(char *) [63]
                0.00    0.00      14/503         booltab<char>::booltab(char *) [16]
                0.00    0.00       7/970         rule::rule(char *) [117]
-----------------------------------------------
                0.00    0.00     222/222         agent::timeslice(void) [3]
[64]     0.3    0.00    0.00     222         a_segs::run(void) [64]
                0.00    0.00     222/430         unit::project(char) [53]
                0.00    0.00     222/222         unit::write_segs(segment *, int, int) [308]
                0.00    0.00     222/2993        unit::~unit(void) [623]
                0.00    0.00     222/2479522     debug_wanted(int, int) [181]
                0.00    0.00     222/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.00   21424/21424       unit::segs(char, hash *) [69]
[65]     0.3    0.00    0.00   21424         unit::seg(hash *) [65]
                0.00    0.00   21424/21424       hash::translate_int(char const *) [66]
                0.00    0.00   17420/2479522     debug_wanted(int, int) [181]
                0.00    0.00    8710/27262       unit::operator new(unsigned int) [617]
                0.00    0.00    8710/13640       unit::unit(char, int) [619]
                0.00    0.00    8710/20842       unit::insert_end(unit *, unit *) [202]
                0.00    0.00    8710/5319039     unit::sanity(void) [180]
-----------------------------------------------
                0.00    0.00   21424/21424       unit::seg(hash *) [65]
[66]     0.3    0.00    0.00   21424         hash::translate_int(char const *) [66]
                0.00    0.00   21424/293933      hash_table<char, char>::translate(char const *) [28]
-----------------------------------------------
                                6894             block_rule::apply_current(unit *) <cycle 5> [29]
[67]     0.3    0.00    0.00    6894         r_if::apply(unit *) <cycle 5> [67]
                0.00    0.00     222/222         r_seg::apply(unit *) [68]
                                1720             r_block::apply(unit *) <cycle 5> [209]
-----------------------------------------------
                0.00    0.00     222/222         r_if::apply(unit *) <cycle 5> [67]
[68]     0.3    0.00    0.00     222         r_seg::apply(unit *) [68]
                0.00    0.00     222/222         unit::segs(char, hash *) [69]
                0.00    0.00     222/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                                8148             unit::segs(char, hash *) [69]
                0.00    0.00     222/222         r_seg::apply(unit *) [68]
[69]     0.3    0.00    0.00     222+8148    unit::segs(char, hash *) [69]
                0.00    0.00   21424/21424       unit::seg(hash *) [65]
                0.00    0.00   27452/2479522     debug_wanted(int, int) [181]
                0.00    0.00   21424/860192      unit::inside(void) [184]
                0.00    0.00   16740/5319039     unit::sanity(void) [180]
                0.00    0.00   10712/329814      unit::Prev(char) [186]
                0.00    0.00    5356/924760      unit::Next(char) [183]
                                8148             unit::segs(char, hash *) [69]
-----------------------------------------------
                0.00    0.00     208/208         agent::timeslice(void) [3]
[70]     0.3    0.00    0.00     208         a_ssif::run(void) [70]
                0.00    0.00     208/430         unit::project(char) [53]
                0.00    0.00     208/208         unit::write_ssif(char *, int, int) [327]
                0.00    0.00     208/2993        unit::~unit(void) [623]
                0.00    0.00     208/2479522     debug_wanted(int, int) [181]
                0.00    0.00     208/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.00       2/246         rules::rules(char const *, char const *) [12]
                0.00    0.00       4/246         r_with::~r_with(void) <cycle 4> [124]
                0.00    0.00      55/246         hashing_rule::~hashing_rule(void) [100]
                0.00    0.00     185/246         block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
[71]     0.3    0.00    0.00     246         hash::~hash(void) [71]
                0.00    0.00     246/246         hash_table<char, char>::~hash_table(void) [72]
-----------------------------------------------
                0.00    0.00     246/246         hash::~hash(void) [71]
[72]     0.3    0.00    0.00     246         hash_table<char, char>::~hash_table(void) [72]
                0.00    0.00   61397/252699      hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [47]
-----------------------------------------------
                                  12             parse_rule(text *, hash *, int *) <cycle 3> [14]
[73]     0.2    0.00    0.00      12         r_near::r_near(char *, text *, hash *) <cycle 3> [73]
                0.00    0.00      12/503         booltab<char>::booltab(char *) [16]
                                  12             cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
-----------------------------------------------
                0.00    0.00       1/1           config_init(void) [59]
[74]     0.2    0.00    0.00       1         load_languages(char const *) [74]
                0.00    0.00       3/5           add_language(char const *) [57]
-----------------------------------------------
                0.00    0.00    4531/4531        agent::timeslice(void) [3]
[75]     0.2    0.00    0.00    4531         a_protocol::run(void) [75]
                0.00    0.00    2156/2156        a_ttscp::run_command(char *) [76]
                0.00    0.00     216/216         a_ttscp::disconnect(void) [131]
                0.00    0.00    4531/4531        sgets(char *, int, int, char *) [225]
                0.00    0.00    4530/7770        encode_string(char *, int, bool) [214]
                0.00    0.00    3021/4320        agent::block(int) [227]
                0.00    0.00    2155/2479522     debug_wanted(int, int) [181]
                0.00    0.00     646/3227        agent::schedule(void) [238]
-----------------------------------------------
                0.00    0.00    2156/2156        a_protocol::run(void) [75]
[76]     0.2    0.00    0.00    2156         a_ttscp::run_command(char *) [76]
                0.00    0.00     647/647         cmd_setl(char *, a_ttscp *) [80]
                0.00    0.00       1/1           cmd_shutdown(char *, a_ttscp *) [92]
                0.00    0.00     217/217         cmd_data(char *, a_ttscp *) [109]
                0.00    0.00     215/215         cmd_delhandle(char *, a_ttscp *) [123]
                0.00    0.00    2156/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/430         cmd_apply(char *, a_ttscp *) [290]
                0.00    0.00     430/430         cmd_stream(char *, a_ttscp *) [291]
                0.00    0.00     215/215         cmd_done(char *, a_ttscp *) [313]
                0.00    0.00       1/1           cmd_pass(char *, a_ttscp *) [377]
-----------------------------------------------
                0.00    0.00      27/1091        lang::add_soft_option(char const *) [120]
                0.00    0.00     417/1091        set_option(char *, char *, void *, hash_table<char, option> *) [88]
                0.00    0.00     647/1091        set_option(option *, char const *) [82]
[77]     0.2    0.00    0.00    1091         set_option(option *, char const *, void *) [77]
                0.00    0.00     220/1961        load_charset(char const *) <cycle 6> [172]
                0.00    0.00     141/141         invoke_set_action(option *, char const *) [134]
                0.00    0.00     164/208139      strdup [39]
                0.00    0.00     817/2479522     debug_wanted(int, int) [181]
                0.00    0.00     384/402         parse_cfg_str(char *) [303]
                0.00    0.00     285/5491        str2enum(char const *, char const *, int) [221]
                0.00    0.00     215/215         voice_switch(char const *) [323]
                0.00    0.00      17/17          void set_enum_option<SYNTH_TYPE>(option *, char const *, char *, char *) [359]
                0.00    0.00       1/1           void set_enum_option<OUT_ML>(option *, char const *, char *, char *) [394]
-----------------------------------------------
                                2304             marker::~marker(void) [78]
                0.00    0.00    2544/17912       marker::merge(marker *, marker **) [91]
                0.00    0.00    5548/17912       marker::operator<(marker) [104]
                0.00    0.00    9820/17912       unit::project_extents(void) [52]
[78]     0.2    0.00    0.00   17912+2304    marker::~marker(void) [78]
                0.00    0.00   14668/14668       marker::operator delete(void *) [79]
                                2304             marker::~marker(void) [78]
-----------------------------------------------
                0.00    0.00   14668/14668       marker::~marker(void) [78]
[79]     0.2    0.00    0.00   14668         marker::operator delete(void *) [79]
                0.00    0.00   14668/161285      slab<20>::release(void *) [40]
-----------------------------------------------
                0.00    0.00     647/647         a_ttscp::run_command(char *) [76]
[80]     0.1    0.00    0.00     647         cmd_setl(char *, a_ttscp *) [80]
                0.00    0.00     647/647         do_set(char *, context *) [81]
-----------------------------------------------
                0.00    0.00     647/647         cmd_setl(char *, a_ttscp *) [80]
[81]     0.1    0.00    0.00     647         do_set(char *, context *) [81]
                0.00    0.00     647/647         set_option(option *, char const *) [82]
                0.00    0.00     647/1061        split_string(char *) [264]
                0.00    0.00     647/1134        option_struct(char const *, hash_table<char, option> *) [258]
                0.00    0.00     647/647         access_level(int) [277]
                0.00    0.00     647/648         reply(char const *, context *) [276]
-----------------------------------------------
                0.00    0.00     647/647         do_set(char *, context *) [81]
[82]     0.1    0.00    0.00     647         set_option(option *, char const *) [82]
                0.00    0.00     647/1091        set_option(option *, char const *, void *) [77]
                0.00    0.00     647/1082        cow_configuration(configuration **) [263]
                0.00    0.00     432/1729        cow(cowabilium **, int, int, int) [248]
-----------------------------------------------
                0.00    0.00   10896/10896       unit::contour(char, int *, int, int, FIT_IDX, bool) [85]
[83]     0.1    0.00    0.00   10896         unit::prospoint(FIT_IDX, int, float) [83]
                0.00    0.00    6826/31486       marker::operator new(unsigned int) [54]
                0.00    0.00   10896/2479522     debug_wanted(int, int) [181]
                0.00    0.00    6826/6826        marker::marker(FIT_IDX, bool, int, marker *, float) [620]
-----------------------------------------------
                0.00    0.00    8352/8352        block_rule::apply_current(unit *) <cycle 5> [29]
[84]     0.1    0.00    0.00    8352         r_contour::apply(unit *) [84]
                0.00    0.00    8352/8352        unit::contour(char, int *, int, int, FIT_IDX, bool) [85]
-----------------------------------------------
                0.00    0.00    8352/8352        r_contour::apply(unit *) [84]
[85]     0.1    0.00    0.00    8352         unit::contour(char, int *, int, int, FIT_IDX, bool) [85]
                0.00    0.00   10896/10896       unit::prospoint(FIT_IDX, int, float) [83]
                0.00    0.00   30144/924760      unit::Next(char) [183]
                0.00    0.00   16704/793432      unit::LeftMost(char) [185]
-----------------------------------------------
                0.00    0.00       2/2           update_sampa(void) [87]
[86]     0.1    0.00    0.00       2         update_sampa(int, char const *) [86]
                0.00    0.00     114/1961        text::getline(char *) <cycle 6> [37]
                0.00    0.00       2/28          text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
                0.00    0.00       2/4           text::exists(void) [362]
                0.00    0.00       2/28          text::~text(void) [672]
-----------------------------------------------
                0.00    0.00       1/1           epos_init(void) [9]
[87]     0.1    0.00    0.00       1         update_sampa(void) [87]
                0.00    0.00       2/2           update_sampa(int, char const *) [86]
-----------------------------------------------
                0.00    0.00     417/417         load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
[88]     0.1    0.00    0.00     417         set_option(char *, char *, void *, hash_table<char, option> *) [88]
                0.00    0.00     417/1091        set_option(option *, char const *, void *) [77]
                0.00    0.00     417/1134        option_struct(char const *, hash_table<char, option> *) [258]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.1    0.00    0.00                 __do_global_ctors_aux [89]
                0.00    0.00       1/5           add_language(char const *) [57]
                0.00    0.00       1/2           __static_initialization_and_destruction_0 [689]
                0.00    0.00       1/648         reply(char const *, context *) [276]
                0.00    0.00       1/2           __static_initialization_and_destruction_0 [690]
                0.00    0.00       1/1           reset_soundcard(int) [392]
-----------------------------------------------
                                                 <spontaneous>
[90]     0.1    0.00    0.00                 __do_global_dtors_aux [90]
                0.00    0.00       1/5           add_language(char const *) [57]
                0.00    0.00       1/2           __static_initialization_and_destruction_0 [690]
                0.00    0.00       1/2           __static_initialization_and_destruction_0 [689]
-----------------------------------------------
                                 424             marker::merge(marker *, marker **) [91]
                0.00    0.00   21920/21920       unit::project_extents(void) [52]
[91]     0.1    0.00    0.00   21920+424     marker::merge(marker *, marker **) [91]
                0.00    0.00    5548/5548        marker::operator<(marker) [104]
                0.00    0.00    2544/17912       marker::~marker(void) [78]
                                 424             marker::merge(marker *, marker **) [91]
-----------------------------------------------
                0.00    0.00       1/1           a_ttscp::run_command(char *) [76]
[92]     0.1    0.00    0.00       1         cmd_shutdown(char *, a_ttscp *) [92]
                0.00    0.00       1/1           server_shutdown(void) [94]
                0.00    0.00       1/868         hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00       1/432         a_ttscp::~a_ttscp(void) [164]
                0.00    0.00       1/3711        reply(char const *) [233]
                0.00    0.00       1/9499        context::leave(void) [210]
-----------------------------------------------
                0.00    0.00       1/1           server_shutdown(void) [94]
[93]     0.1    0.00    0.00       1         epos_done(void) [93]
                0.00    0.00       1/1           epos_catharsis(void) [95]
                0.00    0.00       1/1           config_release(void) [139]
                0.00    0.00       2/2           release(char **) [373]
                0.00    0.00       1/1           unit::done(void) [381]
                0.00    0.00       1/1           shutdown_hashing(void) [397]
                0.00    0.00       1/1           shutdown_cfgs(void) [395]
                0.00    0.00       1/1           cow_catharsis(void) [379]
-----------------------------------------------
                0.00    0.00       1/1           cmd_shutdown(char *, a_ttscp *) [92]
[94]     0.1    0.00    0.00       1         server_shutdown(void) [94]
                0.00    0.00       1/1           epos_done(void) [93]
                0.00    0.00       2/436         hash_table<char, a_ttscp>::~hash_table(void) [628]
                0.00    0.00       1/1           a_accept::~a_accept(void) [697]
                0.00    0.00       1/436         context::~context(void) [627]
-----------------------------------------------
                0.00    0.00       1/1           epos_done(void) [93]
[95]     0.1    0.00    0.00       1         epos_catharsis(void) [95]
                0.00    0.00       1/1           configuration::shutdown(void) [96]
                0.00    0.00       1/1           free_all_options(void) [142]
                0.00    0.00       1/1           shutdown_file_cache(void) [163]
                0.00    0.00       1/2993        unit::~unit(void) [623]
                0.00    0.00       1/1           function<char>::~function(void) [702]
                0.00    0.00       1/1           shutdown_enc(void) [396]
-----------------------------------------------
                0.00    0.00       1/1           epos_catharsis(void) [95]
[96]     0.1    0.00    0.00       1         configuration::shutdown(void) [96]
                0.00    0.00       3/3           lang::~lang(void) [97]
-----------------------------------------------
                0.00    0.00       3/3           configuration::shutdown(void) [96]
[97]     0.1    0.00    0.00       3         lang::~lang(void) [97]
                0.00    0.00       2/2           rules::~rules(void) [99]
                0.00    0.00       2/3           hash_table<char, option>::~hash_table(void) [126]
                0.00    0.00      54/154         hash_table<char, option>::remove(char const *) [137]
                0.00    0.00      27/27          hash_table<char, option>::get_random(void) [355]
                0.00    0.00      17/17          voice::~voice(void) [675]
                0.00    0.00       3/2479522     debug_wanted(int, int) [181]
                0.00    0.00       3/673         cow_unstring(cowabilium *, option *) [274]
-----------------------------------------------
[98]     0.1    0.00    0.00       2+576     <cycle 4 as a whole> [98]
                0.00    0.00     185             block_rule::~block_rule(void) <cycle 4> [102]
                0.00    0.00     104             cond_rule::~cond_rule(void) <cycle 4> [114]
                0.00    0.00       8             r_with::~r_with(void) <cycle 4> [124]
                0.00    0.00     105             r_block::~r_block(void) <cycle 4> [660]
                0.00    0.00      58             r_choice::~r_choice(void) <cycle 4> [667]
                0.00    0.00      41             r_inside::~r_inside(void) <cycle 4> [671]
                0.00    0.00      22             r_switch::~r_switch(void) <cycle 4> [673]
                0.00    0.00      12             r_near::~r_near(void) <cycle 4> [679]
-----------------------------------------------
                0.00    0.00       2/2           lang::~lang(void) [97]
[99]     0.1    0.00    0.00       2         rules::~rules(void) [99]
                0.00    0.00       2/2           r_block::~r_block(void) <cycle 4> [660]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       8/55          r_seg::~r_seg(void) [111]
                0.00    0.00      13/55          r_prosody::~r_prosody(void) [107]
                0.00    0.00      34/55          r_subst::~r_subst(void) [106]
[100]    0.1    0.00    0.00      55         hashing_rule::~hashing_rule(void) [100]
                0.00    0.00      55/246         hash::~hash(void) [71]
                0.00    0.00      55/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00       3/3           config_init(void) [59]
[101]    0.1    0.00    0.00       3         load_config(char const *) [101]
                0.00    0.00       3/23          load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
-----------------------------------------------
                                  22             r_switch::~r_switch(void) <cycle 4> [673]
                                  58             r_choice::~r_choice(void) <cycle 4> [667]
                                 105             r_block::~r_block(void) <cycle 4> [660]
[102]    0.1    0.00    0.00     185         block_rule::~block_rule(void) <cycle 4> [102]
                0.00    0.00      27/34          r_subst::~r_subst(void) [106]
                0.00    0.00      13/13          r_prosody::~r_prosody(void) [107]
                0.00    0.00       5/5           r_prep::~r_prep(void) [122]
                0.00    0.00       2/2           r_postp::~r_postp(void) [133]
                0.00    0.00       1/8           r_seg::~r_seg(void) [111]
                0.00    0.00     242/242         r_contour::~r_contour(void) [645]
                0.00    0.00     185/970         rule::~rule(void) [624]
                0.00    0.00     161/218         r_regress::~r_regress(void) [648]
                0.00    0.00     134/140         r_regex::~r_regex(void) [656]
                0.00    0.00      57/57          r_progress::~r_progress(void) [668]
                0.00    0.00      10/10          r_nothing::~r_nothing(void) [680]
                0.00    0.00       7/7           r_raise::~r_raise(void) [681]
                0.00    0.00       4/4           r_syll::~r_syll(void) [683]
                0.00    0.00       4/4           r_smooth::~r_smooth(void) [684]
                0.00    0.00       1/1           r_absol::~r_absol(void) [696]
                                  58             r_choice::~r_choice(void) <cycle 4> [667]
                                  43             r_if::~r_if(void) <cycle 4> [669]
                                  41             r_inside::~r_inside(void) <cycle 4> [671]
                                  22             r_switch::~r_switch(void) <cycle 4> [673]
                                  12             r_near::~r_near(void) <cycle 4> [679]
                                  12             r_block::~r_block(void) <cycle 4> [660]
                                   8             r_with::~r_with(void) <cycle 4> [124]
-----------------------------------------------
                0.00    0.00       1/1           config_init(void) [59]
[103]    0.0    0.00    0.00       1         restrict_options(void) [103]
                0.00    0.00      57/1961        text::getline(char *) <cycle 6> [37]
                0.00    0.00       1/28          text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00      56/1061        split_string(char *) [264]
                0.00    0.00      56/1275        hash_table<char, option>::translate(char const *) [252]
                0.00    0.00       1/4           text::exists(void) [362]
                0.00    0.00       1/28          text::~text(void) [672]
-----------------------------------------------
                0.00    0.00    5548/5548        marker::merge(marker *, marker **) [91]
[104]    0.0    0.00    0.00    5548         marker::operator<(marker) [104]
                0.00    0.00    5548/17912       marker::~marker(void) [78]
-----------------------------------------------
                0.00    0.00       3/15          r_with::apply(unit *) [45]
                0.00    0.00      12/15          hashing_rule::load_hash(void) [20]
[105]    0.0    0.00    0.00      15         literal_hash(char *) [105]
                0.00    0.00     164/28331       hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                0.00    0.00      15/17          hash::hash(int) [676]
-----------------------------------------------
                0.00    0.00       2/34          r_postp::~r_postp(void) [133]
                0.00    0.00       5/34          r_prep::~r_prep(void) [122]
                0.00    0.00      27/34          block_rule::~block_rule(void) <cycle 4> [102]
[106]    0.0    0.00    0.00      34         r_subst::~r_subst(void) [106]
                0.00    0.00      34/55          hashing_rule::~hashing_rule(void) [100]
-----------------------------------------------
                0.00    0.00      13/13          block_rule::~block_rule(void) <cycle 4> [102]
[107]    0.0    0.00    0.00      13         r_prosody::~r_prosody(void) [107]
                0.00    0.00      13/55          hashing_rule::~hashing_rule(void) [100]
-----------------------------------------------
                0.00    0.00     434/868         a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     434/868         cmd_data(char *, a_ttscp *) [109]
[108]    0.0    0.00    0.00     868         hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [108]
                0.00    0.00     868/103621      tree_alloc(void) [43]
                0.00    0.00     868/4117        hash_table<char, a_ttscp>::fn(char const *) [231]
                0.00    0.00     868/103621      balance(void) [192]
-----------------------------------------------
                0.00    0.00     217/217         a_ttscp::run_command(char *) [76]
[109]    0.0    0.00    0.00     217         cmd_data(char *, a_ttscp *) [109]
                0.00    0.00     434/868         hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [108]
                0.00    0.00     217/868         hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00     217/2381        hash_table<char, a_ttscp>::translate(char const *) [240]
                0.00    0.00     217/3711        reply(char const *) [233]
-----------------------------------------------
                0.00    0.00       1/868         cmd_shutdown(char *, a_ttscp *) [92]
                0.00    0.00       4/868         a_ttscp::~a_ttscp(void) [164]
                0.00    0.00     216/868         a_ttscp::disconnect(void) [131]
                0.00    0.00     217/868         cmd_data(char *, a_ttscp *) [109]
                0.00    0.00     430/868         cmd_delhandle(char *, a_ttscp *) [123]
[110]    0.0    0.00    0.00     868         hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00     868/103621      tree_delete(void *) [46]
                0.00    0.00     868/4117        hash_table<char, a_ttscp>::fn(char const *) [231]
-----------------------------------------------
                0.00    0.00       1/8           block_rule::~block_rule(void) <cycle 4> [102]
                0.00    0.00       7/8           cond_rule::~cond_rule(void) <cycle 4> [114]
[111]    0.0    0.00    0.00       8         r_seg::~r_seg(void) [111]
                0.00    0.00       8/55          hashing_rule::~hashing_rule(void) [100]
-----------------------------------------------
                0.00    0.00      54/556         lang::add_soft_option(char const *) [120]
                0.00    0.00      98/556         alloc_level_options(option *, OPT_STRUCT, void *, int, char const *) [135]
                0.00    0.00     404/556         put_into_option_set(option *) [119]
[112]    0.0    0.00    0.00     556         hash_table<char, option>::add(char const *, option const *) [112]
                0.00    0.00     502/103621      tree_alloc(void) [43]
                0.00    0.00     556/1985        hash_table<char, option>::fn(char const *) [245]
                0.00    0.00     502/103621      balance(void) [192]
-----------------------------------------------
                0.00    0.00     968/968         parse_rule(text *, hash *, int *) <cycle 3> [14]
[113]    0.0    0.00    0.00     968         rule::set_dbg_tag(text *) [113]
                0.00    0.00     968/208139      strdup [39]
                0.00    0.00     968/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                                   8             r_with::~r_with(void) <cycle 4> [124]
                                  12             r_near::~r_near(void) <cycle 4> [679]
                                  41             r_inside::~r_inside(void) <cycle 4> [671]
                                  43             r_if::~r_if(void) <cycle 4> [669]
[114]    0.0    0.00    0.00     104         cond_rule::~cond_rule(void) <cycle 4> [114]
                0.00    0.00       7/8           r_seg::~r_seg(void) [111]
                0.00    0.00     104/970         rule::~rule(void) [624]
                0.00    0.00       6/140         r_regex::~r_regex(void) [656]
                                  91             r_block::~r_block(void) <cycle 4> [660]
-----------------------------------------------
                0.00    0.00     434/434         agent::timeslice(void) [3]
[115]    0.0    0.00    0.00     434         a_accept::run(void) [115]
                0.00    0.00     434/434         a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     434/435         make_nonblocking(int) [284]
                0.00    0.00     434/2479522     debug_wanted(int, int) [181]
                0.00    0.00     434/9499        context::leave(void) [210]
                0.00    0.00     434/9498        context::enter(void) [211]
                0.00    0.00     434/4320        agent::block(int) [227]
-----------------------------------------------
                0.00    0.00     434/434         a_accept::run(void) [115]
[116]    0.0    0.00    0.00     434         a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     434/868         hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [108]
                0.00    0.00    1302/10974       sputs(char const *, int) [206]
                0.00    0.00     434/434         a_protocol::a_protocol(void) [632]
                0.00    0.00     434/436         context::context(int, int) [629]
                0.00    0.00     434/9498        context::enter(void) [211]
                0.00    0.00     434/435         make_rnd_passwd(char *, int) [285]
                0.00    0.00     434/2381        hash_table<char, a_ttscp>::translate(char const *) [240]
                0.00    0.00     434/436         hash_table<char, a_ttscp>::hash_table(int) [630]
                0.00    0.00     434/9499        context::leave(void) [210]
                0.00    0.00     434/4320        agent::block(int) [227]
-----------------------------------------------
                0.00    0.00       1/970         r_absol::r_absol(char *) [178]
                0.00    0.00       4/970         r_smooth::r_smooth(char *) [170]
                0.00    0.00       4/970         r_syll::r_syll(char *) [169]
                0.00    0.00       7/970         r_raise::r_raise(char *) [63]
                0.00    0.00      10/970         r_nothing::r_nothing(void) [155]
                0.00    0.00      55/970         hashing_rule::hashing_rule(char *) [146]
                0.00    0.00     104/970         cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
                0.00    0.00     140/970         r_regex::r_regex(char *) [130]
                0.00    0.00     185/970         block_rule::block_rule(void) [140]
                0.00    0.00     218/970         r_regress::r_regress(char *) [15]
                0.00    0.00     242/970         r_contour::r_contour(char *) [138]
[117]    0.0    0.00    0.00     970         rule::rule(char *) [117]
                0.00    0.00     720/208139      strdup [39]
-----------------------------------------------
                0.00    0.00       1/1           config_init(void) [59]
[118]    0.0    0.00    0.00       1         make_option_set(void) [118]
                0.00    0.00     216/216         put_into_option_set(option *) [119]
                0.00    0.00       2/154         hash_table<char, option>::remove(char const *) [137]
                0.00    0.00       1/3           hash_table<char, option>::hash_table(int) [685]
-----------------------------------------------
                0.00    0.00     216/216         make_option_set(void) [118]
[119]    0.0    0.00    0.00     216         put_into_option_set(option *) [119]
                0.00    0.00     404/556         hash_table<char, option>::add(char const *, option const *) [112]
-----------------------------------------------
                0.00    0.00      27/27          lang::add_soft_opts(char const *) [121]
[120]    0.0    0.00    0.00      27         lang::add_soft_option(char const *) [120]
                0.00    0.00      27/1091        set_option(option *, char const *, void *) [77]
                0.00    0.00      54/556         hash_table<char, option>::add(char const *, option const *) [112]
                0.00    0.00      27/1134        option_struct(char const *, hash_table<char, option> *) [258]
                0.00    0.00      25/1275        hash_table<char, option>::translate(char const *) [252]
                0.00    0.00       2/3           hash_table<char, option>::hash_table(int) [685]
-----------------------------------------------
                0.00    0.00       2/2           lang::lang(char const *, char const *) [58]
[121]    0.0    0.00    0.00       2         lang::add_soft_opts(char const *) [121]
                0.00    0.00      27/27          lang::add_soft_option(char const *) [120]
-----------------------------------------------
                0.00    0.00       5/5           block_rule::~block_rule(void) <cycle 4> [102]
[122]    0.0    0.00    0.00       5         r_prep::~r_prep(void) [122]
                0.00    0.00       5/34          r_subst::~r_subst(void) [106]
-----------------------------------------------
                0.00    0.00     215/215         a_ttscp::run_command(char *) [76]
[123]    0.0    0.00    0.00     215         cmd_delhandle(char *, a_ttscp *) [123]
                0.00    0.00     430/868         hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00     215/432         a_ttscp::~a_ttscp(void) [164]
                0.00    0.00     215/9499        context::leave(void) [210]
                0.00    0.00     215/9498        context::enter(void) [211]
                0.00    0.00     215/3711        reply(char const *) [233]
-----------------------------------------------
                                   8             block_rule::~block_rule(void) <cycle 4> [102]
[124]    0.0    0.00    0.00       8         r_with::~r_with(void) <cycle 4> [124]
                0.00    0.00       4/246         hash::~hash(void) [71]
                                   8             cond_rule::~cond_rule(void) <cycle 4> [114]
-----------------------------------------------
                                 710             hash_table<char, option>::dissolvetree(hsearchtree<char, option> *) [125]
                0.00    0.00     360/360         hash_table<char, option>::~hash_table(void) [126]
[125]    0.0    0.00    0.00     360+710     hash_table<char, option>::dissolvetree(hsearchtree<char, option> *) [125]
                0.00    0.00     355/103621      tree_delete(void *) [46]
                                 710             hash_table<char, option>::dissolvetree(hsearchtree<char, option> *) [125]
-----------------------------------------------
                0.00    0.00       1/3           config_release(void) [139]
                0.00    0.00       2/3           lang::~lang(void) [97]
[126]    0.0    0.00    0.00       3         hash_table<char, option>::~hash_table(void) [126]
                0.00    0.00     360/360         hash_table<char, option>::dissolvetree(hsearchtree<char, option> *) [125]
-----------------------------------------------
                0.00    0.00     430/430         agent::timeslice(void) [3]
[127]    0.0    0.00    0.00     430         a_ascii::run(void) [127]
                0.00    0.00     430/430         str2units(char const *) [128]
                0.00    0.00     430/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.00     430/430         a_ascii::run(void) [127]
[128]    0.0    0.00    0.00     430         str2units(char const *) [128]
                0.00    0.00     430/430         parser::parser(char const *, int) [129]
                0.00    0.00     430/27262       unit::operator new(unsigned int) [617]
                0.00    0.00     430/430         unit::unit(char, parser *) [639]
                0.00    0.00     430/430         parser::~parser(void) [633]
-----------------------------------------------
                0.00    0.00     430/430         str2units(char const *) [128]
[129]    0.0    0.00    0.00     430         parser::parser(char const *, int) [129]
                0.00    0.00     430/208139      strdup [39]
                0.00    0.00     430/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/430         parser::init(SYMTABLE) [294]
-----------------------------------------------
                0.00    0.00     140/140         parse_rule(text *, hash *, int *) <cycle 3> [14]
[130]    0.0    0.00    0.00     140         r_regex::r_regex(char *) [130]
                0.00    0.00     280/208139      strdup [39]
                0.00    0.00     140/970         rule::rule(char *) [117]
                0.00    0.00     280/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00     216/216         a_protocol::run(void) [75]
[131]    0.0    0.00    0.00     216         a_ttscp::disconnect(void) [131]
                0.00    0.00     216/868         hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00     216/2479522     debug_wanted(int, int) [181]
                0.00    0.00     216/216         a_disconnector::disconnect(a_protocol *) [309]
-----------------------------------------------
                0.00    0.00     123/123         parse_rule(text *, hash *, int *) <cycle 3> [14]
[132]    0.0    0.00    0.00     123         resolve_vars(char *, hash *, text *) [132]
                0.00    0.00     175/293933      hash_table<char, char>::translate(char const *) [28]
                0.00    0.00    3497/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       2/2           block_rule::~block_rule(void) <cycle 4> [102]
[133]    0.0    0.00    0.00       2         r_postp::~r_postp(void) [133]
                0.00    0.00       2/34          r_subst::~r_subst(void) [106]
-----------------------------------------------
                0.00    0.00     141/141         set_option(option *, char const *, void *) [77]
[134]    0.0    0.00    0.00     141         invoke_set_action(option *, char const *) [134]
                0.00    0.00       1/1           post_set_unit_levels(char const *) [136]
                0.00    0.00      20/20          pre_init_f(char const *) [357]
                0.00    0.00       1/1           pre_set_unit_levels(char const *) [390]
-----------------------------------------------
                0.00    0.00      21/21          post_set_unit_levels(char const *) [136]
[135]    0.0    0.00    0.00      21         alloc_level_options(option *, OPT_STRUCT, void *, int, char const *) [135]
                0.00    0.00      98/556         hash_table<char, option>::add(char const *, option const *) [112]
                0.00    0.00      49/208139      strdup [39]
                0.00    0.00      49/49          alloc_option(option *, OPT_STRUCT) [347]
-----------------------------------------------
                0.00    0.00       1/1           invoke_set_action(option *, char const *) [134]
[136]    0.0    0.00    0.00       1         post_set_unit_levels(char const *) [136]
                0.00    0.00      21/21          alloc_level_options(option *, OPT_STRUCT, void *, int, char const *) [135]
                0.00    0.00      15/72          enum2str(int, char const *) [346]
                0.00    0.00       4/5491        str2enum(char const *, char const *, int) [221]
-----------------------------------------------
                0.00    0.00       2/154         make_option_set(void) [118]
                0.00    0.00      54/154         lang::~lang(void) [97]
                0.00    0.00      98/154         free_all_options(option *, cowabilium *) [141]
[137]    0.0    0.00    0.00     154         hash_table<char, option>::remove(char const *) [137]
                0.00    0.00     147/103621      tree_delete(void *) [46]
                0.00    0.00     154/1985        hash_table<char, option>::fn(char const *) [245]
-----------------------------------------------
                0.00    0.00     242/242         parse_rule(text *, hash *, int *) <cycle 3> [14]
[138]    0.0    0.00    0.00     242         r_contour::r_contour(char *) [138]
                0.00    0.00     242/970         rule::rule(char *) [117]
                0.00    0.00     242/246         fit(char) [306]
-----------------------------------------------
                0.00    0.00       1/1           epos_done(void) [93]
[139]    0.0    0.00    0.00       1         config_release(void) [139]
                0.00    0.00       1/3           hash_table<char, option>::~hash_table(void) [126]
-----------------------------------------------
                0.00    0.00      22/185         r_switch::r_switch(text *, hash *) <cycle 3> [150]
                0.00    0.00      58/185         r_choice::r_choice(text *, hash *) <cycle 3> [147]
                0.00    0.00     105/185         r_block::r_block(text *, hash *) <cycle 3> [143]
[140]    0.0    0.00    0.00     185         block_rule::block_rule(void) [140]
                0.00    0.00     185/970         rule::rule(char *) [117]
-----------------------------------------------
                0.00    0.00       4/4           free_all_options(void) [142]
[141]    0.0    0.00    0.00       4         free_all_options(option *, cowabilium *) [141]
                0.00    0.00      98/154         hash_table<char, option>::remove(char const *) [137]
                0.00    0.00      49/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/1           epos_catharsis(void) [95]
[142]    0.0    0.00    0.00       1         free_all_options(void) [142]
                0.00    0.00       4/4           free_all_options(option *, cowabilium *) [141]
-----------------------------------------------
                                 103             parse_rule(text *, hash *, int *) <cycle 3> [14]
                0.00    0.17       2/2           rules::rules(char const *, char const *) [12]
[143]    0.0    0.00    0.00     105         r_block::r_block(text *, hash *) <cycle 3> [143]
                0.00    0.00     105/185         block_rule::block_rule(void) [140]
                                 105             block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
-----------------------------------------------
                                   8             r_with::r_with(char *, text *, hash *) <cycle 3> [156]
                                  12             r_near::r_near(char *, text *, hash *) <cycle 3> [73]
                                  41             r_inside::r_inside(char *, text *, hash *) <cycle 3> [50]
                                  43             r_if::r_if(char *, text *, hash *) <cycle 3> [670]
[144]    0.0    0.00    0.00     104         cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
                0.00    0.00     104/970         rule::rule(char *) [117]
                                 104             next_rule(text *, hash *, int *) <cycle 3> [256]
-----------------------------------------------
                0.00    0.00       1/28          load_charset(char const *) <cycle 6> [172]
                0.00    0.00       1/28          restrict_options(void) [103]
                0.00    0.00       2/28          rules::rules(char const *, char const *) [12]
                0.00    0.00       2/28          update_sampa(int, char const *) [86]
                0.00    0.00      22/28          load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
[145]    0.0    0.00    0.00      28         text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00      28/208139      strdup [39]
                0.00    0.00      28/43          text::subfile(char const *) [148]
-----------------------------------------------
                0.00    0.00       8/55          r_seg::r_seg(char *) [154]
                0.00    0.00      13/55          r_prosody::r_prosody(char *) [151]
                0.00    0.00      34/55          r_subst::r_subst(char *) [149]
[146]    0.0    0.00    0.00      55         hashing_rule::hashing_rule(char *) [146]
                0.00    0.00      55/970         rule::rule(char *) [117]
                0.00    0.00      12/208139      strdup [39]
                0.00    0.00      43/93          compose_pathname(char const *, char const *, char const *) [345]
-----------------------------------------------
                                  58             parse_rule(text *, hash *, int *) <cycle 3> [14]
[147]    0.0    0.00    0.00      58         r_choice::r_choice(text *, hash *) <cycle 3> [147]
                0.00    0.00      58/185         block_rule::block_rule(void) [140]
                                  58             block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
-----------------------------------------------
                0.00    0.00      15/43          text::getline(char *) <cycle 6> [37]
                0.00    0.00      28/43          text::text(char const *, char const *, char const *, char const *, bool) [145]
[148]    0.0    0.00    0.00      43         text::subfile(char const *) [148]
                0.00    0.00      43/208139      strdup [39]
                0.00    0.00      43/93          compose_pathname(char const *, char const *, char const *) [345]
                0.00    0.00      43/2479522     debug_wanted(int, int) [181]
                0.00    0.00      43/48          fopen(char const *, char const *, char const *) [348]
-----------------------------------------------
                0.00    0.00       2/34          r_postp::r_postp(char *) [177]
                0.00    0.00       5/34          r_prep::r_prep(char *) [165]
                0.00    0.00      27/34          parse_rule(text *, hash *, int *) <cycle 3> [14]
[149]    0.0    0.00    0.00      34         r_subst::r_subst(char *) [149]
                0.00    0.00      34/55          hashing_rule::hashing_rule(char *) [146]
-----------------------------------------------
                                  22             parse_rule(text *, hash *, int *) <cycle 3> [14]
[150]    0.0    0.00    0.00      22         r_switch::r_switch(text *, hash *) <cycle 3> [150]
                0.00    0.00      22/185         block_rule::block_rule(void) [140]
                                  22             block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
-----------------------------------------------
                0.00    0.00      13/13          parse_rule(text *, hash *, int *) <cycle 3> [14]
[151]    0.0    0.00    0.00      13         r_prosody::r_prosody(char *) [151]
                0.00    0.00      13/55          hashing_rule::hashing_rule(char *) [146]
-----------------------------------------------
                0.00    0.00       4/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
[152]    0.0    0.00    0.00       4         hash_table<char, file>::add(char const *, file const *) [152]
                0.00    0.00       4/103621      tree_alloc(void) [43]
                0.00    0.00       4/12          hash_table<char, file>::fn(char const *) [360]
                0.00    0.00       4/103621      balance(void) [192]
-----------------------------------------------
                0.00    0.00       1/4           check_cfg_version(char const *) [175]
                0.00    0.00       1/4           lpcsyn::lpcsyn(voice *) [176]
                0.00    0.00       1/4           lpcfloat::lpcfloat(voice *) [168]
                0.00    0.00       1/4           voice::claim_all(void) [173]
[153]    0.0    0.00    0.00       4         claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
                0.00    0.00       4/4           hash_table<char, file>::add(char const *, file const *) [152]
                0.00    0.00       4/93          compose_pathname(char const *, char const *, char const *) [345]
                0.00    0.00       4/4           hash_table<char, file>::translate(char const *) [366]
                0.00    0.00       4/48          fopen(char const *, char const *, char const *) [348]
                0.00    0.00       4/4           get_timestamp(char *) [363]
                0.00    0.00       4/2479522     debug_wanted(int, int) [181]
                0.00    0.00       1/1           hash_table<char, file>::hash_table(int) [710]
                0.00    0.00       1/1           floatoven(char *, int) [382]
-----------------------------------------------
                0.00    0.00       8/8           parse_rule(text *, hash *, int *) <cycle 3> [14]
[154]    0.0    0.00    0.00       8         r_seg::r_seg(char *) [154]
                0.00    0.00       8/55          hashing_rule::hashing_rule(char *) [146]
-----------------------------------------------
                0.00    0.00      10/10          parse_rule(text *, hash *, int *) <cycle 3> [14]
[155]    0.0    0.00    0.00      10         r_nothing::r_nothing(void) [155]
                0.00    0.00      10/970         rule::rule(char *) [117]
-----------------------------------------------
                                   8             parse_rule(text *, hash *, int *) <cycle 3> [14]
[156]    0.0    0.00    0.00       8         r_with::r_with(char *, text *, hash *) <cycle 3> [156]
                0.00    0.00       6/208139      strdup [39]
                0.00    0.00       2/93          compose_pathname(char const *, char const *, char const *) [345]
                                   8             cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
-----------------------------------------------
                0.00    0.00       2/2           add_language(char const *) [57]
[157]    0.0    0.00    0.00       2         __static_initialization_and_destruction_0 [157]
                0.00    0.00       1/1           static_configuration::static_configuration(void) [158]
                0.00    0.00       1/1           slab<328>::slab(int) [711]
                0.00    0.00       1/1           configuration::configuration(void) [703]
                0.00    0.00       1/1           configuration::~configuration(void) [692]
                0.00    0.00       1/1           slab<328>::~slab(void) [700]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [157]
[158]    0.0    0.00    0.00       1         static_configuration::static_configuration(void) [158]
                0.00    0.00       6/208139      strdup [39]
-----------------------------------------------
                                   8             hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *) [159]
                0.00    0.00      30/30          hash_table<char, file>::forall(void (*)(char *, file *, void *), void *) [162]
[159]    0.0    0.00    0.00      30+8       hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *) [159]
                0.00    0.00       4/4           uncache_file(char *, file *, void *) [161]
                                   8             hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *) [159]
-----------------------------------------------
                0.00    0.00       4/4           uncache_file(char *, file *, void *) [161]
[160]    0.0    0.00    0.00       4         hash_table<char, file>::remove(char const *) [160]
                0.00    0.00       4/103621      tree_delete(void *) [46]
                0.00    0.00       4/12          hash_table<char, file>::fn(char const *) [360]
-----------------------------------------------
                0.00    0.00       4/4           hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *) [159]
[161]    0.0    0.00    0.00       4         uncache_file(char *, file *, void *) [161]
                0.00    0.00       4/4           hash_table<char, file>::remove(char const *) [160]
                0.00    0.00       4/4           file::~file(void) [682]
-----------------------------------------------
                0.00    0.00       1/1           shutdown_file_cache(void) [163]
[162]    0.0    0.00    0.00       1         hash_table<char, file>::forall(void (*)(char *, file *, void *), void *) [162]
                0.00    0.00      30/30          hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *) [159]
-----------------------------------------------
                0.00    0.00       1/1           epos_catharsis(void) [95]
[163]    0.0    0.00    0.00       1         shutdown_file_cache(void) [163]
                0.00    0.00       1/1           hash_table<char, file>::forall(void (*)(char *, file *, void *), void *) [162]
                0.00    0.00       1/1           hash_table<char, file>::~hash_table(void) [699]
-----------------------------------------------
                                   2             a_ttscp::~a_ttscp(void) [164]
                0.00    0.00       1/432         cmd_shutdown(char *, a_ttscp *) [92]
                0.00    0.00     215/432         cmd_delhandle(char *, a_ttscp *) [123]
                0.00    0.00     216/432         a_disconnector::run(void) [171]
[164]    0.0    0.00    0.00     432+2       a_ttscp::~a_ttscp(void) [164]
                0.00    0.00       4/868         hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00     870/2381        hash_table<char, a_ttscp>::translate(char const *) [240]
                0.00    0.00     868/9498        context::enter(void) [211]
                0.00    0.00     868/9499        context::leave(void) [210]
                0.00    0.00     434/2479522     debug_wanted(int, int) [181]
                0.00    0.00     434/436         hash_table<char, a_ttscp>::~hash_table(void) [628]
                0.00    0.00     434/434         async_close(int) [286]
                0.00    0.00     434/436         context::~context(void) [627]
                0.00    0.00     434/434         a_protocol::~a_protocol(void) [631]
                0.00    0.00     215/430         stream::~stream(void) [634]
                0.00    0.00       2/2           hash_table<char, a_ttscp>::get_random(void) [371]
                                   2             a_ttscp::~a_ttscp(void) [164]
-----------------------------------------------
                0.00    0.00       5/5           parse_rule(text *, hash *, int *) <cycle 3> [14]
[165]    0.0    0.00    0.00       5         r_prep::r_prep(char *) [165]
                0.00    0.00       5/34          r_subst::r_subst(char *) [149]
-----------------------------------------------
                0.00    0.00       1/2           a_synth::run(void) [5]
                0.00    0.00       1/2           a_syn::run(void) [174]
[166]    0.0    0.00    0.00       2         a_synth::init_syn(void) [166]
                0.00    0.00       2/2           setup_synth(voice *) [167]
-----------------------------------------------
                0.00    0.00       2/2           a_synth::init_syn(void) [166]
[167]    0.0    0.00    0.00       2         setup_synth(voice *) [167]
                0.00    0.00       1/1           lpcfloat::lpcfloat(voice *) [168]
                0.00    0.00       1/1           mbrsyn::mbrsyn(voice *) [706]
-----------------------------------------------
                0.00    0.00       1/1           setup_synth(voice *) [167]
[168]    0.0    0.00    0.00       1         lpcfloat::lpcfloat(voice *) [168]
                0.00    0.00       1/1           lpcsyn::lpcsyn(voice *) [176]
                0.00    0.00       1/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
-----------------------------------------------
                0.00    0.00       4/4           parse_rule(text *, hash *, int *) <cycle 3> [14]
[169]    0.0    0.00    0.00       4         r_syll::r_syll(char *) [169]
                0.00    0.00       4/970         rule::rule(char *) [117]
                0.00    0.00     127/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       4/4           parse_rule(text *, hash *, int *) <cycle 3> [14]
[170]    0.0    0.00    0.00       4         r_smooth::r_smooth(char *) [170]
                0.00    0.00       4/970         rule::rule(char *) [117]
                0.00    0.00       4/246         fit(char) [306]
-----------------------------------------------
                0.00    0.00     216/216         agent::timeslice(void) [3]
[171]    0.0    0.00    0.00     216         a_disconnector::run(void) [171]
                0.00    0.00     216/432         a_ttscp::~a_ttscp(void) [164]
-----------------------------------------------
                                   3             text::getline(char *) <cycle 6> [37]
                0.00    0.00     220/1961        set_option(option *, char const *, void *) [77]
[172]    0.0    0.00    0.00     223         load_charset(char const *) <cycle 6> [172]
                0.00    0.00       1/28          text::text(char const *, char const *, char const *, char const *, bool) [145]
                0.00    0.00     223/5491        str2enum(char const *, char const *, int) [221]
                0.00    0.00     191/346         internal_code(wchar_t, unsigned char) [305]
                0.00    0.00       1/2479522     debug_wanted(int, int) [181]
                0.00    0.00       1/4           text::exists(void) [362]
                0.00    0.00       1/2           alloc_charset(char const *) [370]
                0.00    0.00       1/28          text::~text(void) [672]
                                 192             text::getline(char *) <cycle 6> [37]
-----------------------------------------------
                0.00    0.00     111/111         synth::synsegs(voice *, segment *, int, wavefm *) [6]
[173]    0.0    0.00    0.00     111         voice::claim_all(void) [173]
                0.00    0.00       1/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
-----------------------------------------------
                0.00    0.00     104/104         agent::timeslice(void) [3]
[174]    0.0    0.00    0.00     104         a_syn::run(void) [174]
                0.00    0.00       1/2           a_synth::init_syn(void) [166]
                0.00    0.00     104/215         wavefm::wavefm(voice *) [652]
                0.00    0.00     104/104         mbrsyn::synssif(voice *, char *, wavefm *) [343]
                0.00    0.00     104/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.00       1/1           config_init(void) [59]
[175]    0.0    0.00    0.00       1         check_cfg_version(char const *) [175]
                0.00    0.00       1/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
                0.00    0.00       1/4           unclaim(file *) [367]
-----------------------------------------------
                0.00    0.00       1/1           lpcfloat::lpcfloat(voice *) [168]
[176]    0.0    0.00    0.00       1         lpcsyn::lpcsyn(voice *) [176]
                0.00    0.00       1/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
                0.00    0.00       1/2           synth::synth(void) [688]
-----------------------------------------------
                0.00    0.00       2/2           parse_rule(text *, hash *, int *) <cycle 3> [14]
[177]    0.0    0.00    0.00       2         r_postp::r_postp(char *) [177]
                0.00    0.00       2/34          r_subst::r_subst(char *) [149]
-----------------------------------------------
                0.00    0.00       1/1           parse_rule(text *, hash *, int *) <cycle 3> [14]
[178]    0.0    0.00    0.00       1         r_absol::r_absol(char *) [178]
                0.00    0.00       1/970         rule::rule(char *) [117]
-----------------------------------------------
[179]    0.0    0.00    0.00       2+195     <cycle 2 as a whole> [179]
                0.00    0.00      93+92          block_rule::check_children(void) <cycle 2> [344]
-----------------------------------------------
                0.00    0.00    1272/5319039     unit::split(unit *) [253]
                0.00    0.00    2562/5319039     unit::unlink(REPARENT) [239]
                0.00    0.00    7038/5319039     unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.00    8710/5319039     unit::write_segs(segment *, int, int) [308]
                0.00    0.00    8710/5319039     unit::seg(hash *) [65]
                0.00    0.00   16740/5319039     unit::segs(char, hash *) [69]
                0.00    0.00   27018/5319039     unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *) [200]
                0.00    0.00   36602/5319039     unit::subst(hash *, SUBST_METHOD) [31]
                0.00    0.00   41684/5319039     unit::insert_end(unit *, unit *) [202]
                0.00    0.00  214986/5319039     unit::subst(hash *, int, char *, char *, char *, char *, char *) [30]
                0.00    0.00  261754/5319039     unit::RightMost(char) [188]
                0.00    0.00  486540/5319039     unit::Prev(char) [186]
                0.00    0.00  751600/5319039     unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
                0.00    0.00  860192/5319039     unit::inside(void) [184]
                0.00    0.00 1135502/5319039     unit::LeftMost(char) [185]
                0.00    0.00 1458129/5319039     unit::Next(char) [183]
[180]    0.0    0.00    0.00 5319039         unit::sanity(void) [180]
-----------------------------------------------
                0.00    0.00       1/2479522     make_server_passwd(void) [388]
                0.00    0.00       1/2479522     a_accept::a_accept(void) [707]
                0.00    0.00       1/2479522     cmd_pass(char *, a_ttscp *) [377]
                0.00    0.00       1/2479522     load_charset(char const *) <cycle 6> [172]
                0.00    0.00       2/2479522     rules::~rules(void) [99]
                0.00    0.00       2/2479522     update_sampa(int, char const *) [86]
                0.00    0.00       2/2479522     str2enum(char const *, char const *, int) [221]
                0.00    0.00       2/2479522     config_init(void) [59]
                0.00    0.00       2/2479522     synth::synth(void) [688]
                0.00    0.00       2/2479522     synth::~synth(void) [686]
                0.00    0.00       2/2479522     lang::compile_rules(void) [10]
                0.00    0.00       3/2479522     add_language(char const *) [57]
                0.00    0.00       3/2479522     lang::~lang(void) [97]
                0.00    0.00       4/2479522     claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
                0.00    0.00       7/2479522     epos_init(void) [9]
                0.00    0.00       8/2479522     rules::rules(char const *, char const *) [12]
                0.00    0.00      12/2479522     non_unicode_alloc_code(unsigned char) [361]
                0.00    0.00      17/2479522     voice::~voice(void) [675]
                0.00    0.00      22/2479522     load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
                0.00    0.00      43/2479522     text::subfile(char const *) [148]
                0.00    0.00      43/2479522     text::superfile(void) [350]
                0.00    0.00      49/2479522     free_all_options(option *, cowabilium *) [141]
                0.00    0.00      49/2479522     alloc_option(option *, OPT_STRUCT) [347]
                0.00    0.00     111/2479522     a_synth::run(void) [5]
                0.00    0.00     111/2479522     oa_seg::insize(void) [334]
                0.00    0.00     127/2479522     r_syll::r_syll(char *) [169]
                0.00    0.00     208/2479522     a_ssif::run(void) [70]
                0.00    0.00     215/2479522     oa_wavefm::run(void) [321]
                0.00    0.00     215/2479522     wavefm::detach(int) [314]
                0.00    0.00     216/2479522     a_ttscp::disconnect(void) [131]
                0.00    0.00     218/2479522     r_regress::r_regress(char *) [15]
                0.00    0.00     219/2479522     function<char>::function(char const *, char const *, bool) [17]
                0.00    0.00     222/2479522     a_segs::run(void) [64]
                0.00    0.00     222/2479522     r_seg::apply(unit *) [68]
                0.00    0.00     224/2479522     wavefm::flush_deferred(void) [332]
                0.00    0.00     280/2479522     r_regex::r_regex(char *) [130]
                0.00    0.00     312/2479522     wavefm::chunk_become(char *, int) [338]
                0.00    0.00     430/2479522     stream::apply(agent *, int) [289]
                0.00    0.00     430/2479522     cmd_stream(char *, a_ttscp *) [291]
                0.00    0.00     430/2479522     cmd_apply(char *, a_ttscp *) [290]
                0.00    0.00     430/2479522     parser::parser(char const *, int) [129]
                0.00    0.00     434/2479522     a_ttscp::~a_ttscp(void) [164]
                0.00    0.00     434/2479522     a_accept::run(void) [115]
                0.00    0.00     437/2479522     context::context(int, int) [629]
                0.00    0.00     480/2479522     wavefm::flush(void) [259]
                0.00    0.00     503/2479522     booltab<char>::booltab(char *) [16]
                0.00    0.00     645/2479522     wavefm::attach(int) [312]
                0.00    0.00     695/2479522     wavefm::translate(void) [273]
                0.00    0.00     817/2479522     set_option(option *, char const *, void *) [77]
                0.00    0.00     860/2479522     a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
                0.00    0.00     860/2479522     a_io::~a_io(void) [625]
                0.00    0.00     860/2479522     a_input::run(void) [302]
                0.00    0.00     860/2479522     a_input::mktask(int) [296]
                0.00    0.00     860/2479522     stream::finis(bool) [293]
                0.00    0.00     860/2479522     parser::init(SYMTABLE) [294]
                0.00    0.00     968/2479522     rule::set_dbg_tag(text *) [113]
                0.00    0.00     970/2479522     rule::~rule(void) [624]
                0.00    0.00    1060/2479522     r_choice::apply(unit *) <cycle 5> [265]
                0.00    0.00    1935/2479522     stream::stream(char *, context *) [640]
                0.00    0.00    2132/2479522     unit::syllabify(char, char *) [244]
                0.00    0.00    2155/2479522     a_protocol::run(void) [75]
                0.00    0.00    2156/2479522     a_ttscp::run_command(char *) [76]
                0.00    0.00    2544/2479522     unit::split(unit *) [253]
                0.00    0.00    3227/2479522     sched_sel(void) [237]
                0.00    0.00    3231/2479522     agent::agent(DATA_TYPE, DATA_TYPE) [622]
                0.00    0.00    3307/2479522     parse_rule(text *, hash *, int *) <cycle 3> [14]
                0.00    0.00    3497/2479522     resolve_vars(char *, hash *, text *) [132]
                0.00    0.00    4046/2479522     unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.00    4320/2479522     agent::block(int) [227]
                0.00    0.00    4965/2479522     sgets(char *, int, int, char *) [225]
                0.00    0.00    5542/2479522     r_switch::apply(unit *) <cycle 5> [217]
                0.00    0.00    5620/2479522     text::getline(char *) <cycle 6> [37]
                0.00    0.00    7546/2479522     server(void) [4]
                0.00    0.00    7898/2479522     unit::unlink(REPARENT) [239]
                0.00    0.00    9499/2479522     context::leave(void) [210]
                0.00    0.00    9714/2479522     context::enter(void) [211]
                0.00    0.00    9788/2479522     parser::gettoken(void) [208]
                0.00    0.00   10896/2479522     unit::prospoint(FIT_IDX, int, float) [83]
                0.00    0.00   11926/2479522     unit::raise(booltab<char> *, booltab<char> *, char, char) [220]
                0.00    0.00   13640/2479522     unit::unit(char, int) [619]
                0.00    0.00   15092/2479522     agent::timeslice(void) [3]
                0.00    0.00   17420/2479522     unit::seg(hash *) [65]
                0.00    0.00   17450/2479522     unit::subst(hash *, SUBST_METHOD) [31]
                0.00    0.00   23232/2479522     lpcsyn::synmod(model, wavefm *) [8]
                0.00    0.00   24700/2479522     unit::unit(char, parser *) [639]
                0.00    0.00   27018/2479522     unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *) [200]
                0.00    0.00   27452/2479522     unit::segs(char, hash *) [69]
                0.00    0.00   28525/2479522     lpcsyn::synseg(voice *, segment, wavefm *) [7]
                0.00    0.00   31740/2479522     unit::project_extents(void) [52]
                0.00    0.00  214986/2479522     unit::subst(hash *, int, char *, char *, char *, char *, char *) [30]
                0.00    0.00  330974/2479522     block_rule::apply_current(unit *) <cycle 5> [29]
                0.00    0.00  368976/2479522     unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00 1204872/2479522     unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[181]    0.0    0.00    0.00 2479522         debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00    5106/1114546     unit::contains(char, booltab<char> *) [236]
                0.00    0.00   29358/1114546     unit::raise(booltab<char> *, booltab<char> *, char, char) [220]
                0.00    0.00   29824/1114546     r_inside::apply(unit *) <cycle 5> [196]
                0.00    0.00  243822/1114546     unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00  806436/1114546     unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[182]    0.0    0.00    0.00 1114546         booltab<char>::ismember(char) [182]
-----------------------------------------------
                              533369             unit::Next(char) [183]
                0.00    0.00    1702/924760      unit::contains(char, booltab<char> *) [236]
                0.00    0.00    4880/924760      unit::write_ssif(char *, int, int) [327]
                0.00    0.00    5356/924760      unit::segs(char, hash *) [69]
                0.00    0.00    8080/924760      unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.00    8710/924760      unit::write_segs(segment *, int, int) [308]
                0.00    0.00    9358/924760      unit::syllabify(char *) [212]
                0.00    0.00   10842/924760      unit::count(char) [218]
                0.00    0.00   29358/924760      unit::raise(booltab<char> *, booltab<char> *, char, char) [220]
                0.00    0.00   30144/924760      unit::contour(char, int *, int, int, FIT_IDX, bool) [85]
                0.00    0.00   71096/924760      unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00  230250/924760      block_rule::apply_current(unit *) <cycle 5> [29]
                0.00    0.00  514984/924760      unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[183]    0.0    0.00    0.00  924760+533369  unit::Next(char) [183]
                0.00    0.00 1458129/5319039     unit::sanity(void) [180]
                0.00    0.00  652994/793432      unit::LeftMost(char) [185]
                              533369             unit::Next(char) [183]
-----------------------------------------------
                0.00    0.00   21424/860192      unit::segs(char, hash *) [69]
                0.00    0.00   32332/860192      unit::syllabify(char *) [212]
                0.00    0.00  806436/860192      unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[184]    0.0    0.00    0.00  860192         unit::inside(void) [184]
                0.00    0.00  860192/5319039     unit::sanity(void) [180]
-----------------------------------------------
                              342070             unit::LeftMost(char) [185]
                0.00    0.00     208/793432      unit::write_ssif(char *, int, int) [327]
                0.00    0.00     222/793432      unit::write_segs(segment *, int, int) [308]
                0.00    0.00    2992/793432      unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.00    3404/793432      unit::contains(char, booltab<char> *) [236]
                0.00    0.00    5542/793432      unit::count(char) [218]
                0.00    0.00   10642/793432      unit::raise(booltab<char> *, booltab<char> *, char, char) [220]
                0.00    0.00   16704/793432      unit::contour(char, int *, int, int, FIT_IDX, bool) [85]
                0.00    0.00  100724/793432      block_rule::apply_current(unit *) <cycle 5> [29]
                0.00    0.00  652994/793432      unit::Next(char) [183]
[185]    0.0    0.00    0.00  793432+342070  unit::LeftMost(char) [185]
                0.00    0.00 1135502/5319039     unit::sanity(void) [180]
                              342070             unit::LeftMost(char) [185]
-----------------------------------------------
                              156726             unit::Prev(char) [186]
                0.00    0.00    6808/329814      unit::syllabify(char *) [212]
                0.00    0.00    9358/329814      unit::syllabify(char, char *) [244]
                0.00    0.00   10712/329814      unit::segs(char, hash *) [69]
                0.00    0.00   11484/329814      unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00  291452/329814      unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[186]    0.0    0.00    0.00  329814+156726  unit::Prev(char) [186]
                0.00    0.00  486540/5319039     unit::sanity(void) [180]
                0.00    0.00  235174/237306      unit::RightMost(char) [188]
                              156726             unit::Prev(char) [186]
-----------------------------------------------
                0.00    0.00       4/308656      parse_cfg_str(char *) [303]
                0.00    0.00     157/308656      esc(char) [329]
                0.00    0.00     195/308656      strip(char *) [42]
                0.00    0.00  133396/308656      r_regress::apply(unit *) [190]
                0.00    0.00  174904/308656      unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[187]    0.0    0.00    0.00  308656         function<char>::xlat(char) [187]
-----------------------------------------------
                               24448             unit::RightMost(char) [188]
                0.00    0.00    2132/237306      unit::syllabify(char, char *) [244]
                0.00    0.00  235174/237306      unit::Prev(char) [186]
[188]    0.0    0.00    0.00  237306+24448   unit::RightMost(char) [188]
                0.00    0.00  261754/5319039     unit::sanity(void) [180]
                               24448             unit::RightMost(char) [188]
-----------------------------------------------
                              157318             hash_table<char, char>::rehash_tree(hsearchtree<char, char> *) <cycle 1> [189]
                              191302             hash_table<char, char>::rehash(int) <cycle 1> [34]
                0.00    0.00    4255/28331       hash_table<char, char>::hash_table(hash_table<char, char> *) [49]
[189]    0.0    0.00    0.00  195557+157318  hash_table<char, char>::rehash_tree(hsearchtree<char, char> *) <cycle 1> [189]
                               78659             hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
                              157318             hash_table<char, char>::rehash_tree(hsearchtree<char, char> *) <cycle 1> [189]
-----------------------------------------------
                0.00    0.00  115498/115498      block_rule::apply_current(unit *) <cycle 5> [29]
[190]    0.0    0.00    0.00  115498         r_regress::apply(unit *) [190]
                0.00    0.00  133396/308656      function<char>::xlat(char) [187]
                0.00    0.00  115498/115498      unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
                0.00    0.00   17898/17898       unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
-----------------------------------------------
                              636102             unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
                0.00    0.00  115498/115498      r_regress::apply(unit *) [190]
[191]    0.0    0.00    0.00  115498+636102  unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
                0.00    0.00 1204872/2479522     debug_wanted(int, int) [181]
                0.00    0.00  806436/860192      unit::inside(void) [184]
                0.00    0.00  806436/1114546     booltab<char>::ismember(char) [182]
                0.00    0.00  751600/5319039     unit::sanity(void) [180]
                0.00    0.00  514984/924760      unit::Next(char) [183]
                0.00    0.00  291452/329814      unit::Prev(char) [186]
                0.00    0.00  174904/308656      function<char>::xlat(char) [187]
                0.00    0.00    2350/2562        unit::unlink(REPARENT) [239]
                              636102             unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
-----------------------------------------------
                0.00    0.00       4/103621      hash_table<char, file>::add(char const *, file const *) [152]
                0.00    0.00     502/103621      hash_table<char, option>::add(char const *, option const *) [112]
                0.00    0.00     868/103621      hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [108]
                0.00    0.00  102247/103621      hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
[192]    0.0    0.00    0.00  103621         balance(void) [192]
-----------------------------------------------
                              668556             unit::gather(char *, char *, bool) [193]
                0.00    0.00   44471/44471       unit::gather(int *, bool, bool) [194]
[193]    0.0    0.00    0.00   44471+668556  unit::gather(char *, char *, bool) [193]
                              668556             unit::gather(char *, char *, bool) [193]
-----------------------------------------------
                0.00    0.00   17450/44468       unit::subst(hash *, SUBST_METHOD) [31]
                0.00    0.00   27018/44468       unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *) [200]
[194]    0.0    0.00    0.00   44468         unit::gather(int *, bool, bool) [194]
                0.00    0.00   44471/44471       unit::gather(char *, char *, bool) [193]
-----------------------------------------------
                0.00    0.00    4880/31010       unit::write_ssif_head(char *) [224]
                0.00    0.00   26130/31010       unit::write_segs(segment *, int, int) [308]
[195]    0.0    0.00    0.00   31010         unit::effective(FIT_IDX) [195]
-----------------------------------------------
                               29824             block_rule::apply_current(unit *) <cycle 5> [29]
[196]    0.0    0.00    0.00   29824         r_inside::apply(unit *) <cycle 5> [196]
                0.00    0.00   29824/1114546     booltab<char>::ismember(char) [182]
                                7262             r_block::apply(unit *) <cycle 5> [209]
-----------------------------------------------
                0.00    0.00    2047/29309       slab<40>::alloc(void) [198]
                0.00    0.00   27262/29309       unit::operator delete(void *) [616]
[197]    0.0    0.00    0.00   29309         slab<40>::release(void *) [197]
-----------------------------------------------
                0.00    0.00   27262/27262       unit::operator new(unsigned int) [617]
[198]    0.0    0.00    0.00   27262         slab<40>::alloc(void) [198]
                0.00    0.00    2047/29309       slab<40>::release(void *) [197]
-----------------------------------------------
                0.00    0.00   27018/27018       block_rule::apply_current(unit *) <cycle 5> [29]
[199]    0.0    0.00    0.00   27018         r_regex::apply(unit *) [199]
                0.00    0.00   27018/27018       unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *) [200]
-----------------------------------------------
                0.00    0.00   27018/27018       r_regex::apply(unit *) [199]
[200]    0.0    0.00    0.00   27018         unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *) [200]
                0.00    0.00   27018/5319039     unit::sanity(void) [180]
                0.00    0.00   27018/44468       unit::gather(int *, bool, bool) [194]
                0.00    0.00   27018/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                                1908             unit::set_father(unit *) [201]
                0.00    0.00    1272/22114       unit::split(unit *) [253]
                0.00    0.00   20842/22114       unit::insert_end(unit *, unit *) [202]
[201]    0.0    0.00    0.00   22114+1908    unit::set_father(unit *) [201]
                                1908             unit::set_father(unit *) [201]
-----------------------------------------------
                0.00    0.00     212/20842       unit::unlink(REPARENT) [239]
                0.00    0.00    8710/20842       unit::seg(hash *) [65]
                0.00    0.00   11920/20842       unit::unit(char, parser *) [639]
[202]    0.0    0.00    0.00   20842         unit::insert_end(unit *, unit *) [202]
                0.00    0.00   41684/5319039     unit::sanity(void) [180]
                0.00    0.00   20842/22114       unit::set_father(unit *) [201]
-----------------------------------------------
                              169788             unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00   17898/17898       r_regress::apply(unit *) [190]
[203]    0.0    0.00    0.00   17898+169788  unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00  368976/2479522     debug_wanted(int, int) [181]
                0.00    0.00  243822/1114546     booltab<char>::ismember(char) [182]
                0.00    0.00   71096/924760      unit::Next(char) [183]
                0.00    0.00   11484/329814      unit::Prev(char) [186]
                0.00    0.00    4930/27262       unit::operator new(unsigned int) [617]
                0.00    0.00    4930/13640       unit::unit(char, int) [619]
                              169788             unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
-----------------------------------------------
                0.00    0.00   15091/15091       agent::timeslice(void) [3]
[204]    0.0    0.00    0.00   15091         agent_profile(char const *) [204]
-----------------------------------------------
                0.00    0.00     215/11669       a_output::run(void) [320]
                0.00    0.00     480/11669       wavefm::flush(void) [259]
                0.00    0.00   10974/11669       sputs(char const *, int) [206]
[205]    0.0    0.00    0.00   11669         ywrite(int, void const *, int) [205]
-----------------------------------------------
                0.00    0.00    1302/10974       a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00    2250/10974       a_output::report(bool, int) [262]
                0.00    0.00    7422/10974       sendstring(char const *) [234]
[206]    0.0    0.00    0.00   10974         sputs(char const *, int) [206]
                0.00    0.00   10974/11669       ywrite(int, void const *, int) [205]
-----------------------------------------------
                0.00    0.00     430/10218       parser::init(SYMTABLE) [294]
                0.00    0.00    9788/10218       parser::gettoken(void) [208]
[207]    0.0    0.00    0.00   10218         parser::chrlev(unsigned char) [207]
-----------------------------------------------
                0.00    0.00     430/10218       parser::init(SYMTABLE) [294]
                0.00    0.00    9788/10218       unit::unit(char, parser *) [639]
[208]    0.0    0.00    0.00   10218         parser::gettoken(void) [208]
                0.00    0.00    9788/10218       parser::chrlev(unsigned char) [207]
                0.00    0.00    9788/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                                 430             block_rule::apply_current(unit *) <cycle 5> [29]
                                1720             r_if::apply(unit *) <cycle 5> [67]
                                7262             r_inside::apply(unit *) <cycle 5> [196]
                0.00    0.02     430/430         rules::apply(unit *) [26]
[209]    0.0    0.00    0.00    9842         r_block::apply(unit *) <cycle 5> [209]
                               94122             block_rule::apply_current(unit *) <cycle 5> [29]
-----------------------------------------------
                0.00    0.00       1/9499        context::~context(void) [627]
                0.00    0.00       1/9499        a_accept::a_accept(void) [707]
                0.00    0.00       1/9499        cmd_shutdown(char *, a_ttscp *) [92]
                0.00    0.00     215/9499        cmd_delhandle(char *, a_ttscp *) [123]
                0.00    0.00     434/9499        a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     434/9499        a_accept::run(void) [115]
                0.00    0.00     868/9499        a_ttscp::~a_ttscp(void) [164]
                0.00    0.00    7545/9499        agent::timeslice(void) [3]
[210]    0.0    0.00    0.00    9499         context::leave(void) [210]
                0.00    0.00    9499/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/9498        a_accept::a_accept(void) [707]
                0.00    0.00     215/9498        cmd_delhandle(char *, a_ttscp *) [123]
                0.00    0.00     434/9498        a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     434/9498        a_accept::run(void) [115]
                0.00    0.00     868/9498        a_ttscp::~a_ttscp(void) [164]
                0.00    0.00    7546/9498        agent::timeslice(void) [3]
[211]    0.0    0.00    0.00    9498         context::enter(void) [211]
                0.00    0.00    9714/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00    9358/9358        unit::syllabify(char, char *) [244]
[212]    0.0    0.00    0.00    9358         unit::syllabify(char *) [212]
                0.00    0.00   32332/860192      unit::inside(void) [184]
                0.00    0.00    9358/924760      unit::Next(char) [183]
                0.00    0.00    6808/329814      unit::Prev(char) [186]
                0.00    0.00    1272/1272        unit::syll_break(char *, unit *) [254]
-----------------------------------------------
                0.00    0.00    7770/7770        encode_string(char *, int, bool) [214]
[213]    0.0    0.00    0.00    7770         encode_string(unsigned char *, int, bool) [213]
                0.00    0.00     155/155         alloc_code(wchar_t, unsigned char, int) [330]
                0.00    0.00      12/12          non_unicode_alloc_code(unsigned char) [361]
-----------------------------------------------
                0.00    0.00       4/7770        parse_cmd_line(void) [364]
                0.00    0.00     430/7770        a_input::run(void) [302]
                0.00    0.00    2806/7770        text::getline(char *) <cycle 6> [37]
                0.00    0.00    4530/7770        a_protocol::run(void) [75]
[214]    0.0    0.00    0.00    7770         encode_string(char *, int, bool) [214]
                0.00    0.00    7770/7770        encode_string(unsigned char *, int, bool) [213]
-----------------------------------------------
                0.00    0.00    7546/7546        server(void) [4]
[215]    0.0    0.00    0.00    7546         select_socket(bool) [215]
                0.00    0.00    3889/3889        idle(void) [232]
-----------------------------------------------
                0.00    0.00    6328/6328        unit::write_ssif(char *, int, int) [327]
[216]    0.0    0.00    0.00    6328         marker::write_ssif(char *) [216]
-----------------------------------------------
                                5542             block_rule::apply_current(unit *) <cycle 5> [29]
[217]    0.0    0.00    0.00    5542         r_switch::apply(unit *) <cycle 5> [217]
                0.00    0.00    5542/5542        unit::count(char) [218]
                0.00    0.00    5542/2479522     debug_wanted(int, int) [181]
                                5542             block_rule::apply_current(unit *) <cycle 5> [29]
-----------------------------------------------
                0.00    0.00    5542/5542        r_switch::apply(unit *) <cycle 5> [217]
[218]    0.0    0.00    0.00    5542         unit::count(char) [218]
                0.00    0.00   10842/924760      unit::Next(char) [183]
                0.00    0.00    5542/793432      unit::LeftMost(char) [185]
-----------------------------------------------
                0.00    0.00    5536/5536        block_rule::apply_current(unit *) <cycle 5> [29]
[219]    0.0    0.00    0.00    5536         r_raise::apply(unit *) [219]
                0.00    0.00    5536/5536        unit::raise(booltab<char> *, booltab<char> *, char, char) [220]
-----------------------------------------------
                0.00    0.00    5536/5536        r_raise::apply(unit *) [219]
[220]    0.0    0.00    0.00    5536         unit::raise(booltab<char> *, booltab<char> *, char, char) [220]
                0.00    0.00   29358/1114546     booltab<char>::ismember(char) [182]
                0.00    0.00   29358/924760      unit::Next(char) [183]
                0.00    0.00   11926/2479522     debug_wanted(int, int) [181]
                0.00    0.00   10642/793432      unit::LeftMost(char) [185]
-----------------------------------------------
                0.00    0.00       1/5491        void set_enum_option<OUT_ML>(option *, char const *, char *, char *) [394]
                0.00    0.00       3/5491        pre_set_unit_levels(char const *) [390]
                0.00    0.00       4/5491        post_set_unit_levels(char const *) [136]
                0.00    0.00      17/5491        void set_enum_option<SYNTH_TYPE>(option *, char const *, char *, char *) [359]
                0.00    0.00     223/5491        load_charset(char const *) <cycle 6> [172]
                0.00    0.00     285/5491        set_option(option *, char const *, void *) [77]
                0.00    0.00    1505/5491        make_agent(char *, agent *) [241]
                0.00    0.00    3453/5491        parse_rule(text *, hash *, int *) <cycle 3> [14]
[221]    0.0    0.00    0.00    5491         str2enum(char const *, char const *, int) [221]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00     860/5180        a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
                0.00    0.00    4320/5180        agent::block(int) [227]
[222]    0.0    0.00    0.00    5180         stretch_sleep_table(int) [222]
-----------------------------------------------
                0.00    0.00    4880/4880        unit::write_ssif_head(char *) [224]
[223]    0.0    0.00    0.00    4880         encode_to_sampa(unsigned char, int) [223]
-----------------------------------------------
                0.00    0.00    4880/4880        unit::write_ssif(char *, int, int) [327]
[224]    0.0    0.00    0.00    4880         unit::write_ssif_head(char *) [224]
                0.00    0.00    4880/31010       unit::effective(FIT_IDX) [195]
                0.00    0.00    4880/4880        encode_to_sampa(unsigned char, int) [223]
-----------------------------------------------
                0.00    0.00    4531/4531        a_protocol::run(void) [75]
[225]    0.0    0.00    0.00    4531         sgets(char *, int, int, char *) [225]
                0.00    0.00    4965/2479522     debug_wanted(int, int) [181]
                0.00    0.00    3885/4315        yread(int, void *, int) [229]
-----------------------------------------------
                0.00    0.00    4530/4530        agent::timeslice(void) [3]
[226]    0.0    0.00    0.00    4530         a_ttscp::name(void) [226]
-----------------------------------------------
                0.00    0.00       1/4320        a_accept::a_accept(void) [707]
                0.00    0.00     430/4320        a_input::mktask(int) [296]
                0.00    0.00     434/4320        a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     434/4320        a_accept::run(void) [115]
                0.00    0.00    3021/4320        a_protocol::run(void) [75]
[227]    0.0    0.00    0.00    4320         agent::block(int) [227]
                0.00    0.00    4320/2479522     debug_wanted(int, int) [181]
                0.00    0.00    4320/5180        stretch_sleep_table(int) [222]
-----------------------------------------------
                0.00    0.00    4319/4319        server(void) [4]
[228]    0.0    0.00    0.00    4319         server_reinit_check(void) [228]
-----------------------------------------------
                0.00    0.00     430/4315        a_input::run(void) [302]
                0.00    0.00    3885/4315        sgets(char *, int, int, char *) [225]
[229]    0.0    0.00    0.00    4315         yread(int, void *, int) [229]
-----------------------------------------------
                0.00    0.00     480/4297        wavefm::flush(void) [259]
                0.00    0.00    1505/4297        wavefm::get_total_len(void) [317]
                0.00    0.00    2312/4297        wavefm::update_ophase(void) [266]
[230]    0.0    0.00    0.00    4297         wavefm::get_ophase_len(w_ophase const *) [230]
-----------------------------------------------
                0.00    0.00     868/4117        hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [108]
                0.00    0.00     868/4117        hash_table<char, a_ttscp>::remove(char const *) [110]
                0.00    0.00    2381/4117        hash_table<char, a_ttscp>::translate(char const *) [240]
[231]    0.0    0.00    0.00    4117         hash_table<char, a_ttscp>::fn(char const *) [231]
-----------------------------------------------
                0.00    0.00    3889/3889        select_socket(bool) [215]
[232]    0.0    0.00    0.00    3889         idle(void) [232]
-----------------------------------------------
                0.00    0.00       1/3711        cmd_pass(char *, a_ttscp *) [377]
                0.00    0.00       1/3711        cmd_shutdown(char *, a_ttscp *) [92]
                0.00    0.00     215/3711        cmd_done(char *, a_ttscp *) [313]
                0.00    0.00     215/3711        cmd_delhandle(char *, a_ttscp *) [123]
                0.00    0.00     217/3711        cmd_data(char *, a_ttscp *) [109]
                0.00    0.00     430/3711        stream::finis(bool) [293]
                0.00    0.00     430/3711        cmd_stream(char *, a_ttscp *) [291]
                0.00    0.00     430/3711        cmd_apply(char *, a_ttscp *) [290]
                0.00    0.00     647/3711        reply(char const *, context *) [276]
                0.00    0.00    1125/3711        a_output::report(bool, int) [262]
[233]    0.0    0.00    0.00    3711         reply(char const *) [233]
                0.00    0.00    3711/3711        sendstring(char const *) [234]
                0.00    0.00     216/216         severity(int) [311]
-----------------------------------------------
                0.00    0.00    3711/3711        reply(char const *) [233]
[234]    0.0    0.00    0.00    3711         sendstring(char const *) [234]
                0.00    0.00    7422/10974       sputs(char const *, int) [206]
-----------------------------------------------
                0.00    0.00    3404/3404        block_rule::apply_current(unit *) <cycle 5> [29]
[235]    0.0    0.00    0.00    3404         r_near::apply(unit *) [235]
                0.00    0.00    3404/3404        unit::contains(char, booltab<char> *) [236]
-----------------------------------------------
                0.00    0.00    3404/3404        r_near::apply(unit *) [235]
[236]    0.0    0.00    0.00    3404         unit::contains(char, booltab<char> *) [236]
                0.00    0.00    5106/1114546     booltab<char>::ismember(char) [182]
                0.00    0.00    3404/793432      unit::LeftMost(char) [185]
                0.00    0.00    1702/924760      unit::Next(char) [183]
-----------------------------------------------
                0.00    0.00    3227/3227        server(void) [4]
[237]    0.0    0.00    0.00    3227         sched_sel(void) [237]
                0.00    0.00    3227/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00     216/3227        a_disconnector::disconnect(a_protocol *) [309]
                0.00    0.00     430/3227        stream::finis(bool) [293]
                0.00    0.00     646/3227        a_protocol::run(void) [75]
                0.00    0.00    1935/3227        agent::pass(void *) [246]
[238]    0.0    0.00    0.00    3227         agent::schedule(void) [238]
-----------------------------------------------
                0.00    0.00     212/2562        unit::relabel(hash *, SUBST_METHOD, char) [33]
                0.00    0.00    2350/2562        unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [191]
[239]    0.0    0.00    0.00    2562         unit::unlink(REPARENT) [239]
                0.00    0.00    7898/2479522     debug_wanted(int, int) [181]
                0.00    0.00    2562/5319039     unit::sanity(void) [180]
                0.00    0.00    2561/2993        unit::~unit(void) [623]
                0.00    0.00     212/20842       unit::insert_end(unit *, unit *) [202]
-----------------------------------------------
                0.00    0.00     217/2381        cmd_data(char *, a_ttscp *) [109]
                0.00    0.00     434/2381        a_ttscp::a_ttscp(int, int) [116]
                0.00    0.00     860/2381        a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
                0.00    0.00     870/2381        a_ttscp::~a_ttscp(void) [164]
[240]    0.0    0.00    0.00    2381         hash_table<char, a_ttscp>::translate(char const *) [240]
                0.00    0.00    2381/4117        hash_table<char, a_ttscp>::fn(char const *) [231]
-----------------------------------------------
                0.00    0.00    2365/2365        stream::stream(char *, context *) [640]
[241]    0.0    0.00    0.00    2365         make_agent(char *, agent *) [241]
                0.00    0.00    1505/5491        str2enum(char const *, char const *, int) [221]
                0.00    0.00     430/430         a_input::a_input(char const *) [642]
                0.00    0.00     430/430         a_ascii::a_ascii(void) [641]
                0.00    0.00     430/430         a_rules::a_rules(void) [643]
                0.00    0.00     222/222         a_segs::a_segs(void) [647]
                0.00    0.00     215/215         oa_wavefm::oa_wavefm(char const *) [653]
                0.00    0.00     208/208         a_ssif::a_ssif(void) [655]
                0.00    0.00     111/111         oa_seg::oa_seg(char const *) [658]
                0.00    0.00     111/111         a_synth::a_synth(void) [659]
                0.00    0.00     104/104         oa_ascii<6>::oa_ascii(char const *) [665]
                0.00    0.00     104/104         a_syn::a_syn(void) [663]
-----------------------------------------------
                0.00    0.00    2150/2150        parser::initables(SYMTABLE) [295]
[242]    0.0    0.00    0.00    2150         parser::regist(char, char const *) [242]
-----------------------------------------------
                0.00    0.00    2132/2132        block_rule::apply_current(unit *) <cycle 5> [29]
[243]    0.0    0.00    0.00    2132         r_syll::apply(unit *) [243]
                0.00    0.00    2132/2132        unit::syllabify(char, char *) [244]
-----------------------------------------------
                0.00    0.00    2132/2132        r_syll::apply(unit *) [243]
[244]    0.0    0.00    0.00    2132         unit::syllabify(char, char *) [244]
                0.00    0.00    9358/329814      unit::Prev(char) [186]
                0.00    0.00    9358/9358        unit::syllabify(char *) [212]
                0.00    0.00    2132/2479522     debug_wanted(int, int) [181]
                0.00    0.00    2132/237306      unit::RightMost(char) [188]
-----------------------------------------------
                0.00    0.00     154/1985        hash_table<char, option>::remove(char const *) [137]
                0.00    0.00     556/1985        hash_table<char, option>::add(char const *, option const *) [112]
                0.00    0.00    1275/1985        hash_table<char, option>::translate(char const *) [252]
[245]    0.0    0.00    0.00    1985         hash_table<char, option>::fn(char const *) [245]
-----------------------------------------------
                0.00    0.00     104/1935        a_syn::run(void) [174]
                0.00    0.00     111/1935        a_synth::run(void) [5]
                0.00    0.00     208/1935        a_ssif::run(void) [70]
                0.00    0.00     222/1935        a_segs::run(void) [64]
                0.00    0.00     430/1935        a_ascii::run(void) [127]
                0.00    0.00     430/1935        a_rules::run(void) [27]
                0.00    0.00     430/1935        a_input::run(void) [302]
[246]    0.0    0.00    0.00    1935         agent::pass(void *) [246]
                0.00    0.00    1935/3227        agent::schedule(void) [238]
-----------------------------------------------
                0.00    0.00    1796/1796        hash_table<char, a_ttscp>::~hash_table(void) [628]
[247]    0.0    0.00    0.00    1796         hash_table<char, a_ttscp>::dissolvetree(hsearchtree<char, a_ttscp> *) [247]
-----------------------------------------------
                0.00    0.00     215/1729        voice_switch(char const *) [323]
                0.00    0.00     432/1729        set_option(option *, char const *) [82]
                0.00    0.00    1082/1729        cow_configuration(configuration **) [263]
[248]    0.0    0.00    0.00    1729         cow(cowabilium **, int, int, int) [248]
                0.00    0.00    1304/1304        memdup(void *, int) [251]
-----------------------------------------------
                0.00    0.00    1708/1708        block_rule::apply_current(unit *) <cycle 5> [29]
[249]    0.0    0.00    0.00    1708         r_nothing::apply(unit *) [249]
-----------------------------------------------
                0.00    0.00     215/1555        wavefm::detach(int) [314]
                0.00    0.00     215/1555        wavefm::attach(int) [312]
                0.00    0.00     215/1555        sync_soundcard(int) [322]
                0.00    0.00     910/1555        wavefm::update_ophase(void) [266]
[250]    0.0    0.00    0.00    1555         ioctlable(int) [250]
-----------------------------------------------
                0.00    0.00    1304/1304        cow(cowabilium **, int, int, int) [248]
[251]    0.0    0.00    0.00    1304         memdup(void *, int) [251]
-----------------------------------------------
                0.00    0.00      25/1275        lang::add_soft_option(char const *) [120]
                0.00    0.00      56/1275        restrict_options(void) [103]
                0.00    0.00    1194/1275        option_struct(char const *, hash_table<char, option> *) [258]
[252]    0.0    0.00    0.00    1275         hash_table<char, option>::translate(char const *) [252]
                0.00    0.00    1275/1985        hash_table<char, option>::fn(char const *) [245]
-----------------------------------------------
                0.00    0.00    1272/1272        unit::syll_break(char *, unit *) [254]
[253]    0.0    0.00    0.00    1272         unit::split(unit *) [253]
                0.00    0.00    2544/2479522     debug_wanted(int, int) [181]
                0.00    0.00    1272/27262       unit::operator new(unsigned int) [617]
                0.00    0.00    1272/22114       unit::set_father(unit *) [201]
                0.00    0.00    1272/5319039     unit::sanity(void) [180]
-----------------------------------------------
                0.00    0.00    1272/1272        unit::syllabify(char *) [212]
[254]    0.0    0.00    0.00    1272         unit::syll_break(char *, unit *) [254]
                0.00    0.00    1272/1272        unit::split(unit *) [253]
-----------------------------------------------
                0.00    0.00    1188/1188        parse_rule(text *, hash *, int *) <cycle 3> [14]
[255]    0.0    0.00    0.00    1188         get_words(char *, char **, int) [255]
-----------------------------------------------
                                 104             cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
                                1049             block_rule::load_rules(rule *, text *, hash *) <cycle 3> [44]
[256]    0.0    0.00    0.00    1153         next_rule(text *, hash *, int *) <cycle 3> [256]
                                1153             parse_rule(text *, hash *, int *) <cycle 3> [14]
-----------------------------------------------
                0.00    0.00    1151/1151        parse_rule(text *, hash *, int *) <cycle 3> [14]
[257]    0.0    0.00    0.00    1151         rule_weight(char const *, text *) [257]
-----------------------------------------------
                0.00    0.00      27/1134        lang::add_soft_option(char const *) [120]
                0.00    0.00      43/1134        r_if::r_if(char *, text *, hash *) <cycle 3> [670]
                0.00    0.00     417/1134        set_option(char *, char *, void *, hash_table<char, option> *) [88]
                0.00    0.00     647/1134        do_set(char *, context *) [81]
[258]    0.0    0.00    0.00    1134         option_struct(char const *, hash_table<char, option> *) [258]
                0.00    0.00    1194/1275        hash_table<char, option>::translate(char const *) [252]
-----------------------------------------------
                0.00    0.00     215/1133        wavefm::detach(int) [314]
                0.00    0.00     215/1133        wavefm::attach(int) [312]
                0.00    0.00     223/1133        wavefm::sample(unsigned int) [38]
                0.00    0.00     480/1133        oa_wavefm::run(void) [321]
[259]    0.0    0.00    0.00    1133         wavefm::flush(void) [259]
                0.00    0.00    1022/1022        wavefm::update_ophase(void) [266]
                0.00    0.00     480/695         wavefm::translate(void) [273]
                0.00    0.00     480/4297        wavefm::get_ophase_len(w_ophase const *) [230]
                0.00    0.00     480/480         wavefm::get_ophase_buff(w_ophase const *) [280]
                0.00    0.00     480/11669       ywrite(int, void const *, int) [205]
                0.00    0.00     480/2479522     debug_wanted(int, int) [181]
                0.00    0.00     112/112         wavefm::flush_deferred(void) [332]
-----------------------------------------------
                0.00    0.00    1125/1125        a_output::foreground(void) [261]
[260]    0.0    0.00    0.00    1125         stream::foreground(void) [260]
-----------------------------------------------
                0.00    0.00    1125/1125        a_output::report(bool, int) [262]
[261]    0.0    0.00    0.00    1125         a_output::foreground(void) [261]
                0.00    0.00    1125/1125        stream::foreground(void) [260]
-----------------------------------------------
                0.00    0.00     430/1125        a_output::run(void) [320]
                0.00    0.00     695/1125        oa_wavefm::run(void) [321]
[262]    0.0    0.00    0.00    1125         a_output::report(bool, int) [262]
                0.00    0.00    2250/10974       sputs(char const *, int) [206]
                0.00    0.00    1125/1125        a_output::foreground(void) [261]
                0.00    0.00    1125/3711        reply(char const *) [233]
-----------------------------------------------
                0.00    0.00     435/1082        context::context(int, int) [629]
                0.00    0.00     647/1082        set_option(option *, char const *) [82]
[263]    0.0    0.00    0.00    1082         cow_configuration(configuration **) [263]
                0.00    0.00    1082/1729        cow(cowabilium **, int, int, int) [248]
-----------------------------------------------
                0.00    0.00      56/1061        restrict_options(void) [103]
                0.00    0.00     358/1061        load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
                0.00    0.00     647/1061        do_set(char *, context *) [81]
[264]    0.0    0.00    0.00    1061         split_string(char *) [264]
-----------------------------------------------
                                1060             block_rule::apply_current(unit *) <cycle 5> [29]
[265]    0.0    0.00    0.00    1060         r_choice::apply(unit *) <cycle 5> [265]
                0.00    0.00    1060/2479522     debug_wanted(int, int) [181]
                                1060             block_rule::apply_current(unit *) <cycle 5> [29]
-----------------------------------------------
                0.00    0.00    1022/1022        wavefm::flush(void) [259]
[266]    0.0    0.00    0.00    1022         wavefm::update_ophase(void) [266]
                0.00    0.00    2312/4297        wavefm::get_ophase_len(w_ophase const *) [230]
                0.00    0.00     910/1555        ioctlable(int) [250]
-----------------------------------------------
                0.00    0.00     104/987         cond_rule::check_children(void) <cycle 2> [337]
                0.00    0.00     883/987         block_rule::check_children(void) <cycle 2> [344]
[267]    0.0    0.00    0.00     987         rule::check_child(rule *) [267]
-----------------------------------------------
                0.00    0.00      34/968         r_subst::set_level(char, char) [352]
                0.00    0.00      43/968         r_if::set_level(char, char) [349]
                0.00    0.00     183/968         block_rule::set_level(char, char) [328]
                0.00    0.00     708/968         parse_rule(text *, hash *, int *) <cycle 3> [14]
[268]    0.0    0.00    0.00     968         rule::set_level(char, char) [268]
-----------------------------------------------
                0.00    0.00     913/913         parse_rule(text *, hash *, int *) <cycle 3> [14]
[269]    0.0    0.00    0.00     913         rule::verify(void) [269]
-----------------------------------------------
                                6288             unit::absol(char) [270]
                0.00    0.00     708/708         r_absol::apply(unit *) [271]
[270]    0.0    0.00    0.00     708+6288    unit::absol(char) [270]
                                6288             unit::absol(char) [270]
-----------------------------------------------
                0.00    0.00     708/708         block_rule::apply_current(unit *) <cycle 5> [29]
[271]    0.0    0.00    0.00     708         r_absol::apply(unit *) [271]
                0.00    0.00     708/708         unit::absol(char) [270]
-----------------------------------------------
                0.00    0.00      13/700         cond_rule::check_children(void) <cycle 2> [337]
                0.00    0.00     687/700         block_rule::check_children(void) <cycle 2> [344]
[272]    0.0    0.00    0.00     700         rule::check_children(void) [272]
-----------------------------------------------
                0.00    0.00     215/695         wavefm::attach(int) [312]
                0.00    0.00     480/695         wavefm::flush(void) [259]
[273]    0.0    0.00    0.00     695         wavefm::translate(void) [273]
                0.00    0.00     695/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/673         configuration::~configuration(void) [692]
                0.00    0.00       3/673         lang::~lang(void) [97]
                0.00    0.00      17/673         voice::~voice(void) [675]
                0.00    0.00     652/673         cow_free(cowabilium *, option *, void *) [275]
[274]    0.0    0.00    0.00     673         cow_unstring(cowabilium *, option *) [274]
-----------------------------------------------
                0.00    0.00     652/652         cow_unclaim(configuration *) [283]
[275]    0.0    0.00    0.00     652         cow_free(cowabilium *, option *, void *) [275]
                0.00    0.00     652/673         cow_unstring(cowabilium *, option *) [274]
-----------------------------------------------
                0.00    0.00       1/648         __do_global_ctors_aux [89]
                0.00    0.00     647/648         do_set(char *, context *) [81]
[276]    0.0    0.00    0.00     648         reply(char const *, context *) [276]
                0.00    0.00     647/3711        reply(char const *) [233]
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [708]
-----------------------------------------------
                0.00    0.00     647/647         do_set(char *, context *) [81]
[277]    0.0    0.00    0.00     647         access_level(int) [277]
-----------------------------------------------
                0.00    0.00     561/561         strip(char *) [42]
[278]    0.0    0.00    0.00     561         function<char>::ismember(char) [278]
-----------------------------------------------
                0.00    0.00     503/503         booltab<char>::booltab(char *) [16]
[279]    0.0    0.00    0.00     503         void unexcl<char>(char *) [279]
-----------------------------------------------
                0.00    0.00     480/480         wavefm::flush(void) [259]
[280]    0.0    0.00    0.00     480         wavefm::get_ophase_buff(w_ophase const *) [280]
-----------------------------------------------
                0.00    0.00     436/436         hash_table<char, a_ttscp>::hash_table(int) [630]
[281]    0.0    0.00    0.00     436         hash_table<char, a_ttscp>::cfg_rehash(int, int, int) [281]
-----------------------------------------------
                0.00    0.00     436/436         context::context(int, int) [629]
[282]    0.0    0.00    0.00     436         cow_claim(void) [282]
-----------------------------------------------
                0.00    0.00       1/436         cow_catharsis(void) [379]
                0.00    0.00     435/436         context::~context(void) [627]
[283]    0.0    0.00    0.00     436         cow_unclaim(configuration *) [283]
                0.00    0.00     652/652         cow_free(cowabilium *, option *, void *) [275]
-----------------------------------------------
                0.00    0.00       1/435         a_accept::a_accept(void) [707]
                0.00    0.00     434/435         a_accept::run(void) [115]
[284]    0.0    0.00    0.00     435         make_nonblocking(int) [284]
-----------------------------------------------
                0.00    0.00       1/435         make_server_passwd(void) [388]
                0.00    0.00     434/435         a_ttscp::a_ttscp(int, int) [116]
[285]    0.0    0.00    0.00     435         make_rnd_passwd(char *, int) [285]
-----------------------------------------------
                0.00    0.00     434/434         a_ttscp::~a_ttscp(void) [164]
[286]    0.0    0.00    0.00     434         async_close(int) [286]
-----------------------------------------------
                0.00    0.00     434/434         agent::timeslice(void) [3]
[287]    0.0    0.00    0.00     434         a_accept::name(void) [287]
-----------------------------------------------
                0.00    0.00     430/430         parser::initables(SYMTABLE) [295]
[288]    0.0    0.00    0.00     430         parser::alias(char const *, char const *) [288]
-----------------------------------------------
                0.00    0.00     430/430         cmd_apply(char *, a_ttscp *) [290]
[289]    0.0    0.00    0.00     430         stream::apply(agent *, int) [289]
                0.00    0.00     430/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/430         a_input::mktask(int) [296]
-----------------------------------------------
                0.00    0.00     430/430         a_ttscp::run_command(char *) [76]
[290]    0.0    0.00    0.00     430         cmd_apply(char *, a_ttscp *) [290]
                0.00    0.00     430/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/430         stream::apply(agent *, int) [289]
                0.00    0.00     430/3711        reply(char const *) [233]
-----------------------------------------------
                0.00    0.00     430/430         a_ttscp::run_command(char *) [76]
[291]    0.0    0.00    0.00     430         cmd_stream(char *, a_ttscp *) [291]
                0.00    0.00     430/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/430         stream::stream(char *, context *) [640]
                0.00    0.00     430/3711        reply(char const *) [233]
                0.00    0.00     215/430         stream::~stream(void) [634]
-----------------------------------------------
                0.00    0.00     215/430         a_output::run(void) [320]
                0.00    0.00     215/430         oa_wavefm::run(void) [321]
[292]    0.0    0.00    0.00     430         agent::finis(bool) [292]
                0.00    0.00     430/430         stream::finis(bool) [293]
-----------------------------------------------
                0.00    0.00     430/430         agent::finis(bool) [292]
[293]    0.0    0.00    0.00     430         stream::finis(bool) [293]
                0.00    0.00     860/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/3711        reply(char const *) [233]
                0.00    0.00     430/3227        agent::schedule(void) [238]
-----------------------------------------------
                0.00    0.00     430/430         parser::parser(char const *, int) [129]
[294]    0.0    0.00    0.00     430         parser::init(SYMTABLE) [294]
                0.00    0.00     860/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/430         parser::initables(SYMTABLE) [295]
                0.00    0.00     430/10218       parser::chrlev(unsigned char) [207]
                0.00    0.00     430/10218       parser::gettoken(void) [208]
-----------------------------------------------
                0.00    0.00     430/430         parser::init(SYMTABLE) [294]
[295]    0.0    0.00    0.00     430         parser::initables(SYMTABLE) [295]
                0.00    0.00    2150/2150        parser::regist(char, char const *) [242]
                0.00    0.00     430/430         parser::alias(char const *, char const *) [288]
-----------------------------------------------
                0.00    0.00     430/430         stream::apply(agent *, int) [289]
[296]    0.0    0.00    0.00     430         a_input::mktask(int) [296]
                0.00    0.00     860/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/4320        agent::block(int) [227]
-----------------------------------------------
                0.00    0.00     430/430         agent::timeslice(void) [3]
[297]    0.0    0.00    0.00     430         a_ascii::name(void) [297]
-----------------------------------------------
                0.00    0.00     430/430         agent::timeslice(void) [3]
[298]    0.0    0.00    0.00     430         a_input::name(void) [298]
-----------------------------------------------
                0.00    0.00     430/430         agent::timeslice(void) [3]
[299]    0.0    0.00    0.00     430         a_rules::name(void) [299]
-----------------------------------------------
                0.00    0.00     430/430         agent::timeslice(void) [3]
[300]    0.0    0.00    0.00     430         a_output::name(void) [300]
-----------------------------------------------
                0.00    0.00     430/430         stream::~stream(void) [634]
[301]    0.0    0.00    0.00     430         stream::release_agents(void) [301]
                0.00    0.00     430/430         a_rules::~a_rules(void) [637]
                0.00    0.00     430/430         a_ascii::~a_ascii(void) [635]
                0.00    0.00     430/430         a_input::~a_input(void) [636]
                0.00    0.00     222/222         a_segs::~a_segs(void) [646]
                0.00    0.00     215/215         oa_wavefm::~oa_wavefm(void) [651]
                0.00    0.00     208/208         a_ssif::~a_ssif(void) [654]
                0.00    0.00     111/111         oa_seg::~oa_seg(void) [657]
                0.00    0.00     111/215         a_synth::~a_synth(void) [650]
                0.00    0.00     104/104         oa_ascii<6>::~oa_ascii(void) [662]
                0.00    0.00     104/104         a_syn::~a_syn(void) [661]
-----------------------------------------------
                0.00    0.00     430/430         agent::timeslice(void) [3]
[302]    0.0    0.00    0.00     430         a_input::run(void) [302]
                0.00    0.00     860/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/4315        yread(int, void *, int) [229]
                0.00    0.00     430/7770        encode_string(char *, int, bool) [214]
                0.00    0.00     430/1935        agent::pass(void *) [246]
-----------------------------------------------
                0.00    0.00       1/402         void set_enum_option<OUT_ML>(option *, char const *, char *, char *) [394]
                0.00    0.00      17/402         void set_enum_option<SYNTH_TYPE>(option *, char const *, char *, char *) [359]
                0.00    0.00     384/402         set_option(option *, char const *, void *) [77]
[303]    0.0    0.00    0.00     402         parse_cfg_str(char *) [303]
                0.00    0.00       4/308656      function<char>::xlat(char) [187]
-----------------------------------------------
                0.00    0.00      44/370         hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
                0.00    0.00      61/370         hash_table<char, char>::hash_table(int) [666]
                0.00    0.00      80/370         hash_table<char, char>::rehash(int) <cycle 1> [34]
                0.00    0.00     185/370         hash_table<char, char>::hash_table(hash_table<char, char> *) [49]
[304]    0.0    0.00    0.00     370         hash_table<char, char>::cfg_rehash(int, int, int) [304]
-----------------------------------------------
                0.00    0.00     155/346         do_alloc_code(wchar_t, unsigned char) [331]
                0.00    0.00     191/346         load_charset(char const *) <cycle 6> [172]
[305]    0.0    0.00    0.00     346         internal_code(wchar_t, unsigned char) [305]
-----------------------------------------------
                0.00    0.00       4/246         r_smooth::r_smooth(char *) [170]
                0.00    0.00     242/246         r_contour::r_contour(char *) [138]
[306]    0.0    0.00    0.00     246         fit(char) [306]
-----------------------------------------------
                0.00    0.00     222/222         agent::timeslice(void) [3]
[307]    0.0    0.00    0.00     222         a_segs::name(void) [307]
-----------------------------------------------
                0.00    0.00     222/222         a_segs::run(void) [64]
[308]    0.0    0.00    0.00     222         unit::write_segs(segment *, int, int) [308]
                0.00    0.00   26130/31010       unit::effective(FIT_IDX) [195]
                0.00    0.00    8710/5319039     unit::sanity(void) [180]
                0.00    0.00    8710/924760      unit::Next(char) [183]
                0.00    0.00     222/793432      unit::LeftMost(char) [185]
-----------------------------------------------
                0.00    0.00     216/216         a_ttscp::disconnect(void) [131]
[309]    0.0    0.00    0.00     216         a_disconnector::disconnect(a_protocol *) [309]
                0.00    0.00     216/3227        agent::schedule(void) [238]
-----------------------------------------------
                0.00    0.00     216/216         agent::timeslice(void) [3]
[310]    0.0    0.00    0.00     216         a_disconnector::name(void) [310]
-----------------------------------------------
                0.00    0.00     216/216         reply(char const *) [233]
[311]    0.0    0.00    0.00     216         severity(int) [311]
-----------------------------------------------
                0.00    0.00     215/215         oa_wavefm::run(void) [321]
[312]    0.0    0.00    0.00     215         wavefm::attach(int) [312]
                0.00    0.00     645/2479522     debug_wanted(int, int) [181]
                0.00    0.00     215/695         wavefm::translate(void) [273]
                0.00    0.00     215/215         wavefm::get_total_len(void) [317]
                0.00    0.00     215/1555        ioctlable(int) [250]
                0.00    0.00     215/1133        wavefm::flush(void) [259]
-----------------------------------------------
                0.00    0.00     215/215         a_ttscp::run_command(char *) [76]
[313]    0.0    0.00    0.00     215         cmd_done(char *, a_ttscp *) [313]
                0.00    0.00     215/3711        reply(char const *) [233]
-----------------------------------------------
                0.00    0.00     215/215         oa_wavefm::run(void) [321]
[314]    0.0    0.00    0.00     215         wavefm::detach(int) [314]
                0.00    0.00     215/1133        wavefm::flush(void) [259]
                0.00    0.00     215/2479522     debug_wanted(int, int) [181]
                0.00    0.00     215/215         sync_soundcard(int) [322]
                0.00    0.00     215/1555        ioctlable(int) [250]
                0.00    0.00     215/215         wavefm::write_header(void) [324]
-----------------------------------------------
                0.00    0.00     215/215         agent::relax(void) [319]
[315]    0.0    0.00    0.00     215         do_relax(void *, DATA_TYPE) [315]
-----------------------------------------------
                0.00    0.00     215/215         wavefm::wavefm(voice *) [652]
[316]    0.0    0.00    0.00     215         downsample_factor(int, int) [316]
-----------------------------------------------
                0.00    0.00     215/215         wavefm::attach(int) [312]
[317]    0.0    0.00    0.00     215         wavefm::get_total_len(void) [317]
                0.00    0.00    1505/4297        wavefm::get_ophase_len(w_ophase const *) [230]
-----------------------------------------------
                0.00    0.00     215/215         agent::timeslice(void) [3]
[318]    0.0    0.00    0.00     215         a_synth::name(void) [318]
-----------------------------------------------
                0.00    0.00     215/215         a_output::run(void) [320]
[319]    0.0    0.00    0.00     215         agent::relax(void) [319]
                0.00    0.00     215/215         do_relax(void *, DATA_TYPE) [315]
-----------------------------------------------
                0.00    0.00     215/215         agent::timeslice(void) [3]
[320]    0.0    0.00    0.00     215         a_output::run(void) [320]
                0.00    0.00     430/1125        a_output::report(bool, int) [262]
                0.00    0.00     215/11669       ywrite(int, void const *, int) [205]
                0.00    0.00     215/215         agent::relax(void) [319]
                0.00    0.00     215/430         agent::finis(bool) [292]
                0.00    0.00     111/111         oa_seg::insize(void) [334]
                0.00    0.00     111/111         a_output::decode(void) [333]
                0.00    0.00     104/104         oa_ascii<6>::insize(void) [342]
                0.00    0.00     104/104         oa_ascii<6>::decode(void) [339]
-----------------------------------------------
                0.00    0.00     215/215         agent::timeslice(void) [3]
[321]    0.0    0.00    0.00     215         oa_wavefm::run(void) [321]
                0.00    0.00     695/1125        a_output::report(bool, int) [262]
                0.00    0.00     480/1133        wavefm::flush(void) [259]
                0.00    0.00     215/215         wavefm::attach(int) [312]
                0.00    0.00     215/215         wavefm::written_bytes(void) [325]
                0.00    0.00     215/215         wavefm::detach(int) [314]
                0.00    0.00     215/2479522     debug_wanted(int, int) [181]
                0.00    0.00     215/215         wavefm::~wavefm(void) [649]
                0.00    0.00     215/430         agent::finis(bool) [292]
-----------------------------------------------
                0.00    0.00     215/215         wavefm::detach(int) [314]
[322]    0.0    0.00    0.00     215         sync_soundcard(int) [322]
                0.00    0.00     215/1555        ioctlable(int) [250]
-----------------------------------------------
                0.00    0.00     215/215         set_option(option *, char const *, void *) [77]
[323]    0.0    0.00    0.00     215         voice_switch(char const *) [323]
                0.00    0.00     215/1729        cow(cowabilium **, int, int, int) [248]
-----------------------------------------------
                0.00    0.00     215/215         wavefm::detach(int) [314]
[324]    0.0    0.00    0.00     215         wavefm::write_header(void) [324]
-----------------------------------------------
                0.00    0.00     215/215         oa_wavefm::run(void) [321]
[325]    0.0    0.00    0.00     215         wavefm::written_bytes(void) [325]
-----------------------------------------------
                0.00    0.00     208/208         agent::timeslice(void) [3]
[326]    0.0    0.00    0.00     208         a_ssif::name(void) [326]
-----------------------------------------------
                0.00    0.00     208/208         a_ssif::run(void) [70]
[327]    0.0    0.00    0.00     208         unit::write_ssif(char *, int, int) [327]
                0.00    0.00    6328/6328        marker::write_ssif(char *) [216]
                0.00    0.00    4880/4880        unit::write_ssif_head(char *) [224]
                0.00    0.00    4880/924760      unit::Next(char) [183]
                0.00    0.00     208/793432      unit::LeftMost(char) [185]
-----------------------------------------------
                0.00    0.00     183/183         parse_rule(text *, hash *, int *) <cycle 3> [14]
[328]    0.0    0.00    0.00     183         block_rule::set_level(char, char) [328]
                0.00    0.00     183/968         rule::set_level(char, char) [268]
-----------------------------------------------
                0.00    0.00     157/157         hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
[329]    0.0    0.00    0.00     157         esc(char) [329]
                0.00    0.00     157/308656      function<char>::xlat(char) [187]
-----------------------------------------------
                0.00    0.00     155/155         encode_string(unsigned char *, int, bool) [213]
[330]    0.0    0.00    0.00     155         alloc_code(wchar_t, unsigned char, int) [330]
                0.00    0.00     155/155         do_alloc_code(wchar_t, unsigned char) [331]
-----------------------------------------------
                0.00    0.00     155/155         alloc_code(wchar_t, unsigned char, int) [330]
[331]    0.0    0.00    0.00     155         do_alloc_code(wchar_t, unsigned char) [331]
                0.00    0.00     155/346         internal_code(wchar_t, unsigned char) [305]
-----------------------------------------------
                0.00    0.00     112/112         wavefm::flush(void) [259]
[332]    0.0    0.00    0.00     112         wavefm::flush_deferred(void) [332]
                0.00    0.00     224/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00     111/111         a_output::run(void) [320]
[333]    0.0    0.00    0.00     111         a_output::decode(void) [333]
-----------------------------------------------
                0.00    0.00     111/111         a_output::run(void) [320]
[334]    0.0    0.00    0.00     111         oa_seg::insize(void) [334]
                0.00    0.00     111/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/105         mbrsyn::mbrsyn(voice *) [706]
                0.00    0.00     104/105         mbrsyn::synssif(voice *, char *, wavefm *) [343]
[335]    0.0    0.00    0.00     105         mbrsyn::restart_mbrola(voice *) [335]
-----------------------------------------------
                0.00    0.00     104/104         mbrsyn::synssif(voice *, char *, wavefm *) [343]
[336]    0.0    0.00    0.00     104         wavefm::become(void *, int) [336]
                0.00    0.00     104/104         wavefm::chunk_become(char *, int) [338]
-----------------------------------------------
                                 104             block_rule::check_children(void) <cycle 2> [344]
[337]    0.0    0.00    0.00     104         cond_rule::check_children(void) <cycle 2> [337]
                0.00    0.00     104/987         rule::check_child(rule *) [267]
                0.00    0.00      13/700         rule::check_children(void) [272]
                                  91             block_rule::check_children(void) <cycle 2> [344]
-----------------------------------------------
                                 208             wavefm::chunk_become(char *, int) [338]
                0.00    0.00     104/104         wavefm::become(void *, int) [336]
[338]    0.0    0.00    0.00     104+208     wavefm::chunk_become(char *, int) [338]
                0.00    0.00     312/2479522     debug_wanted(int, int) [181]
                                 208             wavefm::chunk_become(char *, int) [338]
-----------------------------------------------
                0.00    0.00     104/104         a_output::run(void) [320]
[339]    0.0    0.00    0.00     104         oa_ascii<6>::decode(void) [339]
                0.00    0.00     104/104         decode_string(char *, int) [341]
-----------------------------------------------
                0.00    0.00     104/104         decode_string(char *, int) [341]
[340]    0.0    0.00    0.00     104         decode_string(unsigned char *, int) [340]
-----------------------------------------------
                0.00    0.00     104/104         oa_ascii<6>::decode(void) [339]
[341]    0.0    0.00    0.00     104         decode_string(char *, int) [341]
                0.00    0.00     104/104         decode_string(unsigned char *, int) [340]
-----------------------------------------------
                0.00    0.00     104/104         a_output::run(void) [320]
[342]    0.0    0.00    0.00     104         oa_ascii<6>::insize(void) [342]
-----------------------------------------------
                0.00    0.00     104/104         a_syn::run(void) [174]
[343]    0.0    0.00    0.00     104         mbrsyn::synssif(voice *, char *, wavefm *) [343]
                0.00    0.00     104/105         mbrsyn::restart_mbrola(voice *) [335]
                0.00    0.00     104/104         wavefm::become(void *, int) [336]
-----------------------------------------------
                                  92             block_rule::check_children(void) <cycle 2> [344]
                                  91             cond_rule::check_children(void) <cycle 2> [337]
                0.00    0.00       2/2           rules::rules(char const *, char const *) [12]
[344]    0.0    0.00    0.00      93+92      block_rule::check_children(void) <cycle 2> [344]
                0.00    0.00     883/987         rule::check_child(rule *) [267]
                0.00    0.00     687/700         rule::check_children(void) [272]
                                 104             cond_rule::check_children(void) <cycle 2> [337]
                                  92             block_rule::check_children(void) <cycle 2> [344]
-----------------------------------------------
                0.00    0.00       1/93          compose_pathname(char const *, char const *) [378]
                0.00    0.00       2/93          r_with::r_with(char *, text *, hash *) <cycle 3> [156]
                0.00    0.00       4/93          claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
                0.00    0.00      43/93          hashing_rule::hashing_rule(char *) [146]
                0.00    0.00      43/93          text::subfile(char const *) [148]
[345]    0.0    0.00    0.00      93         compose_pathname(char const *, char const *, char const *) [345]
-----------------------------------------------
                0.00    0.00      15/72          post_set_unit_levels(char const *) [136]
                0.00    0.00      57/72          pre_set_unit_levels(char const *) [390]
[346]    0.0    0.00    0.00      72         enum2str(int, char const *) [346]
-----------------------------------------------
                0.00    0.00      49/49          alloc_level_options(option *, OPT_STRUCT, void *, int, char const *) [135]
[347]    0.0    0.00    0.00      49         alloc_option(option *, OPT_STRUCT) [347]
                0.00    0.00      49/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/48          make_server_passwd(void) [388]
                0.00    0.00       4/48          claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
                0.00    0.00      43/48          text::subfile(char const *) [148]
[348]    0.0    0.00    0.00      48         fopen(char const *, char const *, char const *) [348]
-----------------------------------------------
                0.00    0.00      43/43          parse_rule(text *, hash *, int *) <cycle 3> [14]
[349]    0.0    0.00    0.00      43         r_if::set_level(char, char) [349]
                0.00    0.00      43/968         rule::set_level(char, char) [268]
-----------------------------------------------
                0.00    0.00      43/43          text::getline(char *) <cycle 6> [37]
[350]    0.0    0.00    0.00      43         text::superfile(void) [350]
                0.00    0.00      43/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                                  40             hash_table<char, char>::add(char const *, char const *) <cycle 1> [24]
[351]    0.0    0.00    0.00      40         hash_table<char, char>::rehash(void) <cycle 1> [351]
                                  40             hash_table<char, char>::rehash(int) <cycle 1> [34]
-----------------------------------------------
                0.00    0.00      34/34          parse_rule(text *, hash *, int *) <cycle 3> [14]
[352]    0.0    0.00    0.00      34         r_subst::set_level(char, char) [352]
                0.00    0.00      34/968         rule::set_level(char, char) [268]
-----------------------------------------------
                0.00    0.00      30/30          hash_table<char, file>::~hash_table(void) [699]
[353]    0.0    0.00    0.00      30         hash_table<char, file>::dissolvetree(hsearchtree<char, file> *) [353]
-----------------------------------------------
                0.00    0.00      28/28          text::~text(void) [672]
[354]    0.0    0.00    0.00      28         text::done(void) [354]
-----------------------------------------------
                0.00    0.00      27/27          lang::~lang(void) [97]
[355]    0.0    0.00    0.00      27         hash_table<char, option>::get_random(void) [355]
-----------------------------------------------
                0.00    0.00      21/21          text::getline(char *) <cycle 6> [37]
[356]    0.0    0.00    0.00      21         begins(char const *, char const *) [356]
-----------------------------------------------
                0.00    0.00      20/20          invoke_set_action(option *, char const *) [134]
[357]    0.0    0.00    0.00      20         pre_init_f(char const *) [357]
-----------------------------------------------
                0.00    0.00      18/18          text::getline(char *) <cycle 6> [37]
[358]    0.0    0.00    0.00      18         get_quoted(char *) [358]
-----------------------------------------------
                0.00    0.00      17/17          set_option(option *, char const *, void *) [77]
[359]    0.0    0.00    0.00      17         void set_enum_option<SYNTH_TYPE>(option *, char const *, char *, char *) [359]
                0.00    0.00      17/402         parse_cfg_str(char *) [303]
                0.00    0.00      17/5491        str2enum(char const *, char const *, int) [221]
-----------------------------------------------
                0.00    0.00       4/12          hash_table<char, file>::add(char const *, file const *) [152]
                0.00    0.00       4/12          hash_table<char, file>::remove(char const *) [160]
                0.00    0.00       4/12          hash_table<char, file>::translate(char const *) [366]
[360]    0.0    0.00    0.00      12         hash_table<char, file>::fn(char const *) [360]
-----------------------------------------------
                0.00    0.00      12/12          encode_string(unsigned char *, int, bool) [213]
[361]    0.0    0.00    0.00      12         non_unicode_alloc_code(unsigned char) [361]
                0.00    0.00      12/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/4           load_charset(char const *) <cycle 6> [172]
                0.00    0.00       1/4           restrict_options(void) [103]
                0.00    0.00       2/4           update_sampa(int, char const *) [86]
[362]    0.0    0.00    0.00       4         text::exists(void) [362]
-----------------------------------------------
                0.00    0.00       4/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
[363]    0.0    0.00    0.00       4         get_timestamp(char *) [363]
                0.00    0.00       4/4           stat [365]
-----------------------------------------------
                0.00    0.00       4/4           config_init(void) [59]
[364]    0.0    0.00    0.00       4         parse_cmd_line(void) [364]
                0.00    0.00       4/7770        encode_string(char *, int, bool) [214]
-----------------------------------------------
                0.00    0.00       4/4           get_timestamp(char *) [363]
[365]    0.0    0.00    0.00       4         stat [365]
-----------------------------------------------
                0.00    0.00       4/4           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
[366]    0.0    0.00    0.00       4         hash_table<char, file>::translate(char const *) [366]
                0.00    0.00       4/12          hash_table<char, file>::fn(char const *) [360]
-----------------------------------------------
                0.00    0.00       1/4           check_cfg_version(char const *) [175]
                0.00    0.00       1/4           voice::~voice(void) [675]
                0.00    0.00       2/4           lpcsyn::~lpcsyn(void) [694]
[367]    0.0    0.00    0.00       4         unclaim(file *) [367]
-----------------------------------------------
                0.00    0.00       3/3           hash_table<char, option>::hash_table(int) [685]
[368]    0.0    0.00    0.00       3         hash_table<char, option>::cfg_rehash(int, int, int) [368]
-----------------------------------------------
                0.00    0.00       1/3           shutdown_unit_markers(void) [398]
                0.00    0.00       2/3           slab<20>::~slab(void) [687]
[369]    0.0    0.00    0.00       3         slab<20>::shutdown(void) [369]
-----------------------------------------------
                0.00    0.00       1/2           load_charset(char const *) <cycle 6> [172]
                0.00    0.00       1/2           load_default_charset(void) [387]
[370]    0.0    0.00    0.00       2         alloc_charset(char const *) [370]
-----------------------------------------------
                0.00    0.00       2/2           a_ttscp::~a_ttscp(void) [164]
[371]    0.0    0.00    0.00       2         hash_table<char, a_ttscp>::get_random(void) [371]
-----------------------------------------------
                0.00    0.00       2/2           lang::compile_rules(void) [10]
[372]    0.0    0.00    0.00       2         lang_switch(char const *) [372]
-----------------------------------------------
                0.00    0.00       2/2           epos_done(void) [93]
[373]    0.0    0.00    0.00       2         release(char **) [373]
-----------------------------------------------
                0.00    0.00       1/2           shutdown_cfgs(void) [395]
                0.00    0.00       1/2           slab<328>::~slab(void) [700]
[374]    0.0    0.00    0.00       2         slab<328>::shutdown(void) [374]
-----------------------------------------------
                0.00    0.00       1/2           shutdown_units(void) [399]
                0.00    0.00       1/2           slab<40>::~slab(void) [701]
[375]    0.0    0.00    0.00       2         slab<40>::shutdown(void) [375]
-----------------------------------------------
                0.00    0.00       1/1           hash_table<char, file>::hash_table(int) [710]
[376]    0.0    0.00    0.00       1         hash_table<char, file>::cfg_rehash(int, int, int) [376]
-----------------------------------------------
                0.00    0.00       1/1           a_ttscp::run_command(char *) [76]
[377]    0.0    0.00    0.00       1         cmd_pass(char *, a_ttscp *) [377]
                0.00    0.00       1/2479522     debug_wanted(int, int) [181]
                0.00    0.00       1/3711        reply(char const *) [233]
-----------------------------------------------
                0.00    0.00       1/1           make_server_passwd(void) [388]
[378]    0.0    0.00    0.00       1         compose_pathname(char const *, char const *) [378]
                0.00    0.00       1/93          compose_pathname(char const *, char const *, char const *) [345]
-----------------------------------------------
                0.00    0.00       1/1           epos_done(void) [93]
[379]    0.0    0.00    0.00       1         cow_catharsis(void) [379]
                0.00    0.00       1/436         cow_unclaim(configuration *) [283]
-----------------------------------------------
                0.00    0.00       1/1           server(void) [4]
[380]    0.0    0.00    0.00       1         daemonize(void) [380]
                0.00    0.00       1/1           make_server_passwd(void) [388]
                0.00    0.00       1/436         context::context(int, int) [629]
                0.00    0.00       1/1           a_accept::a_accept(void) [707]
                0.00    0.00       1/1           qipc_proxy_init(void) [391]
-----------------------------------------------
                0.00    0.00       1/1           epos_done(void) [93]
[381]    0.0    0.00    0.00       1         unit::done(void) [381]
                0.00    0.00       1/1           shutdown_units(void) [399]
                0.00    0.00       1/1           shutdown_unit_markers(void) [398]
-----------------------------------------------
                0.00    0.00       1/1           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
[382]    0.0    0.00    0.00       1         floatoven(char *, int) [382]
-----------------------------------------------
                0.00    0.00       1/1           just_connect_socket(unsigned int, int) [385]
[383]    0.0    0.00    0.00       1         getaddrbyname(char const *) [383]
-----------------------------------------------
                0.00    0.00       1/1           load_default_charset(void) [387]
[384]    0.0    0.00    0.00       1         init_enc(void) [384]
-----------------------------------------------
                0.00    0.00       1/1           running_at_localhost(void) [393]
[385]    0.0    0.00    0.00       1         just_connect_socket(unsigned int, int) [385]
                0.00    0.00       1/1           getaddrbyname(char const *) [383]
-----------------------------------------------
                0.00    0.00       1/1           start_unix_daemon(void) [1]
[386]    0.0    0.00    0.00       1         lest_already_running(void) [386]
                0.00    0.00       1/1           running_at_localhost(void) [393]
-----------------------------------------------
                0.00    0.00       1/1           epos_init(void) [9]
[387]    0.0    0.00    0.00       1         load_default_charset(void) [387]
                0.00    0.00       1/1           init_enc(void) [384]
                0.00    0.00       1/2           alloc_charset(char const *) [370]
-----------------------------------------------
                0.00    0.00       1/1           daemonize(void) [380]
[388]    0.0    0.00    0.00       1         make_server_passwd(void) [388]
                0.00    0.00       1/435         make_rnd_passwd(char *, int) [285]
                0.00    0.00       1/2479522     debug_wanted(int, int) [181]
                0.00    0.00       1/1           compose_pathname(char const *, char const *) [378]
                0.00    0.00       1/48          fopen(char const *, char const *, char const *) [348]
-----------------------------------------------
                0.00    0.00       1/1           start_unix_daemon(void) [1]
[389]    0.0    0.00    0.00       1         my_fork(void) [389]
-----------------------------------------------
                0.00    0.00       1/1           invoke_set_action(option *, char const *) [134]
[390]    0.0    0.00    0.00       1         pre_set_unit_levels(char const *) [390]
                0.00    0.00      57/72          enum2str(int, char const *) [346]
                0.00    0.00       3/5491        str2enum(char const *, char const *, int) [221]
-----------------------------------------------
                0.00    0.00       1/1           daemonize(void) [380]
[391]    0.0    0.00    0.00       1         qipc_proxy_init(void) [391]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [89]
[392]    0.0    0.00    0.00       1         reset_soundcard(int) [392]
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [709]
-----------------------------------------------
                0.00    0.00       1/1           lest_already_running(void) [386]
[393]    0.0    0.00    0.00       1         running_at_localhost(void) [393]
                0.00    0.00       1/1           just_connect_socket(unsigned int, int) [385]
-----------------------------------------------
                0.00    0.00       1/1           set_option(option *, char const *, void *) [77]
[394]    0.0    0.00    0.00       1         void set_enum_option<OUT_ML>(option *, char const *, char *, char *) [394]
                0.00    0.00       1/402         parse_cfg_str(char *) [303]
                0.00    0.00       1/5491        str2enum(char const *, char const *, int) [221]
-----------------------------------------------
                0.00    0.00       1/1           epos_done(void) [93]
[395]    0.0    0.00    0.00       1         shutdown_cfgs(void) [395]
                0.00    0.00       1/2           slab<328>::shutdown(void) [374]
-----------------------------------------------
                0.00    0.00       1/1           epos_catharsis(void) [95]
[396]    0.0    0.00    0.00       1         shutdown_enc(void) [396]
-----------------------------------------------
                0.00    0.00       1/1           epos_done(void) [93]
[397]    0.0    0.00    0.00       1         shutdown_hashing(void) [397]
                0.00    0.00       1/2           slab<20>::~slab(void) [687]
-----------------------------------------------
                0.00    0.00       1/1           unit::done(void) [381]
[398]    0.0    0.00    0.00       1         shutdown_unit_markers(void) [398]
                0.00    0.00       1/3           slab<20>::shutdown(void) [369]
-----------------------------------------------
                0.00    0.00       1/1           unit::done(void) [381]
[399]    0.0    0.00    0.00       1         shutdown_units(void) [399]
                0.00    0.00       1/2           slab<40>::shutdown(void) [375]
-----------------------------------------------
                0.00    0.00   27262/27262       unit::~unit(void) [623]
[616]    0.0    0.00    0.00   27262         unit::operator delete(void *) [616]
                0.00    0.00   27262/29309       slab<40>::release(void *) [197]
-----------------------------------------------
                0.00    0.00     430/27262       str2units(char const *) [128]
                0.00    0.00    1272/27262       unit::split(unit *) [253]
                0.00    0.00    4930/27262       unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00    8710/27262       unit::seg(hash *) [65]
                0.00    0.00   11920/27262       unit::unit(char, parser *) [639]
[617]    0.0    0.00    0.00   27262         unit::operator new(unsigned int) [617]
                0.00    0.00   27262/27262       slab<40>::alloc(void) [198]
-----------------------------------------------
                0.00    0.00   24660/24660       marker::derived(void) [56]
[618]    0.0    0.00    0.00   24660         marker::marker(void) [618]
-----------------------------------------------
                0.00    0.00    4930/13640       unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [203]
                0.00    0.00    8710/13640       unit::seg(hash *) [65]
[619]    0.0    0.00    0.00   13640         unit::unit(char, int) [619]
                0.00    0.00   13640/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00    6826/6826        unit::prospoint(FIT_IDX, int, float) [83]
[620]    0.0    0.00    0.00    6826         marker::marker(FIT_IDX, bool, int, marker *, float) [620]
-----------------------------------------------
                0.00    0.00       1/3231        a_disconnector::~a_disconnector(void) [693]
                0.00    0.00       1/3231        a_accept::~a_accept(void) [697]
                0.00    0.00     208/3231        a_ssif::~a_ssif(void) [654]
                0.00    0.00     215/3231        a_synth::~a_synth(void) [650]
                0.00    0.00     222/3231        a_segs::~a_segs(void) [646]
                0.00    0.00     430/3231        stream::~stream(void) [634]
                0.00    0.00     430/3231        a_ascii::~a_ascii(void) [635]
                0.00    0.00     430/3231        a_rules::~a_rules(void) [637]
                0.00    0.00     434/3231        a_protocol::~a_protocol(void) [631]
                0.00    0.00     860/3231        a_io::~a_io(void) [625]
[621]    0.0    0.00    0.00    3231         agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00       1/3231        a_disconnector::a_disconnector(void) [704]
                0.00    0.00       1/3231        a_accept::a_accept(void) [707]
                0.00    0.00     104/3231        a_synth::a_synth(DATA_TYPE, DATA_TYPE) [664]
                0.00    0.00     111/3231        a_synth::a_synth(void) [659]
                0.00    0.00     208/3231        a_ssif::a_ssif(void) [655]
                0.00    0.00     222/3231        a_segs::a_segs(void) [647]
                0.00    0.00     430/3231        stream::stream(char *, context *) [640]
                0.00    0.00     430/3231        a_ascii::a_ascii(void) [641]
                0.00    0.00     430/3231        a_rules::a_rules(void) [643]
                0.00    0.00     434/3231        a_protocol::a_protocol(void) [632]
                0.00    0.00     860/3231        a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
[622]    0.0    0.00    0.00    3231         agent::agent(DATA_TYPE, DATA_TYPE) [622]
                0.00    0.00    3231/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                               24270             unit::~unit(void) [623]
                0.00    0.00       1/2993        __static_initialization_and_destruction_0 [690]
                0.00    0.00       1/2993        epos_catharsis(void) [95]
                0.00    0.00     208/2993        a_ssif::run(void) [70]
                0.00    0.00     222/2993        a_segs::run(void) [64]
                0.00    0.00    2561/2993        unit::unlink(REPARENT) [239]
[623]    0.0    0.00    0.00    2993+24270   unit::~unit(void) [623]
                0.00    0.00   27262/27262       unit::operator delete(void *) [616]
                               24270             unit::~unit(void) [623]
-----------------------------------------------
                0.00    0.00       1/970         r_absol::~r_absol(void) [696]
                0.00    0.00       4/970         r_smooth::~r_smooth(void) [684]
                0.00    0.00       4/970         r_syll::~r_syll(void) [683]
                0.00    0.00       7/970         r_raise::~r_raise(void) [681]
                0.00    0.00      10/970         r_nothing::~r_nothing(void) [680]
                0.00    0.00      55/970         hashing_rule::~hashing_rule(void) [100]
                0.00    0.00     104/970         cond_rule::~cond_rule(void) <cycle 4> [114]
                0.00    0.00     140/970         r_regex::~r_regex(void) [656]
                0.00    0.00     185/970         block_rule::~block_rule(void) <cycle 4> [102]
                0.00    0.00     218/970         r_regress::~r_regress(void) [648]
                0.00    0.00     242/970         r_contour::~r_contour(void) [645]
[624]    0.0    0.00    0.00     970         rule::~rule(void) [624]
                0.00    0.00     970/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00     430/860         a_input::~a_input(void) [636]
                0.00    0.00     430/860         a_output::~a_output(void) [638]
[625]    0.0    0.00    0.00     860         a_io::~a_io(void) [625]
                0.00    0.00     860/2479522     debug_wanted(int, int) [181]
                0.00    0.00     860/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     430/860         a_input::a_input(char const *) [642]
                0.00    0.00     430/860         a_output::a_output(char const *, DATA_TYPE) [644]
[626]    0.0    0.00    0.00     860         a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
                0.00    0.00     860/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
                0.00    0.00     860/2381        hash_table<char, a_ttscp>::translate(char const *) [240]
                0.00    0.00     860/5180        stretch_sleep_table(int) [222]
                0.00    0.00     860/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/436         server_shutdown(void) [94]
                0.00    0.00       1/436         a_accept::~a_accept(void) [697]
                0.00    0.00     434/436         a_ttscp::~a_ttscp(void) [164]
[627]    0.0    0.00    0.00     436         context::~context(void) [627]
                0.00    0.00     435/436         cow_unclaim(configuration *) [283]
                0.00    0.00       1/9499        context::leave(void) [210]
-----------------------------------------------
                0.00    0.00       2/436         server_shutdown(void) [94]
                0.00    0.00     434/436         a_ttscp::~a_ttscp(void) [164]
[628]    0.0    0.00    0.00     436         hash_table<char, a_ttscp>::~hash_table(void) [628]
                0.00    0.00    1796/1796        hash_table<char, a_ttscp>::dissolvetree(hsearchtree<char, a_ttscp> *) [247]
-----------------------------------------------
                0.00    0.00       1/436         daemonize(void) [380]
                0.00    0.00       1/436         a_accept::a_accept(void) [707]
                0.00    0.00     434/436         a_ttscp::a_ttscp(int, int) [116]
[629]    0.0    0.00    0.00     436         context::context(int, int) [629]
                0.00    0.00     437/2479522     debug_wanted(int, int) [181]
                0.00    0.00     436/436         cow_claim(void) [282]
                0.00    0.00     435/1082        cow_configuration(configuration **) [263]
-----------------------------------------------
                0.00    0.00       2/436         __static_initialization_and_destruction_0 [708]
                0.00    0.00     434/436         a_ttscp::a_ttscp(int, int) [116]
[630]    0.0    0.00    0.00     436         hash_table<char, a_ttscp>::hash_table(int) [630]
                0.00    0.00     436/436         hash_table<char, a_ttscp>::cfg_rehash(int, int, int) [281]
-----------------------------------------------
                0.00    0.00     434/434         a_ttscp::~a_ttscp(void) [164]
[631]    0.0    0.00    0.00     434         a_protocol::~a_protocol(void) [631]
                0.00    0.00     434/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     434/434         a_ttscp::a_ttscp(int, int) [116]
[632]    0.0    0.00    0.00     434         a_protocol::a_protocol(void) [632]
                0.00    0.00     434/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00     430/430         str2units(char const *) [128]
[633]    0.0    0.00    0.00     430         parser::~parser(void) [633]
-----------------------------------------------
                0.00    0.00     215/430         a_ttscp::~a_ttscp(void) [164]
                0.00    0.00     215/430         cmd_stream(char *, a_ttscp *) [291]
[634]    0.0    0.00    0.00     430         stream::~stream(void) [634]
                0.00    0.00     430/430         stream::release_agents(void) [301]
                0.00    0.00     430/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     430/430         stream::release_agents(void) [301]
[635]    0.0    0.00    0.00     430         a_ascii::~a_ascii(void) [635]
                0.00    0.00     430/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     430/430         stream::release_agents(void) [301]
[636]    0.0    0.00    0.00     430         a_input::~a_input(void) [636]
                0.00    0.00     430/860         a_io::~a_io(void) [625]
-----------------------------------------------
                0.00    0.00     430/430         stream::release_agents(void) [301]
[637]    0.0    0.00    0.00     430         a_rules::~a_rules(void) [637]
                0.00    0.00     430/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     104/430         oa_ascii<6>::~oa_ascii(void) [662]
                0.00    0.00     111/430         oa_seg::~oa_seg(void) [657]
                0.00    0.00     215/430         oa_wavefm::~oa_wavefm(void) [651]
[638]    0.0    0.00    0.00     430         a_output::~a_output(void) [638]
                0.00    0.00     430/860         a_io::~a_io(void) [625]
-----------------------------------------------
                               11920             unit::unit(char, parser *) [639]
                0.00    0.00     430/430         str2units(char const *) [128]
[639]    0.0    0.00    0.00     430+11920   unit::unit(char, parser *) [639]
                0.00    0.00   24700/2479522     debug_wanted(int, int) [181]
                0.00    0.00   11920/27262       unit::operator new(unsigned int) [617]
                0.00    0.00   11920/20842       unit::insert_end(unit *, unit *) [202]
                0.00    0.00    9788/10218       parser::gettoken(void) [208]
                               11920             unit::unit(char, parser *) [639]
-----------------------------------------------
                0.00    0.00     430/430         cmd_stream(char *, a_ttscp *) [291]
[640]    0.0    0.00    0.00     430         stream::stream(char *, context *) [640]
                0.00    0.00    2365/2365        make_agent(char *, agent *) [241]
                0.00    0.00    1935/2479522     debug_wanted(int, int) [181]
                0.00    0.00     430/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00     430/430         make_agent(char *, agent *) [241]
[641]    0.0    0.00    0.00     430         a_ascii::a_ascii(void) [641]
                0.00    0.00     430/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00     430/430         make_agent(char *, agent *) [241]
[642]    0.0    0.00    0.00     430         a_input::a_input(char const *) [642]
                0.00    0.00     430/860         a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
-----------------------------------------------
                0.00    0.00     430/430         make_agent(char *, agent *) [241]
[643]    0.0    0.00    0.00     430         a_rules::a_rules(void) [643]
                0.00    0.00     430/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00     104/430         oa_ascii<6>::oa_ascii(char const *) [665]
                0.00    0.00     111/430         oa_seg::oa_seg(char const *) [658]
                0.00    0.00     215/430         oa_wavefm::oa_wavefm(char const *) [653]
[644]    0.0    0.00    0.00     430         a_output::a_output(char const *, DATA_TYPE) [644]
                0.00    0.00     430/860         a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [626]
-----------------------------------------------
                0.00    0.00     242/242         block_rule::~block_rule(void) <cycle 4> [102]
[645]    0.0    0.00    0.00     242         r_contour::~r_contour(void) [645]
                0.00    0.00     242/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00     222/222         stream::release_agents(void) [301]
[646]    0.0    0.00    0.00     222         a_segs::~a_segs(void) [646]
                0.00    0.00     222/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     222/222         make_agent(char *, agent *) [241]
[647]    0.0    0.00    0.00     222         a_segs::a_segs(void) [647]
                0.00    0.00     222/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00      57/218         r_progress::~r_progress(void) [668]
                0.00    0.00     161/218         block_rule::~block_rule(void) <cycle 4> [102]
[648]    0.0    0.00    0.00     218         r_regress::~r_regress(void) [648]
                0.00    0.00     218/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00     215/215         oa_wavefm::run(void) [321]
[649]    0.0    0.00    0.00     215         wavefm::~wavefm(void) [649]
-----------------------------------------------
                0.00    0.00     104/215         a_syn::~a_syn(void) [661]
                0.00    0.00     111/215         stream::release_agents(void) [301]
[650]    0.0    0.00    0.00     215         a_synth::~a_synth(void) [650]
                0.00    0.00     215/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     215/215         stream::release_agents(void) [301]
[651]    0.0    0.00    0.00     215         oa_wavefm::~oa_wavefm(void) [651]
                0.00    0.00     215/430         a_output::~a_output(void) [638]
-----------------------------------------------
                0.00    0.00     104/215         a_syn::run(void) [174]
                0.00    0.00     111/215         a_synth::run(void) [5]
[652]    0.0    0.00    0.00     215         wavefm::wavefm(voice *) [652]
                0.00    0.00     215/215         downsample_factor(int, int) [316]
-----------------------------------------------
                0.00    0.00     215/215         make_agent(char *, agent *) [241]
[653]    0.0    0.00    0.00     215         oa_wavefm::oa_wavefm(char const *) [653]
                0.00    0.00     215/430         a_output::a_output(char const *, DATA_TYPE) [644]
-----------------------------------------------
                0.00    0.00     208/208         stream::release_agents(void) [301]
[654]    0.0    0.00    0.00     208         a_ssif::~a_ssif(void) [654]
                0.00    0.00     208/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00     208/208         make_agent(char *, agent *) [241]
[655]    0.0    0.00    0.00     208         a_ssif::a_ssif(void) [655]
                0.00    0.00     208/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00       6/140         cond_rule::~cond_rule(void) <cycle 4> [114]
                0.00    0.00     134/140         block_rule::~block_rule(void) <cycle 4> [102]
[656]    0.0    0.00    0.00     140         r_regex::~r_regex(void) [656]
                0.00    0.00     140/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00     111/111         stream::release_agents(void) [301]
[657]    0.0    0.00    0.00     111         oa_seg::~oa_seg(void) [657]
                0.00    0.00     111/430         a_output::~a_output(void) [638]
-----------------------------------------------
                0.00    0.00     111/111         make_agent(char *, agent *) [241]
[658]    0.0    0.00    0.00     111         oa_seg::oa_seg(char const *) [658]
                0.00    0.00     111/430         a_output::a_output(char const *, DATA_TYPE) [644]
-----------------------------------------------
                0.00    0.00     111/111         make_agent(char *, agent *) [241]
[659]    0.0    0.00    0.00     111         a_synth::a_synth(void) [659]
                0.00    0.00     111/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                                  12             block_rule::~block_rule(void) <cycle 4> [102]
                                  91             cond_rule::~cond_rule(void) <cycle 4> [114]
                0.00    0.00       2/2           rules::~rules(void) [99]
[660]    0.0    0.00    0.00     105         r_block::~r_block(void) <cycle 4> [660]
                                 105             block_rule::~block_rule(void) <cycle 4> [102]
-----------------------------------------------
                0.00    0.00     104/104         stream::release_agents(void) [301]
[661]    0.0    0.00    0.00     104         a_syn::~a_syn(void) [661]
                0.00    0.00     104/215         a_synth::~a_synth(void) [650]
-----------------------------------------------
                0.00    0.00     104/104         stream::release_agents(void) [301]
[662]    0.0    0.00    0.00     104         oa_ascii<6>::~oa_ascii(void) [662]
                0.00    0.00     104/430         a_output::~a_output(void) [638]
-----------------------------------------------
                0.00    0.00     104/104         make_agent(char *, agent *) [241]
[663]    0.0    0.00    0.00     104         a_syn::a_syn(void) [663]
                0.00    0.00     104/104         a_synth::a_synth(DATA_TYPE, DATA_TYPE) [664]
-----------------------------------------------
                0.00    0.00     104/104         a_syn::a_syn(void) [663]
[664]    0.0    0.00    0.00     104         a_synth::a_synth(DATA_TYPE, DATA_TYPE) [664]
                0.00    0.00     104/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00     104/104         make_agent(char *, agent *) [241]
[665]    0.0    0.00    0.00     104         oa_ascii<6>::oa_ascii(char const *) [665]
                0.00    0.00     104/430         a_output::a_output(char const *, DATA_TYPE) [644]
-----------------------------------------------
                0.00    0.00      17/61          hash::hash(int) [676]
                0.00    0.00      44/61          hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [19]
[666]    0.0    0.00    0.00      61         hash_table<char, char>::hash_table(int) [666]
                0.00    0.00      61/370         hash_table<char, char>::cfg_rehash(int, int, int) [304]
-----------------------------------------------
                                  58             block_rule::~block_rule(void) <cycle 4> [102]
[667]    0.0    0.00    0.00      58         r_choice::~r_choice(void) <cycle 4> [667]
                                  58             block_rule::~block_rule(void) <cycle 4> [102]
-----------------------------------------------
                0.00    0.00      57/57          block_rule::~block_rule(void) <cycle 4> [102]
[668]    0.0    0.00    0.00      57         r_progress::~r_progress(void) [668]
                0.00    0.00      57/218         r_regress::~r_regress(void) [648]
-----------------------------------------------
                                  43             block_rule::~block_rule(void) <cycle 4> [102]
[669]    0.0    0.00    0.00      43         r_if::~r_if(void) <cycle 4> [669]
                                  43             cond_rule::~cond_rule(void) <cycle 4> [114]
-----------------------------------------------
                                  43             parse_rule(text *, hash *, int *) <cycle 3> [14]
[670]    0.0    0.00    0.00      43         r_if::r_if(char *, text *, hash *) <cycle 3> [670]
                0.00    0.00      43/1134        option_struct(char const *, hash_table<char, option> *) [258]
                                  43             cond_rule::cond_rule(char *, text *, hash *) <cycle 3> [144]
-----------------------------------------------
                                  41             block_rule::~block_rule(void) <cycle 4> [102]
[671]    0.0    0.00    0.00      41         r_inside::~r_inside(void) <cycle 4> [671]
                                  41             cond_rule::~cond_rule(void) <cycle 4> [114]
-----------------------------------------------
                0.00    0.00       1/28          load_charset(char const *) <cycle 6> [172]
                0.00    0.00       1/28          restrict_options(void) [103]
                0.00    0.00       2/28          rules::rules(char const *, char const *) [12]
                0.00    0.00       2/28          update_sampa(int, char const *) [86]
                0.00    0.00      22/28          load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [55]
[672]    0.0    0.00    0.00      28         text::~text(void) [672]
                0.00    0.00      28/28          text::done(void) [354]
-----------------------------------------------
                                  22             block_rule::~block_rule(void) <cycle 4> [102]
[673]    0.0    0.00    0.00      22         r_switch::~r_switch(void) <cycle 4> [673]
                                  22             block_rule::~block_rule(void) <cycle 4> [102]
-----------------------------------------------
                0.00    0.00       1/21          configuration::configuration(void) [703]
                0.00    0.00       3/21          lang::lang(char const *, char const *) [58]
                0.00    0.00      17/21          voice::voice(char const *, char const *, lang *) [62]
[674]    0.0    0.00    0.00      21         cowabilium::cowabilium(void) [674]
-----------------------------------------------
                0.00    0.00      17/17          lang::~lang(void) [97]
[675]    0.0    0.00    0.00      17         voice::~voice(void) [675]
                0.00    0.00      17/2479522     debug_wanted(int, int) [181]
                0.00    0.00      17/673         cow_unstring(cowabilium *, option *) [274]
                0.00    0.00      17/17          voice::operator delete(void *) [677]
                0.00    0.00       1/4           unclaim(file *) [367]
                0.00    0.00       1/1           mbrsyn::~mbrsyn(void) [695]
                0.00    0.00       1/1           lpcfloat::~lpcfloat(void) [698]
-----------------------------------------------
                0.00    0.00       2/17          rules::rules(char const *, char const *) [12]
                0.00    0.00      15/17          literal_hash(char *) [105]
[676]    0.0    0.00    0.00      17         hash::hash(int) [676]
                0.00    0.00      17/61          hash_table<char, char>::hash_table(int) [666]
-----------------------------------------------
                0.00    0.00      17/17          voice::~voice(void) [675]
[677]    0.0    0.00    0.00      17         voice::operator delete(void *) [677]
-----------------------------------------------
                0.00    0.00      17/17          lang::add_voice(char const *) [60]
[678]    0.0    0.00    0.00      17         voice::operator new(unsigned int, lang *) [678]
-----------------------------------------------
                                  12             block_rule::~block_rule(void) <cycle 4> [102]
[679]    0.0    0.00    0.00      12         r_near::~r_near(void) <cycle 4> [679]
                                  12             cond_rule::~cond_rule(void) <cycle 4> [114]
-----------------------------------------------
                0.00    0.00      10/10          block_rule::~block_rule(void) <cycle 4> [102]
[680]    0.0    0.00    0.00      10         r_nothing::~r_nothing(void) [680]
                0.00    0.00      10/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00       7/7           block_rule::~block_rule(void) <cycle 4> [102]
[681]    0.0    0.00    0.00       7         r_raise::~r_raise(void) [681]
                0.00    0.00       7/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00       4/4           uncache_file(char *, file *, void *) [161]
[682]    0.0    0.00    0.00       4         file::~file(void) [682]
-----------------------------------------------
                0.00    0.00       4/4           block_rule::~block_rule(void) <cycle 4> [102]
[683]    0.0    0.00    0.00       4         r_syll::~r_syll(void) [683]
                0.00    0.00       4/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00       4/4           block_rule::~block_rule(void) <cycle 4> [102]
[684]    0.0    0.00    0.00       4         r_smooth::~r_smooth(void) [684]
                0.00    0.00       4/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00       1/3           make_option_set(void) [118]
                0.00    0.00       2/3           lang::add_soft_option(char const *) [120]
[685]    0.0    0.00    0.00       3         hash_table<char, option>::hash_table(int) [685]
                0.00    0.00       3/3           hash_table<char, option>::cfg_rehash(int, int, int) [368]
-----------------------------------------------
                0.00    0.00       1/2           lpcsyn::~lpcsyn(void) [694]
                0.00    0.00       1/2           mbrsyn::~mbrsyn(void) [695]
[686]    0.0    0.00    0.00       2         synth::~synth(void) [686]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                0.00    0.00       1/2           shutdown_hashing(void) [397]
                0.00    0.00       1/2           __static_initialization_and_destruction_0 [690]
[687]    0.0    0.00    0.00       2         slab<20>::~slab(void) [687]
                0.00    0.00       2/3           slab<20>::shutdown(void) [369]
-----------------------------------------------
                0.00    0.00       1/2           lpcsyn::lpcsyn(voice *) [176]
                0.00    0.00       1/2           mbrsyn::mbrsyn(voice *) [706]
[688]    0.0    0.00    0.00       2         synth::synth(void) [688]
                0.00    0.00       2/2479522     debug_wanted(int, int) [181]
-----------------------------------------------
                                   2             __static_initialization_and_destruction_0 [689]
                0.00    0.00       1/2           __do_global_dtors_aux [90]
                0.00    0.00       1/2           __do_global_ctors_aux [89]
[689]    0.0    0.00    0.00       2+2       __static_initialization_and_destruction_0 [689]
                0.00    0.00       1/1           a_disconnector::a_disconnector(void) [704]
                0.00    0.00       1/1           a_disconnector::~a_disconnector(void) [693]
                                   2             __static_initialization_and_destruction_0 [689]
-----------------------------------------------
                                   2             __static_initialization_and_destruction_0 [690]
                0.00    0.00       1/2           __do_global_dtors_aux [90]
                0.00    0.00       1/2           __do_global_ctors_aux [89]
[690]    0.0    0.00    0.00       2+2       __static_initialization_and_destruction_0 [690]
                0.00    0.00       1/1           unit::unit(void) [705]
                0.00    0.00       1/1           slab<40>::slab(int) [712]
                0.00    0.00       1/2           slab<20>::slab(int) [691]
                0.00    0.00       1/2           slab<20>::~slab(void) [687]
                0.00    0.00       1/1           slab<40>::~slab(void) [701]
                0.00    0.00       1/2993        unit::~unit(void) [623]
                                   2             __static_initialization_and_destruction_0 [690]
-----------------------------------------------
                0.00    0.00       1/2           tree_alloc(void) [43]
                0.00    0.00       1/2           __static_initialization_and_destruction_0 [690]
[691]    0.0    0.00    0.00       2         slab<20>::slab(int) [691]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [157]
[692]    0.0    0.00    0.00       1         configuration::~configuration(void) [692]
                0.00    0.00       1/673         cow_unstring(cowabilium *, option *) [274]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [689]
[693]    0.0    0.00    0.00       1         a_disconnector::~a_disconnector(void) [693]
                0.00    0.00       1/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00       1/1           lpcfloat::~lpcfloat(void) [698]
[694]    0.0    0.00    0.00       1         lpcsyn::~lpcsyn(void) [694]
                0.00    0.00       2/4           unclaim(file *) [367]
                0.00    0.00       1/2           synth::~synth(void) [686]
-----------------------------------------------
                0.00    0.00       1/1           voice::~voice(void) [675]
[695]    0.0    0.00    0.00       1         mbrsyn::~mbrsyn(void) [695]
                0.00    0.00       1/2           synth::~synth(void) [686]
-----------------------------------------------
                0.00    0.00       1/1           block_rule::~block_rule(void) <cycle 4> [102]
[696]    0.0    0.00    0.00       1         r_absol::~r_absol(void) [696]
                0.00    0.00       1/970         rule::~rule(void) [624]
-----------------------------------------------
                0.00    0.00       1/1           server_shutdown(void) [94]
[697]    0.0    0.00    0.00       1         a_accept::~a_accept(void) [697]
                0.00    0.00       1/436         context::~context(void) [627]
                0.00    0.00       1/3231        agent::~agent(void) [621]
-----------------------------------------------
                0.00    0.00       1/1           voice::~voice(void) [675]
[698]    0.0    0.00    0.00       1         lpcfloat::~lpcfloat(void) [698]
                0.00    0.00       1/1           lpcsyn::~lpcsyn(void) [694]
-----------------------------------------------
                0.00    0.00       1/1           shutdown_file_cache(void) [163]
[699]    0.0    0.00    0.00       1         hash_table<char, file>::~hash_table(void) [699]
                0.00    0.00      30/30          hash_table<char, file>::dissolvetree(hsearchtree<char, file> *) [353]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [157]
[700]    0.0    0.00    0.00       1         slab<328>::~slab(void) [700]
                0.00    0.00       1/2           slab<328>::shutdown(void) [374]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [690]
[701]    0.0    0.00    0.00       1         slab<40>::~slab(void) [701]
                0.00    0.00       1/2           slab<40>::shutdown(void) [375]
-----------------------------------------------
                0.00    0.00       1/1           epos_catharsis(void) [95]
[702]    0.0    0.00    0.00       1         function<char>::~function(void) [702]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [157]
[703]    0.0    0.00    0.00       1         configuration::configuration(void) [703]
                0.00    0.00       1/21          cowabilium::cowabilium(void) [674]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [689]
[704]    0.0    0.00    0.00       1         a_disconnector::a_disconnector(void) [704]
                0.00    0.00       1/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [690]
[705]    0.0    0.00    0.00       1         unit::unit(void) [705]
-----------------------------------------------
                0.00    0.00       1/1           setup_synth(voice *) [167]
[706]    0.0    0.00    0.00       1         mbrsyn::mbrsyn(voice *) [706]
                0.00    0.00       1/2           synth::synth(void) [688]
                0.00    0.00       1/105         mbrsyn::restart_mbrola(voice *) [335]
-----------------------------------------------
                0.00    0.00       1/1           daemonize(void) [380]
[707]    0.0    0.00    0.00       1         a_accept::a_accept(void) [707]
                0.00    0.00       1/3231        agent::agent(DATA_TYPE, DATA_TYPE) [622]
                0.00    0.00       1/436         context::context(int, int) [629]
                0.00    0.00       1/9498        context::enter(void) [211]
                0.00    0.00       1/2479522     debug_wanted(int, int) [181]
                0.00    0.00       1/435         make_nonblocking(int) [284]
                0.00    0.00       1/4320        agent::block(int) [227]
                0.00    0.00       1/9499        context::leave(void) [210]
-----------------------------------------------
                0.00    0.00       1/1           reply(char const *, context *) [276]
[708]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0 [708]
                0.00    0.00       2/436         hash_table<char, a_ttscp>::hash_table(int) [630]
-----------------------------------------------
                0.00    0.00       1/1           reset_soundcard(int) [392]
[709]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0 [709]
-----------------------------------------------
                0.00    0.00       1/1           claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [153]
[710]    0.0    0.00    0.00       1         hash_table<char, file>::hash_table(int) [710]
                0.00    0.00       1/1           hash_table<char, file>::cfg_rehash(int, int, int) [376]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [157]
[711]    0.0    0.00    0.00       1         slab<328>::slab(int) [711]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 [690]
[712]    0.0    0.00    0.00       1         slab<40>::slab(int) [712]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [185] unit::LeftMost(char)   [57] add_language(char const *) (options.cc) [241] make_agent(char *, agent *)
 [183] unit::Next(char)      [120] lang::add_soft_option(char const *) [284] make_nonblocking(int)
 [186] unit::Prev(char)      [121] lang::add_soft_opts(char const *) [118] make_option_set(void)
 [188] unit::RightMost(char)  [60] lang::add_voice(char const *) [285] make_rnd_passwd(char *, int)
 [631] a_protocol::~a_protocol(void) [61] lang::add_voices(char const *) [388] make_server_passwd(void)
 [102] block_rule::~block_rule(void) [204] agent_profile(char const *) [251] memdup(void *, int)
 [668] r_progress::~r_progress(void) [288] parser::alias(char const *, char const *) [91] marker::merge(marker *, marker **)
 [100] hashing_rule::~hashing_rule(void) [35] slab<20>::alloc(void) [296] a_input::mktask(int)
 [692] configuration::~configuration(void) [198] slab<40>::alloc(void) [389] my_fork(void)
 [693] a_disconnector::~a_disconnector(void) [370] alloc_charset(char const *) [310] a_disconnector::name(void)
 [625] a_io::~a_io(void)     [330] alloc_code(wchar_t, unsigned char, int) (encoding.cc) [307] a_segs::name(void)
 [682] file::~file(void)     [135] alloc_level_options(option *, OPT_STRUCT, void *, int, char const *) [326] a_ssif::name(void)
  [71] hash::~hash(void)     [347] alloc_option(option *, OPT_STRUCT) [297] a_ascii::name(void)
  [97] lang::~lang(void)      [67] r_if::apply(unit *)   [298] a_input::name(void)
 [669] r_if::~r_if(void)      [68] r_seg::apply(unit *)  [299] a_rules::name(void)
 [624] rule::~rule(void)      [26] rules::apply(unit *)  [318] a_synth::name(void)
 [672] text::~text(void)     [235] r_near::apply(unit *) [226] a_ttscp::name(void)
 [623] unit::~unit(void)     [243] r_syll::apply(unit *) [287] a_accept::name(void)
 [661] a_syn::~a_syn(void)    [45] r_with::apply(unit *) [300] a_output::name(void)
 [621] agent::~agent(void)   [289] stream::apply(agent *, int) [256] next_rule(text *, hash *, int *)
 [111] r_seg::~r_seg(void)   [271] r_absol::apply(unit *) [361] non_unicode_alloc_code(unsigned char) (encoding.cc)
  [99] rules::~rules(void)   [209] r_block::apply(unit *) [258] option_struct(char const *, hash_table<char, option> *)
 [686] synth::~synth(void)   [219] r_raise::apply(unit *) [303] parse_cfg_str(char *)
 [675] voice::~voice(void)   [199] r_regex::apply(unit *) [364] parse_cmd_line(void)
 [646] a_segs::~a_segs(void)  [32] r_subst::apply(unit *) [14] parse_rule(text *, hash *, int *)
 [654] a_ssif::~a_ssif(void) [265] r_choice::apply(unit *) [246] agent::pass(void *)
 [694] lpcsyn::~lpcsyn(void) [196] r_inside::apply(unit *) [136] post_set_unit_levels(char const *) (options.cc)
  [78] marker::~marker(void) [217] r_switch::apply(unit *) [357] pre_init_f(char const *) (options.cc)
 [695] mbrsyn::~mbrsyn(void)  [84] r_contour::apply(unit *) [390] pre_set_unit_levels(char const *) (options.cc)
 [657] oa_seg::~oa_seg(void) [249] r_nothing::apply(unit *) [53] unit::project(char)
 [633] parser::~parser(void) [190] r_regress::apply(unit *) [52] unit::project_extents(void)
 [679] r_near::~r_near(void)  [29] block_rule::apply_current(unit *) [51] unit::project_one_level(float)
 [122] r_prep::~r_prep(void) [191] unit::assim(char, bool, function<char> *, booltab<char> *, booltab<char> *) [83] unit::prospoint(FIT_IDX, int, float)
 [683] r_syll::~r_syll(void) [286] async_close(int)      [119] put_into_option_set(option *)
 [124] r_with::~r_with(void) [312] wavefm::attach(int)   [391] qipc_proxy_init(void)
 [634] stream::~stream(void) [192] balance(void)         [220] unit::raise(booltab<char> *, booltab<char> *, char, char)
 [649] wavefm::~wavefm(void) [336] wavefm::become(void *, int) [200] unit::regex(re_pattern_buffer *, int, regmatch_t *, char const *)
 [635] a_ascii::~a_ascii(void) [356] begins(char const *, char const *) [242] parser::regist(char, char const *)
 [636] a_input::~a_input(void) [227] agent::block(int)   [351] hash_table<char, char>::rehash(void)
 [637] a_rules::~a_rules(void) [376] hash_table<char, file>::cfg_rehash(int, int, int) [34] hash_table<char, char>::rehash(int)
 [650] a_synth::~a_synth(void) [368] hash_table<char, option>::cfg_rehash(int, int, int) [189] hash_table<char, char>::rehash_tree(hsearchtree<char, char> *)
 [164] a_ttscp::~a_ttscp(void) [281] hash_table<char, a_ttscp>::cfg_rehash(int, int, int) [33] unit::relabel(hash *, SUBST_METHOD, char)
 [627] context::~context(void) [304] hash_table<char, char>::cfg_rehash(int, int, int) [319] agent::relax(void)
 [696] r_absol::~r_absol(void) [175] check_cfg_version(char const *) [373] release(char **) (interf.cc)
 [660] r_block::~r_block(void) [267] rule::check_child(rule *) [40] slab<20>::release(void *)
 [133] r_postp::~r_postp(void) [344] block_rule::check_children(void) [197] slab<40>::release(void *)
 [681] r_raise::~r_raise(void) [272] rule::check_children(void) [301] stream::release_agents(void)
 [656] r_regex::~r_regex(void) [337] cond_rule::check_children(void) [160] hash_table<char, file>::remove(char const *)
 [106] r_subst::~r_subst(void) [207] parser::chrlev(unsigned char) [137] hash_table<char, option>::remove(char const *)
 [697] a_accept::~a_accept(void) [338] wavefm::chunk_become(char *, int) [110] hash_table<char, a_ttscp>::remove(char const *)
 [638] a_output::~a_output(void) [153] claim(char const *, char const *, char const *, char const *, char const *, void (*)(char *, int)) [233] reply(char const *)
 [698] lpcfloat::~lpcfloat(void) [173] voice::claim_all(void) [276] reply(char const *, context *) (ttscp.cc)
 [667] r_choice::~r_choice(void) [290] cmd_apply(char *, a_ttscp *) [262] a_output::report(bool, int)
 [671] r_inside::~r_inside(void) [109] cmd_data(char *, a_ttscp *) [392] reset_soundcard(int) (waveform.cc)
 [684] r_smooth::~r_smooth(void) [123] cmd_delhandle(char *, a_ttscp *) [132] resolve_vars(char *, hash *, text *)
 [673] r_switch::~r_switch(void) [313] cmd_done(char *, a_ttscp *) [335] mbrsyn::restart_mbrola(voice *)
 [114] cond_rule::~cond_rule(void) [377] cmd_pass(char *, a_ttscp *) [103] restrict_options(void)
 [651] oa_wavefm::~oa_wavefm(void) [80] cmd_setl(char *, a_ttscp *) [257] rule_weight(char const *, text *)
 [645] r_contour::~r_contour(void) [92] cmd_shutdown(char *, a_ttscp *) [75] a_protocol::run(void)
 [680] r_nothing::~r_nothing(void) [291] cmd_stream(char *, a_ttscp *) [171] a_disconnector::run(void)
 [107] r_prosody::~r_prosody(void) [10] lang::compile_rules(void) [174] a_syn::run(void)
 [648] r_regress::~r_regress(void) [11] compile_rules(void) (interf.cc) [64] a_segs::run(void)
 [699] hash_table<char, file>::~hash_table(void) [345] compose_pathname(char const *, char const *, char const *) [70] a_ssif::run(void)
 [126] hash_table<char, option>::~hash_table(void) [378] compose_pathname(char const *, char const *) [127] a_ascii::run(void)
 [628] hash_table<char, a_ttscp>::~hash_table(void) [59] config_init(void) [302] a_input::run(void)
  [72] hash_table<char, char>::~hash_table(void) [139] config_release(void) [27] a_rules::run(void)
 [687] slab<20>::~slab(void) [236] unit::contains(char, booltab<char> *) [5] a_synth::run(void)
 [700] slab<328>::~slab(void) [85] unit::contour(char, int *, int, int, FIT_IDX, bool) [115] a_accept::run(void)
 [701] slab<40>::~slab(void) [218] unit::count(char)     [320] a_output::run(void)
 [702] function<char>::~function(void) [248] cow(cowabilium **, int, int, int) [321] oa_wavefm::run(void)
 [662] oa_ascii<6>::~oa_ascii(void) [379] cow_catharsis(void) [76] a_ttscp::run_command(char *)
 [632] a_protocol::a_protocol(void) [282] cow_claim(void) [393] running_at_localhost(void)
 [140] block_rule::block_rule(void) [263] cow_configuration(configuration **) [38] wavefm::sample(unsigned int)
 [674] cowabilium::cowabilium(void) [275] cow_free(cowabilium *, option *, void *) (options.cc) [180] unit::sanity(void)
  [23] r_progress::r_progress(char *) [283] cow_unclaim(configuration *) [237] sched_sel(void)
 [146] hashing_rule::hashing_rule(char *) [274] cow_unstring(cowabilium *, option *) [238] agent::schedule(void)
 [703] configuration::configuration(void) [380] daemonize(void) (daemon.cc) [65] unit::seg(hash *)
 [704] a_disconnector::a_disconnector(void) [181] debug_wanted(int, int) [69] unit::segs(char, hash *)
 [158] static_configuration::static_configuration(void) [333] a_output::decode(void) [215] select_socket(bool) (daemon.cc)
 [626] a_io::a_io(char const *, DATA_TYPE, DATA_TYPE) [339] oa_ascii<6>::decode(void) [234] sendstring(char const *) (ttscp.cc)
  [48] hash::hash(hash *)    [340] decode_string(unsigned char *, int) [4] server(void)
  [19] hash::hash(char const *, int, int, int, int, char const *, bool, char const *, char (*)(char)) [341] decode_string(char *, int) [228] server_reinit_check(void) (daemon.cc)
 [676] hash::hash(int)        [56] marker::derived(void)  [94] server_shutdown(void)
  [58] lang::lang(char const *, char const *) [314] wavefm::detach(int) [113] rule::set_dbg_tag(text *)
 [670] r_if::r_if(char *, text *, hash *) [309] a_disconnector::disconnect(a_protocol *) [359] void set_enum_option<SYNTH_TYPE>(option *, char const *, char *, char *)
 [117] rule::rule(char *)    [131] a_ttscp::disconnect(void) [394] void set_enum_option<OUT_ML>(option *, char const *, char *, char *)
 [145] text::text(char const *, char const *, char const *, char const *, bool) [353] hash_table<char, file>::dissolvetree(hsearchtree<char, file> *) [201] unit::set_father(unit *)
 [705] unit::unit(void)      [125] hash_table<char, option>::dissolvetree(hsearchtree<char, option> *) [328] block_rule::set_level(char, char)
 [639] unit::unit(char, parser *) [247] hash_table<char, a_ttscp>::dissolvetree(hsearchtree<char, a_ttscp> *) [349] r_if::set_level(char, char)
 [619] unit::unit(char, int)  [47] hash_table<char, char>::dissolvetree(hsearchtree<char, char> *) [268] rule::set_level(char, char)
 [663] a_syn::a_syn(void)    [331] do_alloc_code(wchar_t, unsigned char) (encoding.cc) [352] r_subst::set_level(char, char)
 [622] agent::agent(DATA_TYPE, DATA_TYPE) [315] do_relax(void *, DATA_TYPE) [82] set_option(option *, char const *)
 [154] r_seg::r_seg(char *)   [81] do_set(char *, context *) (ttscp.cc) [77] set_option(option *, char const *, void *)
  [12] rules::rules(char const *, char const *) [354] text::done(void) [88] set_option(char *, char *, void *, hash_table<char, option> *) (options.cc)
 [688] synth::synth(void)    [381] unit::done(void)      [167] setup_synth(voice *)
  [62] voice::voice(char const *, char const *, lang *) [316] downsample_factor(int, int) (waveform.cc) [311] severity(int)
 [647] a_segs::a_segs(void)  [195] unit::effective(FIT_IDX) [225] sgets(char *, int, int, char *)
 [655] a_ssif::a_ssif(void)  [213] encode_string(unsigned char *, int, bool) [96] configuration::shutdown(void)
 [176] lpcsyn::lpcsyn(voice *) [214] encode_string(char *, int, bool) [369] slab<20>::shutdown(void)
 [618] marker::marker(void)  [223] encode_to_sampa(unsigned char, int) [374] slab<328>::shutdown(void)
 [620] marker::marker(FIT_IDX, bool, int, marker *, float) [211] context::enter(void) [375] slab<40>::shutdown(void)
 [706] mbrsyn::mbrsyn(voice *) [346] enum2str(int, char const *) [395] shutdown_cfgs(void)
 [658] oa_seg::oa_seg(char const *) [95] epos_catharsis(void) [396] shutdown_enc(void)
 [129] parser::parser(char const *, int) [93] epos_done(void) [163] shutdown_file_cache(void)
  [73] r_near::r_near(char *, text *, hash *) [9] epos_init(void) [397] shutdown_hashing(void)
 [165] r_prep::r_prep(char *) [329] esc(char) (rule.cc)  [398] shutdown_unit_markers(void)
 [169] r_syll::r_syll(char *) [362] text::exists(void)   [399] shutdown_units(void)
 [156] r_with::r_with(char *, text *, hash *) [292] agent::finis(bool) [253] unit::split(unit *)
 [640] stream::stream(char *, context *) [293] stream::finis(bool) [264] split_string(char *)
 [652] wavefm::wavefm(voice *) [306] fit(char)           [206] sputs(char const *, int)
 [641] a_ascii::a_ascii(void) [382] floatoven(char *, int) [1] start_unix_daemon(void)
 [642] a_input::a_input(char const *) [259] wavefm::flush(void) [365] stat
 [643] a_rules::a_rules(void) [332] wavefm::flush_deferred(void) [221] str2enum(char const *, char const *, int)
 [659] a_synth::a_synth(void) [360] hash_table<char, file>::fn(char const *) [128] str2units(char const *)
 [664] a_synth::a_synth(DATA_TYPE, DATA_TYPE) [245] hash_table<char, option>::fn(char const *) [39] strdup
 [116] a_ttscp::a_ttscp(int, int) [231] hash_table<char, a_ttscp>::fn(char const *) [222] stretch_sleep_table(int)
 [629] context::context(int, int) [22] hash_table<char, char>::fn(char const *) [42] strip(char *)
 [178] r_absol::r_absol(char *) [348] fopen(char const *, char const *, char const *) [148] text::subfile(char const *)
 [143] r_block::r_block(text *, hash *) [162] hash_table<char, file>::forall(void (*)(char *, file *, void *), void *) [31] unit::subst(hash *, SUBST_METHOD)
 [177] r_postp::r_postp(char *) [260] stream::foreground(void) [30] unit::subst(hash *, int, char *, char *, char *, char *, char *)
  [63] r_raise::r_raise(char *) [261] a_output::foreground(void) [350] text::superfile(void)
 [130] r_regex::r_regex(char *) [159] hash_table<char, file>::fortree(hsearchtree<char, file> *, void (*)(char *, file *, void *), void *) [254] unit::syll_break(char *, unit *)
 [149] r_subst::r_subst(char *) [141] free_all_options(option *, cowabilium *) (options.cc) [212] unit::syllabify(char *)
 [707] a_accept::a_accept(void) [142] free_all_options(void) [244] unit::syllabify(char, char *)
 [644] a_output::a_output(char const *, DATA_TYPE) [41] lpcfloat::frobmod(int, segment, model *, int &, int &) [322] sync_soundcard(int) (waveform.cc)
 [168] lpcfloat::lpcfloat(voice *) [193] unit::gather(char *, char *, bool) [8] lpcsyn::synmod(model, wavefm *)
 [147] r_choice::r_choice(text *, hash *) [194] unit::gather(int *, bool, bool) [7] lpcsyn::synseg(voice *, segment, wavefm *)
  [50] r_inside::r_inside(char *, text *, hash *) [280] wavefm::get_ophase_buff(w_ophase const *) [6] synth::synsegs(voice *, segment *, int, wavefm *)
 [170] r_smooth::r_smooth(char *) [230] wavefm::get_ophase_len(w_ophase const *) [343] mbrsyn::synssif(voice *, char *, wavefm *)
 [150] r_switch::r_switch(text *, hash *) [358] get_quoted(char *) [3] agent::timeslice(void)
 [144] cond_rule::cond_rule(char *, text *, hash *) [355] hash_table<char, option>::get_random(void) [273] wavefm::translate(void)
 [653] oa_wavefm::oa_wavefm(char const *) [371] hash_table<char, a_ttscp>::get_random(void) [366] hash_table<char, file>::translate(char const *)
 [138] r_contour::r_contour(char *) [363] get_timestamp(char *) [252] hash_table<char, option>::translate(char const *)
 [155] r_nothing::r_nothing(void) [317] wavefm::get_total_len(void) [240] hash_table<char, a_ttscp>::translate(char const *)
 [151] r_prosody::r_prosody(char *) [255] get_words(char *, char **, int) [28] hash_table<char, char>::translate(char const *)
  [15] r_regress::r_regress(char *) [383] getaddrbyname(char const *) [66] hash::translate_int(char const *)
 [616] unit::operator delete(void *) [37] text::getline(char *) [43] tree_alloc(void)
 [677] voice::operator delete(void *) [208] parser::gettoken(void) [46] tree_delete(void *)
  [79] marker::operator delete(void *) [232] idle(void) (daemon.cc) [161] uncache_file(char *, file *, void *)
 [104] marker::operator<(marker) [294] parser::init(SYMTABLE) [367] unclaim(file *)
 [617] unit::operator new(unsigned int) [384] init_enc(void) [279] void unexcl<char>(char *)
 [678] voice::operator new(unsigned int, lang *) [166] a_synth::init_syn(void) [239] unit::unlink(REPARENT)
  [54] marker::operator new(unsigned int) [295] parser::initables(SYMTABLE) [266] wavefm::update_ophase(void)
 [689] __static_initialization_and_destruction_0 (agent.cc) [203] unit::insert(char, bool, char, booltab<char> *, booltab<char> *) [86] update_sampa(int, char const *)
 [708] __static_initialization_and_destruction_0 (ttscp.cc) [202] unit::insert_end(unit *, unit *) [87] update_sampa(void)
 [690] __static_initialization_and_destruction_0 (unit.cc) [184] unit::inside(void) [21] hashing_rule::verify(void)
 [157] __static_initialization_and_destruction_0 (options.cc) [334] oa_seg::insize(void) [269] rule::verify(void)
 [709] __static_initialization_and_destruction_0 (hash.h) [342] oa_ascii<6>::insize(void) [323] voice_switch(char const *)
 [710] hash_table<char, file>::hash_table(int) [305] internal_code(wchar_t, unsigned char) (encoding.cc) [324] wavefm::write_header(void)
 [685] hash_table<char, option>::hash_table(int) [134] invoke_set_action(option *, char const *) [308] unit::write_segs(segment *, int, int)
 [630] hash_table<char, a_ttscp>::hash_table(int) [250] ioctlable(int) (waveform.cc) [327] unit::write_ssif(char *, int, int)
  [49] hash_table<char, char>::hash_table(hash_table<char, char> *) [182] booltab<char>::ismember(char) [216] marker::write_ssif(char *)
 [666] hash_table<char, char>::hash_table(int) [278] function<char>::ismember(char) [224] unit::write_ssif_head(char *)
 [691] slab<20>::slab(int)   [385] just_connect_socket(unsigned int, int) [325] wavefm::written_bytes(void)
 [711] slab<328>::slab(int)  [372] lang_switch(char const *) [187] function<char>::xlat(char)
 [712] slab<40>::slab(int)   [210] context::leave(void)  [229] yread(int, void *, int)
  [16] booltab<char>::booltab(char *) [386] lest_already_running(void) [205] ywrite(int, void const *, int)
  [17] function<char>::function(char const *, char const *, bool) [105] literal_hash(char *) [18] <cycle 1>
 [665] oa_ascii<6>::oa_ascii(char const *) [172] load_charset(char const *) [179] <cycle 2>
 [270] unit::absol(char)     [101] load_config(char const *) [13] <cycle 3>
 [277] access_level(int)      [55] load_config(char const *, char const *, char const *, OPT_STRUCT, void *, lang *) [98] <cycle 4>
 [152] hash_table<char, file>::add(char const *, file const *) [387] load_default_charset(void) [25] <cycle 5>
 [112] hash_table<char, option>::add(char const *, option const *) [20] hashing_rule::load_hash(void) [36] <cycle 6>
 [108] hash_table<char, a_ttscp>::add(char const *, a_ttscp const *) [74] load_languages(char const *) (options.cc)
  [24] hash_table<char, char>::add(char const *, char const *) [44] block_rule::load_rules(rule *, text *, hash *)
